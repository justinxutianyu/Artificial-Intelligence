Archive:  contest_and_teams.zip
   creating: contest-tmp/bin/
   creating: contest-tmp/layouts/
   creating: contest-tmp/teams/
  inflating: contest-tmp/game.py     
  inflating: contest-tmp/contest.html  
  inflating: contest-tmp/textDisplay.py  
  inflating: contest-tmp/mazeGenerator.py  
  inflating: contest-tmp/VERSION     
  inflating: contest-tmp/myTeam.py   
  inflating: contest-tmp/keyboardAgents.py  
  inflating: contest-tmp/autograder.py  
  inflating: contest-tmp/generateTournamentLayouts.py  
  inflating: contest-tmp/baselineTeam.py  
  inflating: contest-tmp/graphicsDisplay.py  
  inflating: contest-tmp/graphicsUtils.py  
  inflating: contest-tmp/pacman.py   
  inflating: contest-tmp/capture_the_flag.png  
  inflating: contest-tmp/contestLayout.png  
  inflating: contest-tmp/unpack.py   
  inflating: contest-tmp/testParser.py  
  inflating: contest-tmp/capture.py  
  inflating: contest-tmp/testClasses.py  
  inflating: contest-tmp/projects.css  
  inflating: contest-tmp/captureAgents.py  
  inflating: contest-tmp/pacmanAgents.py  
  inflating: contest-tmp/distanceCalculator.py  
  inflating: contest-tmp/layout.py   
  inflating: contest-tmp/captureGraphicsDisplay.py  
  inflating: contest-tmp/bracket.png  
  inflating: contest-tmp/ghostAgents.py  
  inflating: contest-tmp/util.py     
  inflating: contest-tmp/capture_the_flag2.png  
   creating: contest-tmp/layouts/layouts/
  inflating: contest-tmp/layouts/contest17Capture.lay  
  inflating: contest-tmp/layouts/testCapture.lay  
  inflating: contest-tmp/layouts/contest03Capture.lay  
  inflating: contest-tmp/layouts/contest14Capture.lay  
  inflating: contest-tmp/layouts/contest20Capture.lay  
  inflating: contest-tmp/layouts/contest15cCapture.lay  
  inflating: contest-tmp/layouts/contest13Capture.lay  
  inflating: contest-tmp/layouts/contest04cCapture.lay  
  inflating: contest-tmp/layouts/contest17cCapture.lay  
  inflating: contest-tmp/layouts/contest18cCapture.lay  
  inflating: contest-tmp/layouts/contest03cCapture.lay  
  inflating: contest-tmp/layouts/contest11Capture.lay  
  inflating: contest-tmp/layouts/contest19cCapture.lay  
  inflating: contest-tmp/layouts/contest16Capture.lay  
  inflating: contest-tmp/layouts/crowdedCapture.lay  
  inflating: contest-tmp/layouts/alleyCapture.lay  
  inflating: contest-tmp/layouts/contest07Capture.lay  
  inflating: contest-tmp/layouts/contest15Capture.lay  
  inflating: contest-tmp/layouts/mediumCapture.lay  
  inflating: contest-tmp/layouts/contest16cCapture.lay  
  inflating: contest-tmp/layouts/contest04Capture.lay  
  inflating: contest-tmp/layouts/bloxCapture.lay  
  inflating: contest-tmp/layouts/contest01cCapture.lay  
  inflating: contest-tmp/layouts/contest06Capture.lay  
  inflating: contest-tmp/layouts/contest05Capture.lay  
  inflating: contest-tmp/layouts/defaultCapture.lay  
  inflating: contest-tmp/layouts/contest18Capture.lay  
  inflating: contest-tmp/layouts/contest02cCapture.lay  
  inflating: contest-tmp/layouts/strategicCapture.lay  
  inflating: contest-tmp/layouts/contest20cCapture.lay  
  inflating: contest-tmp/layouts/contest12Capture.lay  
  inflating: contest-tmp/layouts/jumboCapture.lay  
  inflating: contest-tmp/layouts/contest19Capture.lay  
  inflating: contest-tmp/layouts/fastCapture.lay  
  inflating: contest-tmp/layouts/contest07cCapture.lay  
  inflating: contest-tmp/layouts/tinyCapture.lay  
  inflating: contest-tmp/layouts/contest09Capture.lay  
  inflating: contest-tmp/layouts/contest08Capture.lay  
  inflating: contest-tmp/layouts/contest02Capture.lay  
  inflating: contest-tmp/layouts/contest06cCapture.lay  
  inflating: contest-tmp/layouts/contest10Capture.lay  
  inflating: contest-tmp/layouts/distantCapture.lay  
  inflating: contest-tmp/layouts/contest01Capture.lay  
  inflating: contest-tmp/layouts/officeCapture.lay  
  inflating: contest-tmp/layouts/contest05cCapture.lay  
   creating: contest-tmp/teams/123/
   creating: contest-tmp/teams/2Defence/
   creating: contest-tmp/teams/404/
   creating: contest-tmp/teams/404TeamNamenotfound/
   creating: contest-tmp/teams/AIFighter/
   creating: contest-tmp/teams/AI_Rookie/
   creating: contest-tmp/teams/ARP/
   creating: contest-tmp/teams/AliEn/
   creating: contest-tmp/teams/Alive/
   creating: contest-tmp/teams/Allogator/
   creating: contest-tmp/teams/Artificialidiot/
   creating: contest-tmp/teams/Avatar/
   creating: contest-tmp/teams/BetaPacMc3/
   creating: contest-tmp/teams/BetterThanBaselineTeam/
   creating: contest-tmp/teams/Chicken-Dinner/
   creating: contest-tmp/teams/Coder/
   creating: contest-tmp/teams/DEVGRU/
   creating: contest-tmp/teams/DSS/
   creating: contest-tmp/teams/Dark-Flame-Master/
   creating: contest-tmp/teams/Deox/
   creating: contest-tmp/teams/ERC/
   creating: contest-tmp/teams/ES/
   creating: contest-tmp/teams/EvilGeniuses/
   creating: contest-tmp/teams/EvilPacman/
   creating: contest-tmp/teams/FGO/
   creating: contest-tmp/teams/FatHeadFish/
   creating: contest-tmp/teams/FatMan/
   creating: contest-tmp/teams/GrantWard/
   creating: contest-tmp/teams/H2O2/
   creating: contest-tmp/teams/HelloKitty/
   creating: contest-tmp/teams/HelloPacman/
   creating: contest-tmp/teams/HelloTeam1213/
   creating: contest-tmp/teams/HelloWorld/
   creating: contest-tmp/teams/Higher_Brothers/
   creating: contest-tmp/teams/HouseofPac/
   creating: contest-tmp/teams/IHateCapsule/
   creating: contest-tmp/teams/IPhoneX/
   creating: contest-tmp/teams/ITCrowd/
   creating: contest-tmp/teams/InfiniteLoop/
   creating: contest-tmp/teams/Inky_Blinky_and_Clyde/
   creating: contest-tmp/teams/InvictusGaming/
   creating: contest-tmp/teams/InvincibleGhosts/
   creating: contest-tmp/teams/MMM/
   creating: contest-tmp/teams/MrTuring/
   creating: contest-tmp/teams/New_continue/
   creating: contest-tmp/teams/OffDef/
   creating: contest-tmp/teams/PACMAN/
   creating: contest-tmp/teams/PacKid/
   creating: contest-tmp/teams/PacMan/
   creating: contest-tmp/teams/PacMaster/
   creating: contest-tmp/teams/PacMax/
   creating: contest-tmp/teams/PaceMin/
   creating: contest-tmp/teams/PacmanNotNull/
   creating: contest-tmp/teams/Pacmon-Sun-and-Moon/
   creating: contest-tmp/teams/Pacsain_Bolt/
   creating: contest-tmp/teams/PandaTV/
   creating: contest-tmp/teams/Patman/
   creating: contest-tmp/teams/Pokeman/
   creating: contest-tmp/teams/QCR/
   creating: contest-tmp/teams/R2D2/
   creating: contest-tmp/teams/RMY/
   creating: contest-tmp/teams/RNG/
   creating: contest-tmp/teams/RandomTeamVI/
   creating: contest-tmp/teams/RealDaddy/
   creating: contest-tmp/teams/Reaper/
   creating: contest-tmp/teams/RoguePi/
   creating: contest-tmp/teams/SBAI_PURE/
   creating: contest-tmp/teams/ShallowMind/
   creating: contest-tmp/teams/SunMicrosystemsInc/
   creating: contest-tmp/teams/TLH/
   creating: contest-tmp/teams/TeamLads_Q_H/
   creating: contest-tmp/teams/WaterMelon/
   creating: contest-tmp/teams/Werewolf/
   creating: contest-tmp/teams/WindyDay/
   creating: contest-tmp/teams/Y.Z.S/
   creating: contest-tmp/teams/ZZZTeam/
   creating: contest-tmp/teams/ai-pddl/
   creating: contest-tmp/teams/betaGo/
   creating: contest-tmp/teams/bias/
   creating: contest-tmp/teams/chickendinner/
   creating: contest-tmp/teams/coffee/
   creating: contest-tmp/teams/contestrndmnm/
   creating: contest-tmp/teams/deltaforce/
   creating: contest-tmp/teams/disabledPacman4/
   creating: contest-tmp/teams/farseer/
   creating: contest-tmp/teams/friedOreo/
   creating: contest-tmp/teams/go_home_safe/
   creating: contest-tmp/teams/iceice/
   creating: contest-tmp/teams/lexus/
   creating: contest-tmp/teams/loserswishes/
   creating: contest-tmp/teams/marshmallow/
   creating: contest-tmp/teams/montecarlo2/
   creating: contest-tmp/teams/myADmilk/
   creating: contest-tmp/teams/oEtFKY/
   creating: contest-tmp/teams/omega-go/
   creating: contest-tmp/teams/pacsain_bolt/
   creating: contest-tmp/teams/pass/
   creating: contest-tmp/teams/press_any_key/
   creating: contest-tmp/teams/song2/
   creating: contest-tmp/teams/staff_team_basic/
   creating: contest-tmp/teams/staff_team_medium/
   creating: contest-tmp/teams/staff_team_top/
   creating: contest-tmp/teams/super_scaper/
   creating: contest-tmp/teams/superpacman/
   creating: contest-tmp/teams/testrunning/
   creating: contest-tmp/teams/tryingAIMen/
   creating: contest-tmp/teams/trytrytrytry/
   creating: contest-tmp/teams/umr1/
   creating: contest-tmp/teams/victoriasSecret/
   creating: contest-tmp/teams/wings/
   creating: contest-tmp/teams/worstPacman/
   creating: contest-tmp/teams/PacMan/__MACOSX/
  inflating: contest-tmp/teams/PacMan/myTeam.py  
  inflating: contest-tmp/teams/PacMan/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/HelloKitty/__MACOSX/
  inflating: contest-tmp/teams/HelloKitty/myTeam.py  
  inflating: contest-tmp/teams/HelloKitty/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/chickendinner/layouts/
  inflating: contest-tmp/teams/chickendinner/game.py  
  inflating: contest-tmp/teams/chickendinner/contest.html  
  inflating: contest-tmp/teams/chickendinner/textDisplay.py  
  inflating: contest-tmp/teams/chickendinner/score  
  inflating: contest-tmp/teams/chickendinner/mazeGenerator.py  
  inflating: contest-tmp/teams/chickendinner/group.txt  
  inflating: contest-tmp/teams/chickendinner/ffTeam.py  
  inflating: contest-tmp/teams/chickendinner/myTeam.py  
  inflating: contest-tmp/teams/chickendinner/mazeGenerator.pyc  
  inflating: contest-tmp/teams/chickendinner/keyboardAgents.py  
  inflating: contest-tmp/teams/chickendinner/autograder.py  
  inflating: contest-tmp/teams/chickendinner/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/chickendinner/dummyAgents.py  
  inflating: contest-tmp/teams/chickendinner/baselineTeam.py  
  inflating: contest-tmp/teams/chickendinner/pacman-domain.pddl~  
  inflating: contest-tmp/teams/chickendinner/graphicsDisplay.py  
  inflating: contest-tmp/teams/chickendinner/graphicsUtils.py  
  inflating: contest-tmp/teams/chickendinner/pacman.py  
  inflating: contest-tmp/teams/chickendinner/capture_the_flag.png  
  inflating: contest-tmp/teams/chickendinner/contestLayout.png  
  inflating: contest-tmp/teams/chickendinner/unpack.py  
  inflating: contest-tmp/teams/chickendinner/problem2.pddl  
  inflating: contest-tmp/teams/chickendinner/dummyTeam.py  
  inflating: contest-tmp/teams/chickendinner/testParser.py  
  inflating: contest-tmp/teams/chickendinner/problem3.pddl  
  inflating: contest-tmp/teams/chickendinner/capture.py  
  inflating: contest-tmp/teams/chickendinner/testClasses.py  
  inflating: contest-tmp/teams/chickendinner/projects.css  
  inflating: contest-tmp/teams/chickendinner/captureAgents.py  
  inflating: contest-tmp/teams/chickendinner/pacmanAgents.py  
  inflating: contest-tmp/teams/chickendinner/distanceCalculator.py  
  inflating: contest-tmp/teams/chickendinner/.gitignore  
  inflating: contest-tmp/teams/chickendinner/problem1.pddl  
  inflating: contest-tmp/teams/chickendinner/ghost-domain.pddl  
  inflating: contest-tmp/teams/chickendinner/layout.py  
  inflating: contest-tmp/teams/chickendinner/runFromPacmanProblem.pddl  
  inflating: contest-tmp/teams/chickendinner/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/chickendinner/bracket.png  
  inflating: contest-tmp/teams/chickendinner/pacman-domain.pddl  
  inflating: contest-tmp/teams/chickendinner/ghostAgents.py  
  inflating: contest-tmp/teams/chickendinner/util.py  
  inflating: contest-tmp/teams/chickendinner/results.txt  
  inflating: contest-tmp/teams/chickendinner/capture_the_flag2.png  
  inflating: contest-tmp/teams/chickendinner/README.txt  
  inflating: contest-tmp/teams/chickendinner/problem4.pddl  
  inflating: contest-tmp/teams/chickendinner/killGhostProblem.pddl  
  inflating: contest-tmp/teams/chickendinner/layouts/testCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/simpleCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/simpleCapture.lay~  
  inflating: contest-tmp/teams/chickendinner/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/officeCapture.lay  
   creating: contest-tmp/teams/404TeamNamenotfound/404TeamNamenotfound/
   creating: contest-tmp/teams/404TeamNamenotfound/__MACOSX/
  inflating: contest-tmp/teams/404TeamNamenotfound/404TeamNamenotfound/myTeam.py  
   creating: contest-tmp/teams/404TeamNamenotfound/__MACOSX/404TeamNamenotfound/
  inflating: contest-tmp/teams/404TeamNamenotfound/__MACOSX/404TeamNamenotfound/._myTeam.py  
  inflating: contest-tmp/teams/pacsain_bolt/myTeam.py  
  inflating: contest-tmp/teams/2Defence/myTeam.py  
   creating: contest-tmp/teams/123/__MACOSX/
  inflating: contest-tmp/teams/123/myTeam.py  
  inflating: contest-tmp/teams/123/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/superpacman/myTeam.py  
  inflating: contest-tmp/teams/TeamLads_Q_H/myTeam.py  
  inflating: contest-tmp/teams/TeamLads_Q_H/weights.p  
   creating: contest-tmp/teams/PACMAN/PDDL/
  inflating: contest-tmp/teams/PACMAN/qLearning.py  
  inflating: contest-tmp/teams/PACMAN/group.txt  
  inflating: contest-tmp/teams/PACMAN/myTeam.py  
  inflating: contest-tmp/teams/PACMAN/README.txt  
  inflating: contest-tmp/teams/MrTuring/myTeam.py  
  inflating: contest-tmp/teams/MrTuring/README.txt  
   creating: contest-tmp/teams/coffee/Project1/
   creating: contest-tmp/teams/coffee/__MACOSX/
   creating: contest-tmp/teams/coffee/contest/
   creating: contest-tmp/teams/coffee/search/
   creating: contest-tmp/teams/coffee/__MACOSX/contest/
  inflating: contest-tmp/teams/coffee/__MACOSX/._contest  
   creating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._capture_the_flag2.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._contestLayout.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._game.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._capture_the_flag.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._textDisplay.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._contest.html  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._projects.css  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._pacmanAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._keyboardAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._VERSION  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._mazeGenerator.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._unpack.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._capture.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._autograder.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._captureAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._graphicsUtils.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._testClasses.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._pacman.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._graphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._util.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._layout.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._.DS_Store  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._baselineTeam.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._bracket.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._testParser.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._layouts  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._ghostAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._distanceCalculator.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/coffee/Project1/project1.zip  
   creating: contest-tmp/teams/coffee/contest/.idea/
   creating: contest-tmp/teams/coffee/contest/layouts/
  inflating: contest-tmp/teams/coffee/contest/game.py  
  inflating: contest-tmp/teams/coffee/contest/contest.html  
  inflating: contest-tmp/teams/coffee/contest/textDisplay.py  
  inflating: contest-tmp/teams/coffee/contest/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/coffee/contest/score  
  inflating: contest-tmp/teams/coffee/contest/mazeGenerator.py  
  inflating: contest-tmp/teams/coffee/contest/VERSION  
  inflating: contest-tmp/teams/coffee/contest/myTeam.py  
  inflating: contest-tmp/teams/coffee/contest/anotherTeam.pyc  
  inflating: contest-tmp/teams/coffee/contest/keyboardAgents.py  
  inflating: contest-tmp/teams/coffee/contest/autograder.py  
  inflating: contest-tmp/teams/coffee/contest/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/coffee/contest/baselineTeam.py  
  inflating: contest-tmp/teams/coffee/contest/myTeam.pyc  
  inflating: contest-tmp/teams/coffee/contest/keyboardAgents.pyc  
  inflating: contest-tmp/teams/coffee/contest/graphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/contest/graphicsUtils.py  
  inflating: contest-tmp/teams/coffee/contest/layout.pyc  
  inflating: contest-tmp/teams/coffee/contest/pacman.py  
  inflating: contest-tmp/teams/coffee/contest/capture_the_flag.png  
  inflating: contest-tmp/teams/coffee/contest/contestLayout.png  
  inflating: contest-tmp/teams/coffee/contest/unpack.py  
  inflating: contest-tmp/teams/coffee/contest/testParser.py  
  inflating: contest-tmp/teams/coffee/contest/anotherTeam.py  
  inflating: contest-tmp/teams/coffee/contest/capture.py  
  inflating: contest-tmp/teams/coffee/contest/.DS_Store  
  inflating: contest-tmp/teams/coffee/contest/baselineTeam.pyc  
  inflating: contest-tmp/teams/coffee/contest/captureAgents.pyc  
  inflating: contest-tmp/teams/coffee/contest/testClasses.py  
  inflating: contest-tmp/teams/coffee/contest/projects.css  
  inflating: contest-tmp/teams/coffee/contest/captureAgents.py  
  inflating: contest-tmp/teams/coffee/contest/pacmanAgents.py  
  inflating: contest-tmp/teams/coffee/contest/distanceCalculator.py  
  inflating: contest-tmp/teams/coffee/contest/graphicsUtils.pyc  
  inflating: contest-tmp/teams/coffee/contest/util.pyc  
  inflating: contest-tmp/teams/coffee/contest/layout.py  
  inflating: contest-tmp/teams/coffee/contest/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/contest/bracket.png  
  inflating: contest-tmp/teams/coffee/contest/ghostAgents.py  
  inflating: contest-tmp/teams/coffee/contest/distanceCalculator.pyc  
  inflating: contest-tmp/teams/coffee/contest/util.py  
  inflating: contest-tmp/teams/coffee/contest/capture_the_flag2.png  
  inflating: contest-tmp/teams/coffee/contest/game.pyc  
  inflating: contest-tmp/teams/coffee/contest/layouts/testCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/officeCapture.lay  
   creating: contest-tmp/teams/coffee/contest/.idea/inspectionProfiles/
  inflating: contest-tmp/teams/coffee/contest/.idea/workspace.xml  
  inflating: contest-tmp/teams/coffee/contest/.idea/misc.xml  
  inflating: contest-tmp/teams/coffee/contest/.idea/modules.xml  
  inflating: contest-tmp/teams/coffee/contest/.idea/contest.iml  
  inflating: contest-tmp/teams/coffee/contest/.idea/inspectionProfiles/Project_Default.xml  
   creating: contest-tmp/teams/coffee/search/layouts/
   creating: contest-tmp/teams/coffee/search/test_cases/
  inflating: contest-tmp/teams/coffee/search/game.py  
  inflating: contest-tmp/teams/coffee/search/textDisplay.py  
  inflating: contest-tmp/teams/coffee/search/textDisplay.pyc  
  inflating: contest-tmp/teams/coffee/search/grading.py  
  inflating: contest-tmp/teams/coffee/search/VERSION  
  inflating: contest-tmp/teams/coffee/search/keyboardAgents.py  
  inflating: contest-tmp/teams/coffee/search/autograder.py  
  inflating: contest-tmp/teams/coffee/search/searchTestClasses.py  
  inflating: contest-tmp/teams/coffee/search/ghostAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/searchAgents.py  
  inflating: contest-tmp/teams/coffee/search/testParser.pyc  
  inflating: contest-tmp/teams/coffee/search/keyboardAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/pacmanAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/graphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/search/searchAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/graphicsUtils.py  
  inflating: contest-tmp/teams/coffee/search/layout.pyc  
  inflating: contest-tmp/teams/coffee/search/pacman.py  
  inflating: contest-tmp/teams/coffee/search/commands.txt  
  inflating: contest-tmp/teams/coffee/search/pacman.pyc  
  inflating: contest-tmp/teams/coffee/search/testParser.py  
  inflating: contest-tmp/teams/coffee/search/submission_autograder.py  
  inflating: contest-tmp/teams/coffee/search/grading.pyc  
  inflating: contest-tmp/teams/coffee/search/testClasses.py  
  inflating: contest-tmp/teams/coffee/search/pacmanAgents.py  
  inflating: contest-tmp/teams/coffee/search/graphicsDisplay.pyc  
  inflating: contest-tmp/teams/coffee/search/graphicsUtils.pyc  
  inflating: contest-tmp/teams/coffee/search/util.pyc  
  inflating: contest-tmp/teams/coffee/search/search.py  
  inflating: contest-tmp/teams/coffee/search/projectParams.pyc  
  inflating: contest-tmp/teams/coffee/search/searchTestClasses.pyc  
  inflating: contest-tmp/teams/coffee/search/layout.py  
  inflating: contest-tmp/teams/coffee/search/eightpuzzle.py  
  inflating: contest-tmp/teams/coffee/search/ghostAgents.py  
  inflating: contest-tmp/teams/coffee/search/util.py  
  inflating: contest-tmp/teams/coffee/search/testClasses.pyc  
  inflating: contest-tmp/teams/coffee/search/search.pyc  
  inflating: contest-tmp/teams/coffee/search/game.pyc  
  inflating: contest-tmp/teams/coffee/search/projectParams.py  
  inflating: contest-tmp/teams/coffee/search/layouts/testMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/openClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinySafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumScaryMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallSafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinyMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinyCorners.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/openMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumCorners.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/contoursMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/originalClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/openSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/minimaxClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumDottedMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/trappedClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/oddSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/testSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/trickySearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/testClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumSafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/greedySearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/powerClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/contestClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinySearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/trickyClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigSafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/capsuleClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/boxSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigCorners.lay  
   creating: contest-tmp/teams/coffee/search/test_cases/q1/
   creating: contest-tmp/teams/coffee/search/test_cases/q2/
   creating: contest-tmp/teams/coffee/search/test_cases/q3/
   creating: contest-tmp/teams/coffee/search/test_cases/q4/
   creating: contest-tmp/teams/coffee/search/test_cases/q5/
   creating: contest-tmp/teams/coffee/search/test_cases/q6/
   creating: contest-tmp/teams/coffee/search/test_cases/q7/
   creating: contest-tmp/teams/coffee/search/test_cases/q8/
  inflating: contest-tmp/teams/coffee/search/test_cases/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q5/corner_tiny_corner.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q5/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q5/corner_tiny_corner.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_infinite.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/pacman_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_bfs_vs_dfs.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_infinite.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_bfs_vs_dfs.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/pacman_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_1_graph_heuristic.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_0.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_1_graph_heuristic.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_2_manhattan.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_3_goalAtDequeue.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_0.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_2_manhattan.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_3_goalAtDequeue.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_1_problemC.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_infinite.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_3_problemW.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_bfs_vs_dfs.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_2_problemE.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_2_problemE.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_4_testSearch.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_infinite.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_4_testSearch.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_0_graph.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_5_goalAtDequeue.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_5_goalAtDequeue.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_3_problemW.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_0_graph.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_1_problemC.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_bfs_vs_dfs.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_5.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_4.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_grade_tricky.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_5.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_grade_tricky.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_13.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_2.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_11.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_12.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_8.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_14.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_12.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_10.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_11.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_17.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_14.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_15.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_7.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_16.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_3.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_9.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_16.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_2.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_6.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_9.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_13.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_6.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_15.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_3.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_17.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_4.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_10.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_8.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_7.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_8.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_7.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_10.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_13.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_4.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_5.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_3.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_11.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_5.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_9.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_10.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_3.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_12.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_2.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_12.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_2.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_4.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_7.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_13.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_9.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_6.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_11.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_8.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_6.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_infinite.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/pacman_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_bfs_vs_dfs.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_infinite.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_bfs_vs_dfs.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/pacman_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_2.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/medium_corners.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_2.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_3.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/medium_corners.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_3.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_1.solution  
   creating: contest-tmp/teams/FGO/__MACOSX/
   creating: contest-tmp/teams/FGO/bin/
   creating: contest-tmp/teams/FGO/layouts/
  inflating: contest-tmp/teams/FGO/game.py  
  inflating: contest-tmp/teams/FGO/contest.html  
  inflating: contest-tmp/teams/FGO/textDisplay.py  
  inflating: contest-tmp/teams/FGO/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/FGO/score  
  inflating: contest-tmp/teams/FGO/mazeGenerator.py  
  inflating: contest-tmp/teams/FGO/VERSION  
  inflating: contest-tmp/teams/FGO/myTeam.py  
  inflating: contest-tmp/teams/FGO/keyboardAgents.py  
  inflating: contest-tmp/teams/FGO/autograder.py  
  inflating: contest-tmp/teams/FGO/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/FGO/qlearning.py  
  inflating: contest-tmp/teams/FGO/myTeamtest.pyc  
  inflating: contest-tmp/teams/FGO/baselineTeam.py  
  inflating: contest-tmp/teams/FGO/keyboardAgents.pyc  
  inflating: contest-tmp/teams/FGO/graphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/graphicsUtils.py  
  inflating: contest-tmp/teams/FGO/layout.pyc  
  inflating: contest-tmp/teams/FGO/pacman.py  
  inflating: contest-tmp/teams/FGO/capture.pyc  
  inflating: contest-tmp/teams/FGO/capture_the_flag.png  
  inflating: contest-tmp/teams/FGO/contestLayout.png  
  inflating: contest-tmp/teams/FGO/unpack.py  
  inflating: contest-tmp/teams/FGO/testParser.py  
  inflating: contest-tmp/teams/FGO/capture.py  
  inflating: contest-tmp/teams/FGO/captureAgents.pyc  
  inflating: contest-tmp/teams/FGO/testClasses.py  
  inflating: contest-tmp/teams/FGO/projects.css  
  inflating: contest-tmp/teams/FGO/captureAgents.py  
  inflating: contest-tmp/teams/FGO/pacmanAgents.py  
  inflating: contest-tmp/teams/FGO/distanceCalculator.py  
  inflating: contest-tmp/teams/FGO/graphicsUtils.pyc  
  inflating: contest-tmp/teams/FGO/qlearning.pyc  
  inflating: contest-tmp/teams/FGO/util.pyc  
  inflating: contest-tmp/teams/FGO/layout.py  
  inflating: contest-tmp/teams/FGO/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/bracket.png  
  inflating: contest-tmp/teams/FGO/ghostAgents.py  
  inflating: contest-tmp/teams/FGO/distanceCalculator.pyc  
  inflating: contest-tmp/teams/FGO/util.py  
  inflating: contest-tmp/teams/FGO/capture_the_flag2.png  
  inflating: contest-tmp/teams/FGO/game.pyc  
   creating: contest-tmp/teams/FGO/layouts/layouts/
  inflating: contest-tmp/teams/FGO/layouts/testCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/officeCapture.lay  
   creating: contest-tmp/teams/FGO/bin/bin/
  inflating: contest-tmp/teams/FGO/bin/ff  
   creating: contest-tmp/teams/FGO/__MACOSX/bin/
   creating: contest-tmp/teams/FGO/__MACOSX/layouts/
  inflating: contest-tmp/teams/FGO/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._game.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/FGO/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/FGO/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/FGO/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._bin  
  inflating: contest-tmp/teams/FGO/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._util.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._qlearning.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._layouts  
  inflating: contest-tmp/teams/FGO/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._layouts  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/bin/._bin  
  inflating: contest-tmp/teams/FGO/__MACOSX/bin/._ff  
  inflating: contest-tmp/teams/Coder/group.txt  
  inflating: contest-tmp/teams/Coder/myTeam.py  
  inflating: contest-tmp/teams/Coder/ghost_problem.pddl  
  inflating: contest-tmp/teams/Coder/ghost v2.pddl  
  inflating: contest-tmp/teams/Coder/pacman_problem.pddl  
  inflating: contest-tmp/teams/Coder/readme.txt  
  inflating: contest-tmp/teams/Coder/pacman v2.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/group.txt  
  inflating: contest-tmp/teams/PacmanNotNull/myTeam.py  
  inflating: contest-tmp/teams/PacmanNotNull/ghost_problem.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/ghost_domain.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/pacman_problem.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/pacman_domain.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/README.txt  
   creating: contest-tmp/teams/Dark-Flame-Master/layouts/
  inflating: contest-tmp/teams/Dark-Flame-Master/game.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/contest.html  
  inflating: contest-tmp/teams/Dark-Flame-Master/textDisplay.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/mazeGenerator.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/VERSION  
  inflating: contest-tmp/teams/Dark-Flame-Master/myTeam.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/keyboardAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/autograder.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/baselineTeam.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/graphicsDisplay.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/graphicsUtils.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/pacman.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/capture_the_flag.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/contestLayout.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/unpack.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/testParser.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/capture.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/testClasses.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/projects.css  
  inflating: contest-tmp/teams/Dark-Flame-Master/captureAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/pacmanAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/distanceCalculator.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/layout.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/bracket.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/ghostAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/util.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/capture_the_flag2.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/testCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/officeCapture.lay  
  inflating: contest-tmp/teams/H2O2/myTeam.py  
  inflating: contest-tmp/teams/H2O2/README.txt  
  inflating: contest-tmp/teams/HelloTeam1213/myTeam.py  
  inflating: contest-tmp/teams/testrunning/myTeam.py  
  inflating: contest-tmp/teams/GrantWard/myTeam.py  
  inflating: contest-tmp/teams/Deox/myTeam.py  
  inflating: contest-tmp/teams/pass/myTeam.py  
   creating: contest-tmp/teams/deltaforce/layouts/
  inflating: contest-tmp/teams/deltaforce/game.py  
  inflating: contest-tmp/teams/deltaforce/contest.html  
  inflating: contest-tmp/teams/deltaforce/textDisplay.py  
  inflating: contest-tmp/teams/deltaforce/mazeGenerator.py  
  inflating: contest-tmp/teams/deltaforce/VERSION  
  inflating: contest-tmp/teams/deltaforce/myTeam.py  
  inflating: contest-tmp/teams/deltaforce/keyboardAgents.py  
  inflating: contest-tmp/teams/deltaforce/autograder.py  
  inflating: contest-tmp/teams/deltaforce/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/deltaforce/baselineTeam.py  
  inflating: contest-tmp/teams/deltaforce/graphicsDisplay.py  
  inflating: contest-tmp/teams/deltaforce/graphicsUtils.py  
  inflating: contest-tmp/teams/deltaforce/pacman.py  
  inflating: contest-tmp/teams/deltaforce/capture_the_flag.png  
  inflating: contest-tmp/teams/deltaforce/contestLayout.png  
  inflating: contest-tmp/teams/deltaforce/unpack.py  
  inflating: contest-tmp/teams/deltaforce/testParser.py  
  inflating: contest-tmp/teams/deltaforce/capture.py  
  inflating: contest-tmp/teams/deltaforce/testClasses.py  
  inflating: contest-tmp/teams/deltaforce/projects.css  
  inflating: contest-tmp/teams/deltaforce/captureAgents.py  
  inflating: contest-tmp/teams/deltaforce/pacmanAgents.py  
  inflating: contest-tmp/teams/deltaforce/distanceCalculator.py  
  inflating: contest-tmp/teams/deltaforce/layout.py  
  inflating: contest-tmp/teams/deltaforce/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/deltaforce/bracket.png  
  inflating: contest-tmp/teams/deltaforce/ghostAgents.py  
  inflating: contest-tmp/teams/deltaforce/util.py  
  inflating: contest-tmp/teams/deltaforce/capture_the_flag2.png  
  inflating: contest-tmp/teams/deltaforce/layouts/testCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/officeCapture.lay  
   creating: contest-tmp/teams/marshmallow/__MACOSX/
  inflating: contest-tmp/teams/marshmallow/myTeam.py  
  inflating: contest-tmp/teams/marshmallow/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/
   creating: contest-tmp/teams/SunMicrosystemsInc/pddl/
  inflating: contest-tmp/teams/SunMicrosystemsInc/myTeam.py  
  inflating: contest-tmp/teams/SunMicrosystemsInc/README.txt  
   creating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/pddl/
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/._README.txt  
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/pddl/._README.txt  
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/pddl/._.DS_Store  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/pacman-problem.pddl  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/pacman-layout.txt  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/.DS_Store  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/pacman-domain.pddl  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/README.txt  
   creating: contest-tmp/teams/DSS/__MACOSX/
  inflating: contest-tmp/teams/DSS/myTeam.py  
  inflating: contest-tmp/teams/DSS/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/New_continue/myteam.py  
   creating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/
   creating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/group.txt  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/myTeam.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/readme.txt  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/q_learning.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/state_repackage.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/__init__.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/classical_search.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/value_iteration.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/generic_implementation.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/approximate_q_learning.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/deep_q_learning.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/monte_carlo_tree_search.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/recognition.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-problem2.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/ghost-domain-decomposed.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/ghost-problem1.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-domain-decomposed.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-problem3.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-problem1.pddl  
   creating: contest-tmp/teams/farseer/__MACOSX/
   creating: contest-tmp/teams/farseer/farseer/
   creating: contest-tmp/teams/farseer/__MACOSX/farseer/
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_0  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_red  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_3  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_1  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._myTeam.py  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_blue  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_2  
  inflating: contest-tmp/teams/farseer/farseer/qfile_0  
  inflating: contest-tmp/teams/farseer/farseer/myTeam.py  
  inflating: contest-tmp/teams/farseer/farseer/qfile_blue  
  inflating: contest-tmp/teams/farseer/farseer/qfile_3  
  inflating: contest-tmp/teams/farseer/farseer/qfile_1  
  inflating: contest-tmp/teams/farseer/farseer/qfile_2  
  inflating: contest-tmp/teams/farseer/farseer/qfile_red  
   creating: contest-tmp/teams/montecarlo2/.idea/
   creating: contest-tmp/teams/montecarlo2/bin/
   creating: contest-tmp/teams/montecarlo2/layouts/
  inflating: contest-tmp/teams/montecarlo2/game.py  
  inflating: contest-tmp/teams/montecarlo2/contest.html  
  inflating: contest-tmp/teams/montecarlo2/textDisplay.py  
  inflating: contest-tmp/teams/montecarlo2/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/montecarlo2/score  
  inflating: contest-tmp/teams/montecarlo2/mazeGenerator.py  
  inflating: contest-tmp/teams/montecarlo2/VERSION  
  inflating: contest-tmp/teams/montecarlo2/myTeam.py  
  inflating: contest-tmp/teams/montecarlo2/BetaPac_ModeSelHard_vs_montecarlo_contest18Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/mazeGenerator.pyc  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/keyboardAgents.py  
  inflating: contest-tmp/teams/montecarlo2/autograder.py  
  inflating: contest-tmp/teams/montecarlo2/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/montecarlo2/baselineTeam.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_basic_contest17Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/keyboardAgents.pyc  
  inflating: contest-tmp/teams/montecarlo2/myteam.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarloTeam.py  
  inflating: contest-tmp/teams/montecarlo2/graphicsDisplay.py  
  inflating: contest-tmp/teams/montecarlo2/ERC_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/betaGo.py  
  inflating: contest-tmp/teams/montecarlo2/graphicsUtils.py  
  inflating: contest-tmp/teams/montecarlo2/layout.pyc  
  inflating: contest-tmp/teams/montecarlo2/ERC_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/pacman.py  
  inflating: contest-tmp/teams/montecarlo2/capture.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarlo3.py  
  inflating: contest-tmp/teams/montecarlo2/betaGo_vs_RoguePi_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/COMPAI.pyc  
  inflating: contest-tmp/teams/montecarlo2/capture_the_flag.png  
  inflating: contest-tmp/teams/montecarlo2/contestLayout.png  
  inflating: contest-tmp/teams/montecarlo2/betaGo_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/unpack.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo.py  
  inflating: contest-tmp/teams/montecarlo2/hahaTeam.py  
  inflating: contest-tmp/teams/montecarlo2/testParser.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_betaGo_contest17Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/RoguePi_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/capture.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_top_contest03cCapture.replay  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_basic_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/baselineTeam.pyc  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_basic_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/captureAgents.pyc  
  inflating: contest-tmp/teams/montecarlo2/testClasses.py  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/betago.pyc  
  inflating: contest-tmp/teams/montecarlo2/projects.css  
  inflating: contest-tmp/teams/montecarlo2/captureAgents.py  
  inflating: contest-tmp/teams/montecarlo2/pacmanAgents.py  
  inflating: contest-tmp/teams/montecarlo2/distanceCalculator.py  
  inflating: contest-tmp/teams/montecarlo2/RoguePi_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/graphicsUtils.pyc  
  inflating: contest-tmp/teams/montecarlo2/util.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarloTeam.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_top_RANDOM921.replay  
  inflating: contest-tmp/teams/montecarlo2/montecarlo.pyc  
  inflating: contest-tmp/teams/montecarlo2/layout.py  
  inflating: contest-tmp/teams/montecarlo2/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/montecarlo2/bracket.png  
  inflating: contest-tmp/teams/montecarlo2/montecarlo3.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarlo2.py  
  inflating: contest-tmp/teams/montecarlo2/COMPAI.py  
  inflating: contest-tmp/teams/montecarlo2/ghostAgents.py  
  inflating: contest-tmp/teams/montecarlo2/distanceCalculator.pyc  
  inflating: contest-tmp/teams/montecarlo2/util.py  
  inflating: contest-tmp/teams/montecarlo2/WaterMelon_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_top_contest17Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/python  
  inflating: contest-tmp/teams/montecarlo2/capture_the_flag2.png  
  inflating: contest-tmp/teams/montecarlo2/montecarlo2.pyc  
  inflating: contest-tmp/teams/montecarlo2/game.pyc  
  inflating: contest-tmp/teams/montecarlo2/beTaGo_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/montercarlo4.py  
   creating: contest-tmp/teams/montecarlo2/layouts/layouts/
  inflating: contest-tmp/teams/montecarlo2/layouts/testCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/officeCapture.lay  
   creating: contest-tmp/teams/montecarlo2/bin/bin/
  inflating: contest-tmp/teams/montecarlo2/bin/ff  
  inflating: contest-tmp/teams/montecarlo2/.idea/workspace.xml  
  inflating: contest-tmp/teams/montecarlo2/.idea/misc.xml  
  inflating: contest-tmp/teams/montecarlo2/.idea/modules.xml  
  inflating: contest-tmp/teams/montecarlo2/.idea/contest.iml  
  inflating: contest-tmp/teams/ES/myTeam.py  
  inflating: contest-tmp/teams/super_scaper/myTeam.py  
   creating: contest-tmp/teams/R2D2/R2D2/
   creating: contest-tmp/teams/R2D2/__MACOSX/
   creating: contest-tmp/teams/R2D2/__MACOSX/R2D2/
  inflating: contest-tmp/teams/R2D2/__MACOSX/R2D2/._myTeam.py  
  inflating: contest-tmp/teams/R2D2/R2D2/myTeam.py  
  inflating: contest-tmp/teams/RoguePi/myTeam.py  
  inflating: contest-tmp/teams/OffDef/myTeam.py  
  inflating: contest-tmp/teams/wings/myTeam.py  
  inflating: contest-tmp/teams/HouseofPac/myTeam.py  
  inflating: contest-tmp/teams/myADmilk/myADmilk.py  
   creating: contest-tmp/teams/PaceMin/PaceMin/
  inflating: contest-tmp/teams/PaceMin/PaceMin/myTeam.py  
  inflating: contest-tmp/teams/PacMaster/myTeam.py  
   creating: contest-tmp/teams/betaGo/__MACOSX/
  inflating: contest-tmp/teams/betaGo/myTeam.py  
  inflating: contest-tmp/teams/betaGo/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/song2/myTeam.py  
  inflating: contest-tmp/teams/omega-go/myTeam.py  
  inflating: contest-tmp/teams/omega-go/name.txt  
  inflating: contest-tmp/teams/omega-go/omega.py  
  inflating: contest-tmp/teams/omega-go/omegaDefensive.py  
  inflating: contest-tmp/teams/omega-go/omegaOffensive.py  
  inflating: contest-tmp/teams/HelloPacman/myTeam.py  
  inflating: contest-tmp/teams/RealDaddy/myTeam.py  
  inflating: contest-tmp/teams/Y.Z.S/myTeam.py  
   creating: contest-tmp/teams/oEtFKY/__MACOSX/
  inflating: contest-tmp/teams/oEtFKY/myTeam.py  
  inflating: contest-tmp/teams/oEtFKY/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Pokeman/__MACOSX/
  inflating: contest-tmp/teams/Pokeman/myTeam.py  
  inflating: contest-tmp/teams/Pokeman/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/lexus/myTeam.py  
   creating: contest-tmp/teams/ai-pddl/__MACOSX/
   creating: contest-tmp/teams/ai-pddl/ai-pddl/
   creating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._ai-README.txt  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._ghost_problem.pddl  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._test.txt  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._problem_pacman_01.pddl  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._.DS_Store  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._pacman.pddl  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._ghost.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/test.txt  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/ghost_problem.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/ghost.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/pacman.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/ai-README.txt  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/.DS_Store  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/problem_pacman_01.pddl  
  inflating: contest-tmp/teams/WaterMelon/myTeam.py  
  inflating: contest-tmp/teams/PacMax/myTeam.py  
  inflating: contest-tmp/teams/PacMax/offensiveWeightsDefault.json  
  inflating: contest-tmp/teams/PacMax/defensiveWeightsDefault.json  
  inflating: contest-tmp/teams/go_home_safe/myTeam.py  
   creating: contest-tmp/teams/404/__MACOSX/
  inflating: contest-tmp/teams/404/myTeam.py  
  inflating: contest-tmp/teams/404/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/FatHeadFish/__MACOSX/
  inflating: contest-tmp/teams/FatHeadFish/myTeam.py  
  inflating: contest-tmp/teams/FatHeadFish/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/DEVGRU/__MACOSX/
   creating: contest-tmp/teams/DEVGRU/layouts/
  inflating: contest-tmp/teams/DEVGRU/game.py  
  inflating: contest-tmp/teams/DEVGRU/DQN.pyc  
  inflating: contest-tmp/teams/DEVGRU/contest.html  
  inflating: contest-tmp/teams/DEVGRU/textDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/DEVGRU/score  
  inflating: contest-tmp/teams/DEVGRU/mazeGenerator.py  
  inflating: contest-tmp/teams/DEVGRU/VERSION  
  inflating: contest-tmp/teams/DEVGRU/myTeam.py  
  inflating: contest-tmp/teams/DEVGRU/keyboardAgents.py  
  inflating: contest-tmp/teams/DEVGRU/autograder.py  
  inflating: contest-tmp/teams/DEVGRU/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/DEVGRU/baselineTeam.py  
  inflating: contest-tmp/teams/DEVGRU/myTeam.pyc  
  inflating: contest-tmp/teams/DEVGRU/keyboardAgents.pyc  
  inflating: contest-tmp/teams/DEVGRU/graphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/graphicsUtils.py  
  inflating: contest-tmp/teams/DEVGRU/layout.pyc  
  inflating: contest-tmp/teams/DEVGRU/pacman.py  
  inflating: contest-tmp/teams/DEVGRU/capture.pyc  
  inflating: contest-tmp/teams/DEVGRU/capture_the_flag.png  
  inflating: contest-tmp/teams/DEVGRU/contestLayout.png  
  inflating: contest-tmp/teams/DEVGRU/unpack.py  
  inflating: contest-tmp/teams/DEVGRU/pacman.pyc  
  inflating: contest-tmp/teams/DEVGRU/testParser.py  
  inflating: contest-tmp/teams/DEVGRU/capture.py  
  inflating: contest-tmp/teams/DEVGRU/baselineTeam.pyc  
  inflating: contest-tmp/teams/DEVGRU/captureAgents.pyc  
  inflating: contest-tmp/teams/DEVGRU/testClasses.py  
  inflating: contest-tmp/teams/DEVGRU/projects.css  
  inflating: contest-tmp/teams/DEVGRU/captureAgents.py  
  inflating: contest-tmp/teams/DEVGRU/pacmanAgents.py  
  inflating: contest-tmp/teams/DEVGRU/distanceCalculator.py  
  inflating: contest-tmp/teams/DEVGRU/graphicsUtils.pyc  
  inflating: contest-tmp/teams/DEVGRU/util.pyc  
  inflating: contest-tmp/teams/DEVGRU/layout.py  
  inflating: contest-tmp/teams/DEVGRU/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/bracket.png  
  inflating: contest-tmp/teams/DEVGRU/ghostAgents.py  
  inflating: contest-tmp/teams/DEVGRU/distanceCalculator.pyc  
  inflating: contest-tmp/teams/DEVGRU/util.py  
  inflating: contest-tmp/teams/DEVGRU/capture_the_flag2.png  
  inflating: contest-tmp/teams/DEVGRU/game.pyc  
  inflating: contest-tmp/teams/DEVGRU/PacmanDQNTeam.pyc  
  inflating: contest-tmp/teams/DEVGRU/layouts/testCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/officeCapture.lay  
   creating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._game.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._util.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._layouts  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/worstPacman/tournament.py  
  inflating: contest-tmp/teams/InvincibleGhosts/group.txt  
  inflating: contest-tmp/teams/InvincibleGhosts/myTeam.py  
  inflating: contest-tmp/teams/InvincibleGhosts/ghost-domain.pddl  
  inflating: contest-tmp/teams/InvincibleGhosts/pacman-domain.pddl  
  inflating: contest-tmp/teams/InvincibleGhosts/readme.txt  
  inflating: contest-tmp/teams/SBAI_PURE/myTeam.py  
  inflating: contest-tmp/teams/SBAI_PURE/ghost-domain.pddl  
  inflating: contest-tmp/teams/SBAI_PURE/pacman-domain.pddl  
  inflating: contest-tmp/teams/tryingAIMen/myTeam.py  
  inflating: contest-tmp/teams/Pacsain_Bolt/myTeam.py  
  inflating: contest-tmp/teams/umr1/myTeam.py  
  inflating: contest-tmp/teams/WindyDay/myTeam.py  
  inflating: contest-tmp/teams/BetaPacMc3/myTeam.py  
  inflating: contest-tmp/teams/BetaPacMc3/MCT.py  
  inflating: contest-tmp/teams/BetaPacMc3/featuresTool.py  
  inflating: contest-tmp/teams/FatMan/myTeam.py  
  inflating: contest-tmp/teams/press_any_key/myTeam.py  
  inflating: contest-tmp/teams/press_any_key/offensive.train  
  inflating: contest-tmp/teams/press_any_key/deffensive.train  
   creating: contest-tmp/teams/Avatar/__MACOSX/
   creating: contest-tmp/teams/Avatar/layouts/
  inflating: contest-tmp/teams/Avatar/game.py  
  inflating: contest-tmp/teams/Avatar/contest.html  
  inflating: contest-tmp/teams/Avatar/textDisplay.py  
  inflating: contest-tmp/teams/Avatar/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/Avatar/score  
  inflating: contest-tmp/teams/Avatar/mazeGenerator.py  
  inflating: contest-tmp/teams/Avatar/VERSION  
  inflating: contest-tmp/teams/Avatar/myTeam.py  
  inflating: contest-tmp/teams/Avatar/keyboardAgents.py  
  inflating: contest-tmp/teams/Avatar/autograder.py  
  inflating: contest-tmp/teams/Avatar/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/Avatar/baselineTeam.py  
  inflating: contest-tmp/teams/Avatar/myTeam.pyc  
  inflating: contest-tmp/teams/Avatar/keyboardAgents.pyc  
  inflating: contest-tmp/teams/Avatar/graphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/graphicsUtils.py  
  inflating: contest-tmp/teams/Avatar/layout.pyc  
  inflating: contest-tmp/teams/Avatar/pacman.py  
  inflating: contest-tmp/teams/Avatar/capture.pyc  
  inflating: contest-tmp/teams/Avatar/learningAgents  
  inflating: contest-tmp/teams/Avatar/capture_the_flag.png  
  inflating: contest-tmp/teams/Avatar/contestLayout.png  
  inflating: contest-tmp/teams/Avatar/unpack.py  
  inflating: contest-tmp/teams/Avatar/testParser.py  
  inflating: contest-tmp/teams/Avatar/capture.py  
  inflating: contest-tmp/teams/Avatar/baselineTeam.pyc  
  inflating: contest-tmp/teams/Avatar/captureAgents.pyc  
  inflating: contest-tmp/teams/Avatar/testClasses.py  
  inflating: contest-tmp/teams/Avatar/projects.css  
  inflating: contest-tmp/teams/Avatar/captureAgents.py  
  inflating: contest-tmp/teams/Avatar/pacmanAgents.py  
  inflating: contest-tmp/teams/Avatar/distanceCalculator.py  
  inflating: contest-tmp/teams/Avatar/graphicsUtils.pyc  
  inflating: contest-tmp/teams/Avatar/util.pyc  
  inflating: contest-tmp/teams/Avatar/agents.pyc  
  inflating: contest-tmp/teams/Avatar/layout.py  
  inflating: contest-tmp/teams/Avatar/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/bracket.png  
  inflating: contest-tmp/teams/Avatar/ghostAgents.py  
  inflating: contest-tmp/teams/Avatar/distanceCalculator.pyc  
  inflating: contest-tmp/teams/Avatar/util.py  
  inflating: contest-tmp/teams/Avatar/agents.py  
  inflating: contest-tmp/teams/Avatar/capture_the_flag2.png  
  inflating: contest-tmp/teams/Avatar/game.pyc  
  inflating: contest-tmp/teams/Avatar/layouts/testCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/officeCapture.lay  
   creating: contest-tmp/teams/Avatar/__MACOSX/layouts/
  inflating: contest-tmp/teams/Avatar/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._game.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._util.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._layouts  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._bloxCapture.lay  
   creating: contest-tmp/teams/HelloWorld/__MACOSX/
   creating: contest-tmp/teams/HelloWorld/layouts/
  inflating: contest-tmp/teams/HelloWorld/game.py  
  inflating: contest-tmp/teams/HelloWorld/contest.html  
  inflating: contest-tmp/teams/HelloWorld/textDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/HelloWorld/score  
  inflating: contest-tmp/teams/HelloWorld/mazeGenerator.py  
  inflating: contest-tmp/teams/HelloWorld/VERSION  
  inflating: contest-tmp/teams/HelloWorld/myTeam.py  
  inflating: contest-tmp/teams/HelloWorld/test_MonteCarlo.py  
  inflating: contest-tmp/teams/HelloWorld/keyboardAgents.py  
  inflating: contest-tmp/teams/HelloWorld/autograder.py  
  inflating: contest-tmp/teams/HelloWorld/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/HelloWorld/baselineTeam.py  
  inflating: contest-tmp/teams/HelloWorld/myTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/keyboardAgents.pyc  
  inflating: contest-tmp/teams/HelloWorld/graphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/graphicsUtils.py  
  inflating: contest-tmp/teams/HelloWorld/layout.pyc  
  inflating: contest-tmp/teams/HelloWorld/pacman.py  
  inflating: contest-tmp/teams/HelloWorld/randomTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/mergeTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/capture_the_flag.png  
  inflating: contest-tmp/teams/HelloWorld/randomTeam.py  
  inflating: contest-tmp/teams/HelloWorld/contestLayout.png  
  inflating: contest-tmp/teams/HelloWorld/unpack.py  
  inflating: contest-tmp/teams/HelloWorld/testParser.py  
  inflating: contest-tmp/teams/HelloWorld/planner_team.py  
  inflating: contest-tmp/teams/HelloWorld/capture.py  
  inflating: contest-tmp/teams/HelloWorld/baselineTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/captureAgents.pyc  
  inflating: contest-tmp/teams/HelloWorld/testClasses.py  
  inflating: contest-tmp/teams/HelloWorld/projects.css  
  inflating: contest-tmp/teams/HelloWorld/captureAgents.py  
  inflating: contest-tmp/teams/HelloWorld/pacmanAgents.py  
  inflating: contest-tmp/teams/HelloWorld/distanceCalculator.py  
  inflating: contest-tmp/teams/HelloWorld/graphicsUtils.pyc  
  inflating: contest-tmp/teams/HelloWorld/util.pyc  
  inflating: contest-tmp/teams/HelloWorld/layout.py  
  inflating: contest-tmp/teams/HelloWorld/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/bracket.png  
  inflating: contest-tmp/teams/HelloWorld/ghostAgents.py  
  inflating: contest-tmp/teams/HelloWorld/distanceCalculator.pyc  
  inflating: contest-tmp/teams/HelloWorld/util.py  
  inflating: contest-tmp/teams/HelloWorld/uctTeam.py  
  inflating: contest-tmp/teams/HelloWorld/testOffensive.py  
  inflating: contest-tmp/teams/HelloWorld/capture_the_flag2.png  
  inflating: contest-tmp/teams/HelloWorld/tempTeam.py  
  inflating: contest-tmp/teams/HelloWorld/game.pyc  
  inflating: contest-tmp/teams/HelloWorld/testOriginal.py  
  inflating: contest-tmp/teams/HelloWorld/layouts/testCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/officeCapture.lay  
   creating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._game.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._util.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._planner_team.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._layouts  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/bias/myTeam.py  
  inflating: contest-tmp/teams/ZZZTeam/myTeam.py  
  inflating: contest-tmp/teams/TLH/myTeam.py  
  inflating: contest-tmp/teams/TLH/weights.p  
   creating: contest-tmp/teams/PacKid/teams/
  inflating: contest-tmp/teams/PacKid/group.txt  
  inflating: contest-tmp/teams/PacKid/myTeam.py  
  inflating: contest-tmp/teams/PacKid/plan_for_pacman  
  inflating: contest-tmp/teams/PacKid/ghost_domain.pddl  
  inflating: contest-tmp/teams/PacKid/Problem_image.PNG  
  inflating: contest-tmp/teams/PacKid/pacman_domain.pddl  
  inflating: contest-tmp/teams/PacKid/readme.txt  
  inflating: contest-tmp/teams/PacKid/probelm.pddl  
   creating: contest-tmp/teams/PacKid/teams/Terminators/
  inflating: contest-tmp/teams/PacKid/teams/Terminators/team.py  
  inflating: contest-tmp/teams/EvilGeniuses/myTeam.py  
  inflating: contest-tmp/teams/iceice/myTeam.py  
   creating: contest-tmp/teams/loserswishes/__MACOSX/
  inflating: contest-tmp/teams/loserswishes/group.txt  
  inflating: contest-tmp/teams/loserswishes/myTeam.py  
  inflating: contest-tmp/teams/loserswishes/README.txt  
  inflating: contest-tmp/teams/loserswishes/__MACOSX/._README.txt  
  inflating: contest-tmp/teams/loserswishes/__MACOSX/._group.txt  
   creating: contest-tmp/teams/contestrndmnm/contestrndmnm/
   creating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/game.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/contest.html  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/textDisplay.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/score  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/mazeGenerator.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/VERSION  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/myTeam.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/mazeGenerator.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/keyboardAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/autograder.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/baselineTeam.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/myTeam.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/keyboardAgents.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/graphicsDisplay.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/graphicsUtils.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layout.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/pacman.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/capture_the_flag.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/contestLayout.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/unpack.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/testParser.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/capture.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/baselineTeam.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureAgents.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/testClasses.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/projects.css  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/pacmanAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/distanceCalculator.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/graphicsUtils.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/util.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layout.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/bracket.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/ghostAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/distanceCalculator.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/util.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/capture_the_flag2.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/game.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/testCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/officeCapture.lay  
  inflating: contest-tmp/teams/InfiniteLoop/myTeam.py  
  inflating: contest-tmp/teams/friedOreo/myTeam.py  
  inflating: contest-tmp/teams/Reaper/group.txt  
  inflating: contest-tmp/teams/Reaper/myTeam.py  
  inflating: contest-tmp/teams/Reaper/README.TXT  
  inflating: contest-tmp/teams/AliEn/myTeam.py  
   creating: contest-tmp/teams/IPhoneX/__MACOSX/
  inflating: contest-tmp/teams/IPhoneX/myTeam.py  
  inflating: contest-tmp/teams/IPhoneX/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/victoriasSecret/myTeam.py  
  inflating: contest-tmp/teams/Allogator/myTeam.py  
   creating: contest-tmp/teams/MMM/layouts/
  inflating: contest-tmp/teams/MMM/game.py  
  inflating: contest-tmp/teams/MMM/contest.html  
  inflating: contest-tmp/teams/MMM/textDisplay.py  
  inflating: contest-tmp/teams/MMM/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/MMM/score  
  inflating: contest-tmp/teams/MMM/mazeGenerator.py  
  inflating: contest-tmp/teams/MMM/VERSION  
  inflating: contest-tmp/teams/MMM/myTeam.py  
  inflating: contest-tmp/teams/MMM/anotherTeam.pyc  
  inflating: contest-tmp/teams/MMM/keyboardAgents.py  
  inflating: contest-tmp/teams/MMM/autograder.py  
  inflating: contest-tmp/teams/MMM/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/MMM/baselineTeam.py  
  inflating: contest-tmp/teams/MMM/myTeam_2.py  
  inflating: contest-tmp/teams/MMM/myTeam.pyc  
  inflating: contest-tmp/teams/MMM/keyboardAgents.pyc  
  inflating: contest-tmp/teams/MMM/graphicsDisplay.py  
  inflating: contest-tmp/teams/MMM/myTeam_top.py  
  inflating: contest-tmp/teams/MMM/graphicsUtils.py  
  inflating: contest-tmp/teams/MMM/layout.pyc  
  inflating: contest-tmp/teams/MMM/pacman.py  
  inflating: contest-tmp/teams/MMM/ERC.zip  
  inflating: contest-tmp/teams/MMM/capture_the_flag.png  
  inflating: contest-tmp/teams/MMM/contestLayout.png  
  inflating: contest-tmp/teams/MMM/unpack.py  
  inflating: contest-tmp/teams/MMM/testParser.py  
  inflating: contest-tmp/teams/MMM/anotherTeam.py  
  inflating: contest-tmp/teams/MMM/capture.py  
  inflating: contest-tmp/teams/MMM/c3Team.py  
  inflating: contest-tmp/teams/MMM/baselineTeam.pyc  
  inflating: contest-tmp/teams/MMM/captureAgents.pyc  
  inflating: contest-tmp/teams/MMM/testClasses.py  
  inflating: contest-tmp/teams/MMM/projects.css  
  inflating: contest-tmp/teams/MMM/cTeam.pyc  
  inflating: contest-tmp/teams/MMM/captureAgents.py  
  inflating: contest-tmp/teams/MMM/pacmanAgents.py  
  inflating: contest-tmp/teams/MMM/distanceCalculator.py  
  inflating: contest-tmp/teams/MMM/graphicsUtils.pyc  
  inflating: contest-tmp/teams/MMM/myTeam_1.py  
  inflating: contest-tmp/teams/MMM/util.pyc  
  inflating: contest-tmp/teams/MMM/layout.py  
  inflating: contest-tmp/teams/MMM/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/MMM/bracket.png  
  inflating: contest-tmp/teams/MMM/ghostAgents.py  
  inflating: contest-tmp/teams/MMM/distanceCalculator.pyc  
  inflating: contest-tmp/teams/MMM/util.py  
  inflating: contest-tmp/teams/MMM/capture_the_flag2.png  
  inflating: contest-tmp/teams/MMM/game.pyc  
  inflating: contest-tmp/teams/MMM/cTeam.py  
  inflating: contest-tmp/teams/MMM/monteCarloTeam.py  
  inflating: contest-tmp/teams/QCR/myTeam.py  
  inflating: contest-tmp/teams/PandaTV/myTeam.py  
   creating: contest-tmp/teams/AIFighter/__MACOSX/
  inflating: contest-tmp/teams/AIFighter/myTeam.py  
  inflating: contest-tmp/teams/AIFighter/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/staff_team_medium/myTeam.py  
  inflating: contest-tmp/teams/staff_team_medium/ghost-domain-kilpacman-problem.pddl  
  inflating: contest-tmp/teams/staff_team_medium/pacman-domain-eatfood-problem.pddl  
  inflating: contest-tmp/teams/staff_team_medium/pacman-domain-killghostproblem.pddl  
  inflating: contest-tmp/teams/staff_team_medium/ghost-domain.pddl  
  inflating: contest-tmp/teams/staff_team_medium/pacman-domain.pddl  
  inflating: contest-tmp/teams/staff_team_medium/README.txt  
  inflating: contest-tmp/teams/staff_team_medium/ff  
   creating: contest-tmp/teams/RandomTeamVI/__MACOSX/
  inflating: contest-tmp/teams/RandomTeamVI/myTeam.py  
  inflating: contest-tmp/teams/RandomTeamVI/ghost_problem.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/ghost.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/pacman.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/problem_pacman_01.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._ghost_problem.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._problem_pacman_01.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._pacman.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._ghost.pddl  
  inflating: contest-tmp/teams/staff_team_basic/myTeam.py  
  inflating: contest-tmp/teams/staff_team_basic/problem.pddl  
  inflating: contest-tmp/teams/staff_team_basic/__init__.py  
  inflating: contest-tmp/teams/staff_team_basic/domain.pddl  
  inflating: contest-tmp/teams/staff_team_basic/gmon.out  
  inflating: contest-tmp/teams/disabledPacman4/disabledPacman3.py  
  inflating: contest-tmp/teams/Patman/myTeam.py  
  inflating: contest-tmp/teams/RNG/PacMax.zip  
  inflating: contest-tmp/teams/RNG/myTeam.py  
  inflating: contest-tmp/teams/RNG/offensiveWeightsDefault.json  
  inflating: contest-tmp/teams/RNG/myTeam.pyc  
  inflating: contest-tmp/teams/RNG/defensiveWeightsDefault.json  
  inflating: contest-tmp/teams/RNG/defensiveWeights.json  
  inflating: contest-tmp/teams/RNG/logger.log  
  inflating: contest-tmp/teams/RNG/agents.py  
  inflating: contest-tmp/teams/RNG/offensiveWeights.json  
   creating: contest-tmp/teams/Alive/__MACOSX/
  inflating: contest-tmp/teams/Alive/myTeam.py  
  inflating: contest-tmp/teams/Alive/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Artificialidiot/__MACOSX/
  inflating: contest-tmp/teams/Artificialidiot/myTeam.py  
  inflating: contest-tmp/teams/Artificialidiot/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/staff_team_top/group.txt  
  inflating: contest-tmp/teams/staff_team_top/myTeam.py  
  inflating: contest-tmp/teams/staff_team_top/domain_pacman_contestpacman.pddl  
  inflating: contest-tmp/teams/staff_team_top/problem_ghost_eatpacman.pddl  
  inflating: contest-tmp/teams/staff_team_top/problem_pacman_eatdot.pddl  
  inflating: contest-tmp/teams/staff_team_top/domain_ghost_contestghost.pddl  
  inflating: contest-tmp/teams/staff_team_top/problem_pacman_eatghost.pddl  
  inflating: contest-tmp/teams/staff_team_top/readme.txt  
  inflating: contest-tmp/teams/staff_team_top/ff  
  inflating: contest-tmp/teams/ShallowMind/myTeam.py  
  inflating: contest-tmp/teams/ShallowMind/offense.json  
  inflating: contest-tmp/teams/AI_Rookie/myTeam.py  
   creating: contest-tmp/teams/InvictusGaming/__MACOSX/
  inflating: contest-tmp/teams/InvictusGaming/myTeam.py  
  inflating: contest-tmp/teams/InvictusGaming/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Higher_Brothers/__MACOSX/
  inflating: contest-tmp/teams/Higher_Brothers/myTeam.py  
  inflating: contest-tmp/teams/Higher_Brothers/ghost_domain.pddl  
  inflating: contest-tmp/teams/Higher_Brothers/pacman_domain.pddl  
  inflating: contest-tmp/teams/Higher_Brothers/ff  
  inflating: contest-tmp/teams/Higher_Brothers/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/Pacmon-Sun-and-Moon/myTeam.py  
   creating: contest-tmp/teams/ERC/layouts/
  inflating: contest-tmp/teams/ERC/game.py  
  inflating: contest-tmp/teams/ERC/contest.html  
  inflating: contest-tmp/teams/ERC/textDisplay.py  
  inflating: contest-tmp/teams/ERC/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/ERC/score  
  inflating: contest-tmp/teams/ERC/mazeGenerator.py  
  inflating: contest-tmp/teams/ERC/VERSION  
  inflating: contest-tmp/teams/ERC/myTeam.py  
  inflating: contest-tmp/teams/ERC/anotherTeam.pyc  
  inflating: contest-tmp/teams/ERC/keyboardAgents.py  
  inflating: contest-tmp/teams/ERC/autograder.py  
  inflating: contest-tmp/teams/ERC/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/ERC/baselineTeam.py  
  inflating: contest-tmp/teams/ERC/myTeam_2.py  
  inflating: contest-tmp/teams/ERC/myTeam.pyc  
  inflating: contest-tmp/teams/ERC/keyboardAgents.pyc  
  inflating: contest-tmp/teams/ERC/graphicsDisplay.py  
  inflating: contest-tmp/teams/ERC/myTeam_top.py  
  inflating: contest-tmp/teams/ERC/graphicsUtils.py  
  inflating: contest-tmp/teams/ERC/layout.pyc  
  inflating: contest-tmp/teams/ERC/pacman.py  
  inflating: contest-tmp/teams/ERC/capture_the_flag.png  
  inflating: contest-tmp/teams/ERC/contestLayout.png  
  inflating: contest-tmp/teams/ERC/unpack.py  
  inflating: contest-tmp/teams/ERC/testParser.py  
  inflating: contest-tmp/teams/ERC/anotherTeam.py  
  inflating: contest-tmp/teams/ERC/capture.py  
  inflating: contest-tmp/teams/ERC/c3Team.py  
  inflating: contest-tmp/teams/ERC/baselineTeam.pyc  
  inflating: contest-tmp/teams/ERC/captureAgents.pyc  
  inflating: contest-tmp/teams/ERC/mmmD.py  
  inflating: contest-tmp/teams/ERC/testClasses.py  
  inflating: contest-tmp/teams/ERC/projects.css  
  inflating: contest-tmp/teams/ERC/cTeam.pyc  
  inflating: contest-tmp/teams/ERC/captureAgents.py  
  inflating: contest-tmp/teams/ERC/pacmanAgents.py  
  inflating: contest-tmp/teams/ERC/distanceCalculator.py  
  inflating: contest-tmp/teams/ERC/graphicsUtils.pyc  
  inflating: contest-tmp/teams/ERC/myTeam_1.py  
  inflating: contest-tmp/teams/ERC/util.pyc  
  inflating: contest-tmp/teams/ERC/layout.py  
  inflating: contest-tmp/teams/ERC/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/ERC/bracket.png  
  inflating: contest-tmp/teams/ERC/ghostAgents.py  
  inflating: contest-tmp/teams/ERC/distanceCalculator.pyc  
  inflating: contest-tmp/teams/ERC/util.py  
  inflating: contest-tmp/teams/ERC/capture_the_flag2.png  
  inflating: contest-tmp/teams/ERC/game.pyc  
  inflating: contest-tmp/teams/ERC/cTeam.py  
  inflating: contest-tmp/teams/ERC/monteCarloTeam.py  
   creating: contest-tmp/teams/RMY/RMY/
   creating: contest-tmp/teams/RMY/__MACOSX/
   creating: contest-tmp/teams/RMY/__MACOSX/RMY/
  inflating: contest-tmp/teams/RMY/__MACOSX/RMY/._.DS_Store  
  inflating: contest-tmp/teams/RMY/RMY/myTeam.py  
  inflating: contest-tmp/teams/RMY/RMY/.DS_Store  
  inflating: contest-tmp/teams/RMY/RMY/README.txt  
  inflating: contest-tmp/teams/Chicken-Dinner/myTeam.py  
  inflating: contest-tmp/teams/ARP/myTeam.py  
   creating: contest-tmp/teams/ITCrowd/__MACOSX/
   creating: contest-tmp/teams/ITCrowd/layouts/
  inflating: contest-tmp/teams/ITCrowd/game.py  
  inflating: contest-tmp/teams/ITCrowd/contest.html  
  inflating: contest-tmp/teams/ITCrowd/textDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/ITCrowd/score  
  inflating: contest-tmp/teams/ITCrowd/mazeGenerator.py  
  inflating: contest-tmp/teams/ITCrowd/VERSION  
  inflating: contest-tmp/teams/ITCrowd/myTeam.py  
  inflating: contest-tmp/teams/ITCrowd/keyboardAgents.py  
  inflating: contest-tmp/teams/ITCrowd/autograder.py  
  inflating: contest-tmp/teams/ITCrowd/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/ITCrowd/baselineTeam.py  
  inflating: contest-tmp/teams/ITCrowd/myTeam.pyc  
  inflating: contest-tmp/teams/ITCrowd/keyboardAgents.pyc  
  inflating: contest-tmp/teams/ITCrowd/graphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/graphicsUtils.py  
  inflating: contest-tmp/teams/ITCrowd/layout.pyc  
  inflating: contest-tmp/teams/ITCrowd/pacman.py  
  inflating: contest-tmp/teams/ITCrowd/capture_the_flag.png  
  inflating: contest-tmp/teams/ITCrowd/contestLayout.png  
  inflating: contest-tmp/teams/ITCrowd/unpack.py  
  inflating: contest-tmp/teams/ITCrowd/testParser.py  
  inflating: contest-tmp/teams/ITCrowd/capture.py  
  inflating: contest-tmp/teams/ITCrowd/baselineTeam.pyc  
  inflating: contest-tmp/teams/ITCrowd/captureAgents.pyc  
  inflating: contest-tmp/teams/ITCrowd/testClasses.py  
  inflating: contest-tmp/teams/ITCrowd/projects.css  
  inflating: contest-tmp/teams/ITCrowd/captureAgents.py  
  inflating: contest-tmp/teams/ITCrowd/pacmanAgents.py  
  inflating: contest-tmp/teams/ITCrowd/distanceCalculator.py  
  inflating: contest-tmp/teams/ITCrowd/graphicsUtils.pyc  
  inflating: contest-tmp/teams/ITCrowd/util.pyc  
  inflating: contest-tmp/teams/ITCrowd/layout.py  
  inflating: contest-tmp/teams/ITCrowd/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/bracket.png  
  inflating: contest-tmp/teams/ITCrowd/ghostAgents.py  
  inflating: contest-tmp/teams/ITCrowd/distanceCalculator.pyc  
  inflating: contest-tmp/teams/ITCrowd/util.py  
  inflating: contest-tmp/teams/ITCrowd/capture_the_flag2.png  
  inflating: contest-tmp/teams/ITCrowd/game.pyc  
  inflating: contest-tmp/teams/ITCrowd/layouts/testCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/officeCapture.lay  
   creating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._game.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._util.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._score  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._layouts  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/BetterThanBaselineTeam/myTeam.py  
  inflating: contest-tmp/teams/BetterThanBaselineTeam/README.txt  
   creating: contest-tmp/teams/EvilPacman/__MACOSX/
  inflating: contest-tmp/teams/EvilPacman/myTeam.py  
  inflating: contest-tmp/teams/EvilPacman/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Werewolf/__MACOSX/
  inflating: contest-tmp/teams/Werewolf/myTeam.py  
  inflating: contest-tmp/teams/Werewolf/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/trytrytrytry/__MACOSX/
  inflating: contest-tmp/teams/trytrytrytry/myTeam.py  
  inflating: contest-tmp/teams/trytrytrytry/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/IHateCapsule/__MACOSX/
  inflating: contest-tmp/teams/IHateCapsule/myTeam.py  
  inflating: contest-tmp/teams/IHateCapsule/__MACOSX/._myTeam.py  
   creating: contest-tmp/bin/bin/
  inflating: contest-tmp/bin/metric-ff  
  inflating: contest-tmp/bin/ff      

Red team teams/RandomTeamVI/myTeam.py with {}:
teams/RandomTeamVI/myTeam.py
Loading Team: teams/RandomTeamVI/myTeam.py
Arguments: {}

Blue team teams/ES/myTeam.py with {}:
teams/ES/myTeam.py
Loading Team: teams/ES/myTeam.py
Arguments: {}
Blue team starts
{'kill': 0, 'opponent': 0, 'stop': 1, 'heuristicValue': 162, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-264
{'kill': 0, 'heuristicValue': 163, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'kill': 0, 'heuristicValue': 161, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
['Stop', 'North', 'South']
[-264, -163, -161]
{'kill': 0, 'opponent': 0, 'stop': 1, 'heuristicValue': 704, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-806.0
{'kill': 0, 'heuristicValue': 703, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-703.0
['Stop', 'South']
[-806.0, -703.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 161, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-261
{'opponent': 0, 'kill': 0, 'heuristicValue': 162, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-164
{'kill': 0, 'heuristicValue': 160, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
['Stop', 'North', 'South']
[-261, -164, -160]
{'kill': 0, 'stop': 1, 'heuristicValue': 703, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-803.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 704, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-706.0
{'kill': 0, 'heuristicValue': 702, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-702.0
['Stop', 'North', 'South']
[-803.0, -706.0, -702.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 160, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-260
{'opponent': 0, 'kill': 0, 'heuristicValue': 161, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'kill': 0, 'heuristicValue': 159, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
['Stop', 'North', 'South']
[-260, -163, -159]
{'kill': 0, 'stop': 1, 'heuristicValue': 702, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-802.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 703, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-705.0
{'kill': 0, 'heuristicValue': 701, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-701.0
['Stop', 'North', 'South']
[-802.0, -705.0, -701.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 159, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-259
{'opponent': 0, 'kill': 0, 'heuristicValue': 160, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-162
{'kill': 0, 'heuristicValue': 158, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'North', 'South']
[-259, -162, -158]
{'kill': 0, 'stop': 1, 'heuristicValue': 701, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-801.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 702, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-704.0
{'kill': 0, 'heuristicValue': 700, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-700.0
['Stop', 'North', 'South']
[-801.0, -704.0, -700.0]
{'kill': 0, 'heuristicValue': 157, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
{'kill': 0, 'stop': 1, 'heuristicValue': 158, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'opponent': 0, 'kill': 0, 'heuristicValue': 159, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 0, 'heuristicValue': 159, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
['West', 'Stop', 'North', 'South']
[-157, -258, -161, -159]
{'kill': 0, 'stop': 1, 'heuristicValue': 700, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-800.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 701, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-703.0
{'kill': 0, 'heuristicValue': 699, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-699.0
['Stop', 'North', 'South']
[-800.0, -703.0, -699.0]
{'kill': 0, 'heuristicValue': 156, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 0, 'stop': 1, 'heuristicValue': 157, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-257
{'opponent': 0, 'kill': 0, 'heuristicValue': 158, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
['West', 'Stop', 'East']
[-156, -257, -160]
{'kill': 0, 'heuristicValue': 698, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-698.0
{'kill': 0, 'stop': 1, 'heuristicValue': 699, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-799.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 700, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-702.0
{'kill': 0, 'heuristicValue': 700, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-700.0
['West', 'Stop', 'North', 'South']
[-698.0, -799.0, -702.0, -700.0]
{'kill': 0, 'heuristicValue': 155, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'kill': 0, 'stop': 1, 'heuristicValue': 156, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-256
{'opponent': 0, 'kill': 0, 'heuristicValue': 157, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
{'kill': 0, 'heuristicValue': 155, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
['West', 'Stop', 'East', 'North']
[-155, -256, -159, -155]
{'kill': 0, 'heuristicValue': 697, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-697.0
{'kill': 0, 'stop': 1, 'heuristicValue': 698, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-798.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 699, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-701.0
['West', 'Stop', 'East']
[-697.0, -798.0, -701.0]
{'kill': 0, 'heuristicValue': 154, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
{'kill': 0, 'stop': 1, 'heuristicValue': 155, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'opponent': 0, 'kill': 0, 'heuristicValue': 156, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
{'kill': 0, 'heuristicValue': 155, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
['West', 'Stop', 'East', 'South']
[-154, -255, -158, -155]
{'kill': 0, 'heuristicValue': 696, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-696.0
{'kill': 0, 'stop': 1, 'heuristicValue': 697, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-797.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 698, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-700.0
{'kill': 0, 'heuristicValue': 696, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-696.0
['West', 'Stop', 'East', 'North']
[-696.0, -797.0, -700.0, -696.0]
{'kill': 0, 'heuristicValue': 155, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'kill': 0, 'stop': 1, 'heuristicValue': 154, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
{'opponent': 0, 'kill': 0, 'heuristicValue': 155, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
{'kill': 0, 'heuristicValue': 153, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North']
[-155, -254, -157, -153]
{'kill': 0, 'stop': 1, 'heuristicValue': 696, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-796.0
{'kill': 0, 'heuristicValue': 695, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-695.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 697, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-699.0
['Stop', 'North', 'South']
[-796.0, -695.0, -699.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 153, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-253
{'kill': 0, 'heuristicValue': 152, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-152
{'opponent': 0, 'kill': 0, 'heuristicValue': 154, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'North', 'South']
[-253, -152, -156]
{'kill': 0, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-694.0
{'kill': 0, 'stop': 1, 'heuristicValue': 695, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-795.0
{'kill': 0, 'heuristicValue': 696, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-696.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 696, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-698.0
['West', 'Stop', 'North', 'South']
[-694.0, -795.0, -696.0, -698.0]
{'kill': 0, 'heuristicValue': 151, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-151
{'kill': 0, 'stop': 1, 'heuristicValue': 152, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
{'kill': 0, 'heuristicValue': 153, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'opponent': 0, 'kill': 0, 'heuristicValue': 153, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
['West', 'Stop', 'East', 'South']
[-151, -252, -153, -155]
{'kill': 0, 'heuristicValue': 693, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-693.0
{'kill': 0, 'stop': 1, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-794.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 695, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-697.0
['West', 'Stop', 'East']
[-693.0, -794.0, -697.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 151, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-251
{'opponent': 0, 'kill': 0, 'heuristicValue': 152, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
{'kill': 0, 'heuristicValue': 150, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
['Stop', 'East', 'North']
[-251, -154, -150]
{'kill': 0, 'heuristicValue': 692, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-692.0
{'kill': 0, 'stop': 1, 'heuristicValue': 693, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-793.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 694, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-696.0
{'kill': 0, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-694.0
['West', 'Stop', 'East', 'South']
[-692.0, -793.0, -696.0, -694.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 150, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
{'kill': 0, 'heuristicValue': 149, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-149
{'opponent': 0, 'kill': 0, 'heuristicValue': 151, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-250, -149, -153]
{'kill': 0, 'stop': 1, 'heuristicValue': 692, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-792.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 693, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-695.0
{'kill': 0, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-691.0
['Stop', 'East', 'North']
[-792.0, -695.0, -691.0]
{'kill': 0, 'heuristicValue': 148, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-148
{'kill': 0, 'stop': 1, 'heuristicValue': 149, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-249
{'kill': 0, 'heuristicValue': 150, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
{'kill': 0, 'heuristicValue': 150, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
{'opponent': 0, 'kill': 0, 'heuristicValue': 150, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-152
['West', 'Stop', 'East', 'North', 'South']
[-148, -249, -150, -150, -152]
{'kill': 0, 'stop': 1, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-791.0
{'kill': 0, 'heuristicValue': 690, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-690.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 692, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-694.0
['Stop', 'North', 'South']
[-791.0, -690.0, -694.0]
{'kill': 0, 'heuristicValue': 147, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-147
{'kill': 0, 'stop': 1, 'heuristicValue': 148, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'opponent': 0, 'kill': 0, 'heuristicValue': 149, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-151
['West', 'Stop', 'East']
[-147, -248, -151]
{'kill': 0, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-689.0
{'kill': 0, 'stop': 1, 'heuristicValue': 690, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-790.0
{'kill': 0, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-691.0
{'kill': 0, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-691.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 691, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-693.0
['West', 'Stop', 'East', 'North', 'South']
[-689.0, -790.0, -691.0, -691.0, -693.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 147, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-247
{'opponent': 0, 'kill': 0, 'heuristicValue': 148, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
{'kill': 0, 'heuristicValue': 146, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-146
{'kill': 0, 'heuristicValue': 148, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-148
['Stop', 'East', 'North', 'South']
[-247, -150, -146, -148]
{'kill': 0, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-688.0
{'kill': 0, 'stop': 1, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-789.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 690, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-692.0
['West', 'Stop', 'East']
[-688.0, -789.0, -692.0]
{'kill': 0, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
{'kill': 0, 'stop': 1, 'heuristicValue': 146, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'opponent': 0, 'kill': 0, 'heuristicValue': 147, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-149
['West', 'Stop', 'South']
[-145, -246, -149]
{'kill': 0, 'stop': 1, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-788.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 689, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-691.0
{'kill': 0, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-687.0
{'kill': 0, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-686.0
['Stop', 'East', 'North', 'South']
[-788.0, -691.0, -687.0, -686.0]
{'kill': 0, 'heuristicValue': 144, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-144
{'kill': 0, 'stop': 1, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'opponent': 0, 'kill': 0, 'heuristicValue': 146, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-148
['West', 'Stop', 'East']
[-144, -245, -148]
{'kill': 0, 'stop': 1, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-786.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 688, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-690.0
{'kill': 0, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-685.0
['Stop', 'North', 'South']
[-786.0, -690.0, -685.0]
{'kill': 0, 'heuristicValue': 143, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-143
{'kill': 0, 'stop': 1, 'heuristicValue': 144, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 0, 'heuristicValue': 145, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-147
{'kill': 0, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
['West', 'Stop', 'East', 'South']
[-143, -244, -147, -145]
{'kill': 0, 'stop': 1, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-785.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 686, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-688.0
{'kill': 0, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-684.0
['Stop', 'North', 'South']
[-785.0, -688.0, -684.0]
{'kill': 0, 'heuristicValue': 142, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
{'kill': 0, 'stop': 1, 'heuristicValue': 143, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'opponent': 0, 'kill': 0, 'heuristicValue': 144, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-146
['West', 'Stop', 'East']
[-142, -243, -146]
{'kill': 0, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-683.0
{'kill': 0, 'stop': 1, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-784.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 685, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-687.0
{'kill': 0, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-685.0
['West', 'Stop', 'North', 'South']
[-683.0, -784.0, -687.0, -685.0]
{'kill': 0, 'heuristicValue': 141, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 0, 'stop': 1, 'heuristicValue': 142, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
{'opponent': 0, 'kill': 0, 'heuristicValue': 143, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
['West', 'Stop', 'East']
[-141, -242, -145]
{'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-682.0
{'kill': 0, 'stop': 1, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-783.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 684, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-686.0
['West', 'Stop', 'East']
[-682.0, -783.0, -686.0]
{'kill': 0, 'heuristicValue': 140, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-140
{'kill': 0, 'stop': 1, 'heuristicValue': 141, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-241
{'opponent': 0, 'kill': 0, 'heuristicValue': 142, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-144
['West', 'Stop', 'East']
[-140, -241, -144]
{'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-681.0
{'kill': 0, 'stop': 1, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-782.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 683, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-685.0
{'kill': 0, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-683.0
{'kill': 0, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-683.0
['West', 'Stop', 'East', 'North', 'South']
[-681.0, -782.0, -685.0, -683.0, -683.0]
{'kill': 0, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
{'kill': 0, 'stop': 1, 'heuristicValue': 140, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-240
{'opponent': 0, 'kill': 0, 'heuristicValue': 141, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-143
['West', 'Stop', 'East']
[-139, -240, -143]
{'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-680.0
{'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-781.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 682, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-684.0
['West', 'Stop', 'East']
[-680.0, -781.0, -684.0]
{'kill': 0, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
{'kill': 0, 'stop': 1, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
{'opponent': 0, 'kill': 0, 'heuristicValue': 140, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'East']
[-138, -239, -142]
{'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-780.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-683.0
{'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-679.0
{'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-681.0
['Stop', 'East', 'North', 'South']
[-780.0, -683.0, -679.0, -681.0]
{'kill': 0, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 0, 'stop': 1, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'opponent': 0, 'kill': 0, 'heuristicValue': 139, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 0, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
['West', 'Stop', 'East', 'South']
[-137, -238, -141, -139]
{'kill': 0, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-678.0
{'kill': 0, 'stop': 1, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-779.0
{'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-680.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-682.0
['West', 'Stop', 'North', 'South']
[-678.0, -779.0, -680.0, -682.0]
{'kill': 0, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 0, 'stop': 1, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-237
{'opponent': 0, 'kill': 0, 'heuristicValue': 138, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-140
{'kill': 0, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
['West', 'Stop', 'East', 'South']
[-136, -237, -140, -138]
{'return': 638, 'kill': 0, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1953.0
{'return': 637, 'kill': 0, 'stop': 1, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2052.0
{'return': 636, 'opponent': 0, 'kill': 0, 'heuristicValue': 679, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1953.0
['West', 'Stop', 'East']
[-1953.0, -2052.0, -1953.0]
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 0, 'stop': 1, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
{'opponent': 0, 'kill': 0, 'heuristicValue': 137, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
['West', 'Stop', 'East']
[-135, -236, -139]
{'return': 638, 'kill': 0, 'stop': 1, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2053.0
{'return': 637, 'opponent': 0, 'kill': 0, 'heuristicValue': 678, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1954.0
{'return': 639, 'kill': 0, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1956.0
{'return': 639, 'kill': 0, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1954.0
['Stop', 'East', 'North', 'South']
[-2053.0, -1954.0, -1956.0, -1954.0]
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'stop': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-235
{'opponent': 0, 'kill': 0, 'heuristicValue': 136, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
{'kill': 0, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'East', 'South']
[-134, -235, -138, -136]
{'return': 639, 'kill': 0, 'stop': 1, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2054.0
{'return': 638, 'opponent': 0, 'kill': 0, 'heuristicValue': 677, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1955.0
{'return': 640, 'kill': 0, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1955.0
['Stop', 'North', 'South']
[-2054.0, -1955.0, -1955.0]
{'kill': 0, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 0, 'stop': 1, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
{'opponent': 0, 'kill': 0, 'heuristicValue': 135, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
['West', 'Stop', 'East']
[-133, -234, -137]
{'return': 641, 'kill': 0, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1956.0
{'return': 640, 'kill': 0, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2055.0
{'return': 639, 'opponent': 0, 'kill': 0, 'heuristicValue': 676, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1956.0
{'return': 641, 'kill': 0, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1956.0
['West', 'Stop', 'North', 'South']
[-1956.0, -2055.0, -1956.0, -1956.0]
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'stop': 1, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-233
{'opponent': 0, 'kill': 0, 'heuristicValue': 134, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'East']
[-132, -233, -136]
{'return': 642, 'kill': 0, 'heuristicValue': 646, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1930.0
{'return': 641, 'kill': 0, 'stop': 1, 'heuristicValue': 647, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2029.0
{'return': 640, 'opponent': 0, 'kill': 0, 'heuristicValue': 648, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1930.0
{'return': 642, 'kill': 0, 'heuristicValue': 646, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1930.0
['West', 'Stop', 'East', 'South']
[-1930.0, -2029.0, -1930.0, -1930.0]
{'kill': 0, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
{'kill': 0, 'stop': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'opponent': 0, 'kill': 0, 'heuristicValue': 131, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East']
[-122, -232, -133]
{'return': 643, 'kill': 0, 'heuristicValue': 645, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1931.0
{'return': 642, 'kill': 0, 'stop': 1, 'heuristicValue': 646, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2030.0
{'return': 641, 'kill': 0, 'heuristicValue': 647, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1929.0
{'return': 641, 'opponent': 0, 'kill': 0, 'heuristicValue': 647, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1931.0
['West', 'Stop', 'East', 'North']
[-1931.0, -2030.0, -1929.0, -1931.0]
{'kill': 0, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
{'kill': 0, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'opponent': 0, 'kill': 0, 'heuristicValue': 132, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'East']
[-121, -222, -134]
{'return': 642, 'opponent': 0, 'kill': 0, 'heuristicValue': 646, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1932.0
{'return': 641, 'kill': 0, 'stop': 1, 'heuristicValue': 647, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2029.0
{'return': 640, 'kill': 0, 'heuristicValue': 648, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1928.0
{'return': 642, 'kill': 0, 'heuristicValue': 648, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1932.0
['West', 'Stop', 'North', 'South']
[-1932.0, -2029.0, -1928.0, -1932.0]
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'opponent': 0, 'kill': 0, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['West', 'Stop', 'East']
[-120, -221, -124]
{'return': 609, 'kill': 0, 'heuristicValue': 647, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1865.0
{'return': 608, 'kill': 0, 'stop': 1, 'heuristicValue': 648, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1964.0
{'return': 609, 'kill': 0, 'heuristicValue': 649, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1867.0
{'return': 607, 'opponent': 0, 'kill': 0, 'heuristicValue': 647, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1863.0
['West', 'Stop', 'North', 'South']
[-1865.0, -1964.0, -1867.0, -1863.0]
{'kill': 23, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-349
{'kill': 22, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-440
{'opponent': 0, 'kill': 21, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
['West', 'Stop', 'East']
[-349, -440, -333]
{'return': 593, 'kill': 4, 'heuristicValue': 646, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1872.4
{'return': 592, 'kill': 5, 'stop': 1, 'heuristicValue': 647, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1981.5
{'return': 593, 'opponent': 0, 'kill': 6, 'heuristicValue': 648, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1896.6
{'return': 591, 'kill': 4, 'heuristicValue': 648, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1870.4
['West', 'Stop', 'North', 'South']
[-1872.4, -1981.5, -1896.6, -1870.4]
{'opponent': 0, 'kill': 18, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-302
{'kill': 17, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-391
{'kill': 16, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-282
['West', 'Stop', 'East']
[-302, -391, -282]
{'return': 591, 'kill': 3, 'stop': 1, 'heuristicValue': 648}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1960.3
{'return': 592, 'kill': 4, 'heuristicValue': 647, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1873.4
{'return': 590, 'kill': 2, 'heuristicValue': 649, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1833.2
['Stop', 'North', 'South']
[-1960.3, -1873.4, -1833.2]
{'kill': 21, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
{'kill': 20, 'stop': 1, 'heuristicValue': 122}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-422
{'kill': 19, 'heuristicValue': 132}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-322
['West', 'Stop', 'East']
[-333, -422, -322]
{'return': 590, 'kill': 3, 'stop': 1, 'heuristicValue': 649}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1959.3
{'return': 589, 'kill': 4, 'heuristicValue': 650}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1868.4
{'return': 591, 'kill': 4, 'heuristicValue': 648, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1872.4
{'return': 589, 'kill': 2, 'heuristicValue': 652, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1834.2
['Stop', 'East', 'North', 'South']
[-1959.3, -1868.4, -1872.4, -1834.2]
{'kill': 19, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-314
{'kill': 18, 'stop': 1, 'heuristicValue': 132}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-412
{'kill': 17, 'heuristicValue': 131}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-301
['West', 'Stop', 'East']
[-314, -412, -301]
{'return': 590, 'kill': 4, 'heuristicValue': 651, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1855.4
{'return': 589, 'kill': 3, 'stop': 1, 'heuristicValue': 652}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1960.3
{'return': 590, 'kill': 4, 'heuristicValue': 649, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1871.4
{'return': 588, 'kill': 2, 'heuristicValue': 651}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1847.2
['West', 'Stop', 'North', 'South']
[-1855.4, -1960.3, -1871.4, -1847.2]
{'opponent': 0, 'kill': 17, 'heuristicValue': 132, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-304
{'kill': 16, 'stop': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-391
{'kill': 15, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-280
['West', 'Stop', 'East']
[-304, -391, -280]
{'return': 588, 'kill': 3, 'stop': 1, 'heuristicValue': 651, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1957.3
{'return': 589, 'opponent': 0, 'kill': 4, 'heuristicValue': 652, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1872.4
{'return': 587, 'kill': 2, 'heuristicValue': 650, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1844.2
['Stop', 'North', 'South']
[-1957.3, -1872.4, -1844.2]
{'kill': 0, 'heuristicValue': 131, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 0, 'stop': 1, 'heuristicValue': 130}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'kill': 0, 'heuristicValue': 129}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
['West', 'Stop', 'East']
[-133, -230, -129]
{'return': 588, 'kill': 0, 'heuristicValue': 649, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1817.0
{'return': 587, 'kill': 0, 'stop': 1, 'heuristicValue': 650, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1912.0
{'return': 586, 'kill': 0, 'heuristicValue': 651, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1807.0
{'return': 588, 'opponent': 4, 'kill': 0, 'heuristicValue': 651, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1813.0
['West', 'Stop', 'East', 'North']
[-1817.0, -1912.0, -1807.0, -1813.0]
{'kill': 0, 'heuristicValue': 130, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'stop': 1, 'heuristicValue': 129}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-229
{'kill': 0, 'heuristicValue': 130}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
{'kill': 0, 'heuristicValue': 128}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
['West', 'Stop', 'East', 'South']
[-132, -229, -130, -128]
{'return': 587, 'opponent': 4, 'kill': 0, 'heuristicValue': 650, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1810.0
{'return': 586, 'kill': 0, 'stop': 1, 'heuristicValue': 651}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1923.0
{'return': 585, 'kill': 0, 'heuristicValue': 652}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1822.0
{'return': 585, 'kill': 0, 'heuristicValue': 652}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1822.0
['West', 'Stop', 'East', 'South']
[-1810.0, -1923.0, -1822.0, -1822.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 128}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-228
{'kill': 0, 'heuristicValue': 129, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
['Stop', 'North', 'South']
[-228, -131, -127]
{'return': 555, 'kill': 8, 'heuristicValue': 649, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1823.8
{'return': 554, 'kill': 9, 'stop': 1, 'heuristicValue': 650}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1948.9
{'return': 553, 'kill': 10, 'heuristicValue': 651, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1860.0
{'return': 553, 'kill': 8, 'heuristicValue': 651, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1821.8
['West', 'Stop', 'East', 'North']
[-1823.8, -1948.9, -1860.0, -1821.8]
{'kill': 6, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-186
{'kill': 7, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-297
{'opponent': 0, 'kill': 8, 'heuristicValue': 128, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-210
['West', 'Stop', 'North']
[-186, -297, -210]
{'kill': 0, 'stop': 1, 'heuristicValue': 651}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-751.0
{'return': 30, 'kill': 0, 'heuristicValue': 652, 'opponent': 12}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-664.0
{'kill': 0, 'heuristicValue': 650, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-652.0
['Stop', 'North', 'South']
[-751.0, -664.0, -652.0]
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
{'opponent': 0, 'kill': 0, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
['West', 'Stop', 'East', 'South']
[-127, -226, -129, -125]
{'return': 555, 'kill': 8, 'heuristicValue': 649, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1823.8
{'return': 554, 'kill': 9, 'stop': 1, 'heuristicValue': 650}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1948.9
{'return': 553, 'kill': 10, 'heuristicValue': 651}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1858.0
{'return': 553, 'opponent': 4, 'kill': 8, 'heuristicValue': 651, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1823.8
['West', 'Stop', 'East', 'North']
[-1823.8, -1948.9, -1858.0, -1823.8]
{'kill': 6, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-186
{'kill': 5, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-275
{'opponent': 0, 'kill': 6, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-188
{'kill': 4, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-164
['West', 'Stop', 'North', 'South']
[-186, -275, -188, -164]
{'return': 556, 'kill': 6, 'heuristicValue': 627, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1791.6
{'return': 555, 'kill': 7, 'stop': 1, 'heuristicValue': 628, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1896.7
{'return': 554, 'opponent': 4, 'kill': 8, 'heuristicValue': 629, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1803.8
['West', 'Stop', 'East']
[-1791.6, -1896.7, -1803.8]
{'kill': 6, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-183
{'kill': 5, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
{'kill': 4, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'opponent': 0, 'kill': 6, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-187
['West', 'Stop', 'East', 'North']
[-183, -274, -161, -187]
{'return': 557, 'kill': 8, 'heuristicValue': 626}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1820.8
{'return': 556, 'kill': 7, 'stop': 1, 'heuristicValue': 627, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1905.7
{'return': 555, 'opponent': 2, 'kill': 8, 'heuristicValue': 628, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1812.8
{'return': 555, 'kill': 6, 'heuristicValue': 628, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1790.6
{'return': 557, 'kill': 8, 'heuristicValue': 628, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1814.8
['West', 'Stop', 'East', 'North', 'South']
[-1820.8, -1905.7, -1812.8, -1790.6, -1814.8]
{'opponent': 0, 'kill': 6, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-186
{'kill': 5, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-271
{'kill': 4, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'kill': 6, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
['West', 'Stop', 'East', 'South']
[-186, -271, -160, -180]
{'return': 556, 'kill': 8, 'heuristicValue': 627}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1819.8
{'return': 555, 'kill': 7, 'stop': 1, 'heuristicValue': 628, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1904.7
{'return': 554, 'kill': 6, 'heuristicValue': 629, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1789.6
{'return': 556, 'opponent': 2, 'kill': 8, 'heuristicValue': 627, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1813.8
['West', 'Stop', 'North', 'South']
[-1819.8, -1904.7, -1789.6, -1813.8]
{'opponent': 0, 'kill': 6, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-183
{'kill': 5, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-270
{'kill': 4, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
['West', 'Stop', 'East']
[-183, -270, -159]
{'return': 555, 'kill': 8, 'heuristicValue': 628}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1818.8
{'return': 554, 'kill': 7, 'stop': 1, 'heuristicValue': 629, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1903.7
{'return': 553, 'kill': 6, 'heuristicValue': 630, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1788.6
{'return': 555, 'kill': 6, 'heuristicValue': 626, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1788.6
{'return': 555, 'opponent': 2, 'kill': 8, 'heuristicValue': 628, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1812.8
['West', 'Stop', 'East', 'North', 'South']
[-1818.8, -1903.7, -1788.6, -1788.6, -1812.8]
{'opponent': 0, 'kill': 6, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-182
{'kill': 5, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-269
{'kill': 4, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'kill': 6, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 4, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['West', 'Stop', 'East', 'North', 'South']
[-182, -269, -160, -180, -158]
{'return': 538, 'kill': 8, 'heuristicValue': 625}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1781.8
{'return': 537, 'kill': 7, 'stop': 1, 'heuristicValue': 626, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1866.7
{'return': 538, 'kill': 6, 'heuristicValue': 625, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1753.6
{'return': 536, 'opponent': 2, 'kill': 8, 'heuristicValue': 629, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1775.8
['West', 'Stop', 'North', 'South']
[-1781.8, -1866.7, -1753.6, -1775.8]
{'kill': 5, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-268
{'kill': 4, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
{'opponent': 0, 'kill': 6, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-181
{'kill': 6, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-177
['Stop', 'East', 'North', 'South']
[-268, -159, -181, -177]
{'return': 539, 'kill': 8, 'heuristicValue': 624}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1782.8
{'return': 538, 'kill': 7, 'stop': 1, 'heuristicValue': 625, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1867.7
{'return': 539, 'kill': 6, 'heuristicValue': 624, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1754.6
{'return': 537, 'opponent': 2, 'kill': 8, 'heuristicValue': 626, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1774.8
['West', 'Stop', 'North', 'South']
[-1782.8, -1867.7, -1754.6, -1774.8]
{'opponent': 0, 'kill': 3, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
{'kill': 2, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
{'kill': 3, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
{'kill': 3, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-150
{'kill': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
['West', 'Stop', 'East', 'North', 'South']
[-150, -239, -150, -150, -128]
{'return': 540, 'kill': 2, 'heuristicValue': 623, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1723.2
{'return': 539, 'kill': 1, 'stop': 1, 'heuristicValue': 624, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1812.1
{'return': 538, 'kill': 2, 'heuristicValue': 625, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1721.2
{'return': 540, 'kill': 2, 'heuristicValue': 625, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1725.2
{'return': 536, 'opponent': 0, 'kill': 32, 'heuristicValue': 657, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2054.2
['West', 'Stop', 'East', 'North', 'South']
[-1723.2, -1812.1, -1721.2, -1725.2, -2054.2]
{'kill': 3, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-147
{'kill': 2, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'kill': 3, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-149
{'opponent': 0, 'kill': 3, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-151
{'kill': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
['West', 'Stop', 'East', 'North', 'South']
[-147, -238, -149, -151, -129]
{'return': 511, 'opponent': 0, 'kill': 2, 'heuristicValue': 624, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1668.2
{'return': 510, 'kill': 3, 'stop': 1, 'heuristicValue': 625, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1775.3
{'return': 509, 'kill': 4, 'heuristicValue': 626, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1684.4
{'return': 509, 'kill': 4, 'heuristicValue': 626, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1684.4
['West', 'Stop', 'East', 'North']
[-1668.2, -1775.3, -1684.4, -1684.4]
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
['West', 'Stop', 'North', 'South']
[-118, -219, -120, -120]
{'return': 512, 'kill': 0, 'heuristicValue': 623, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1639.0
{'return': 511, 'kill': 0, 'stop': 1, 'heuristicValue': 624, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1734.0
{'return': 510, 'opponent': 4, 'kill': 0, 'heuristicValue': 625, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1631.0
{'return': 510, 'kill': 0, 'heuristicValue': 625, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1629.0
{'return': 512, 'kill': 0, 'heuristicValue': 625, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1641.0
['West', 'Stop', 'East', 'North', 'South']
[-1639.0, -1734.0, -1631.0, -1629.0, -1641.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
{'kill': 0, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'East', 'North', 'South']
[-218, -121, -117, -119]
{'return': 511, 'kill': 6, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1675.6
{'return': 510, 'kill': 5, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1764.5
{'return': 509, 'kill': 4, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1653.4
{'return': 509, 'kill': 6, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1673.6
{'return': 511, 'opponent': 0, 'kill': 6, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1677.6
['West', 'Stop', 'East', 'North', 'South']
[-1675.6, -1764.5, -1653.4, -1673.6, -1677.6]
{'kill': 8, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-198
{'kill': 7, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-287
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 8, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-198
['West', 'Stop', 'East', 'North', 'South']
[-198, -287, -178, -178, -198]
{'return': 510, 'opponent': 0, 'kill': 6, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1676.6
{'return': 509, 'kill': 5, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1763.5
{'return': 508, 'kill': 4, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1652.4
{'return': 510, 'kill': 6, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1674.6
['West', 'Stop', 'East', 'South']
[-1676.6, -1763.5, -1652.4, -1674.6]
{'opponent': 0, 'kill': 8, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-199
{'kill': 7, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-288
{'kill': 6, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-179
{'kill': 6, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-179
{'kill': 8, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-197
['West', 'Stop', 'East', 'North', 'South']
[-199, -288, -179, -179, -197]
{'return': 509, 'opponent': 0, 'kill': 4, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1655.4
{'return': 508, 'kill': 3, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1742.3
{'return': 507, 'kill': 2, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1631.2
{'return': 509, 'kill': 4, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1653.4
['West', 'Stop', 'North', 'South']
[-1655.4, -1742.3, -1631.2, -1653.4]
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 5, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-269
{'kill': 4, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'kill': 4, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
['West', 'Stop', 'East', 'North']
[-180, -269, -160, -160]
{'return': 507, 'kill': 1, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1721.1
{'return': 498, 'kill': 26, 'heuristicValue': 618, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1876.6
{'return': 508, 'opponent': 0, 'kill': 2, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1634.2
['Stop', 'North', 'South']
[-1721.1, -1876.6, -1634.2]
{'opponent': 0, 'kill': 4, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 3, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
{'kill': 2, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 4, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
['West', 'Stop', 'North', 'South']
[-161, -250, -141, -159]
{'return': 509, 'kill': 4, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1653.4
{'return': 508, 'kill': 3, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1742.3
{'return': 507, 'opponent': 0, 'kill': 2, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1633.2
{'return': 509, 'kill': 4, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1653.4
['West', 'Stop', 'North', 'South']
[-1653.4, -1742.3, -1633.2, -1653.4]
{'kill': 4, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'kill': 3, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-251
{'kill': 2, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
{'opponent': 0, 'kill': 4, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-162
['West', 'Stop', 'North', 'South']
[-160, -251, -142, -162]
{'return': 507, 'kill': 3, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1741.3
{'return': 506, 'kill': 2, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1630.2
{'return': 508, 'opponent': 0, 'kill': 4, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1654.4
['Stop', 'North', 'South']
[-1741.3, -1630.2, -1654.4]
{'kill': 3, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
{'kill': 2, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-143
{'opponent': 0, 'kill': 4, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['Stop', 'North', 'South']
[-252, -143, -163]
{'return': 506, 'kill': 3, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1740.3
{'return': 505, 'kill': 2, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1629.2
{'return': 507, 'kill': 4, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1653.4
{'return': 507, 'opponent': 0, 'kill': 4, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1653.4
['Stop', 'East', 'North', 'South']
[-1740.3, -1629.2, -1653.4, -1653.4]
{'kill': 3, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-253
{'kill': 2, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-144
{'kill': 4, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-164
{'opponent': 0, 'kill': 4, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-164
['Stop', 'East', 'North', 'South']
[-253, -144, -164, -164]
{'return': 506, 'opponent': 0, 'kill': 4, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1652.4
{'return': 505, 'kill': 3, 'stop': 1, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1739.3
{'return': 504, 'kill': 2, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1628.2
['West', 'Stop', 'East']
[-1652.4, -1739.3, -1628.2]
{'opponent': 0, 'kill': 4, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-165
{'kill': 3, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
{'kill': 2, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
['West', 'Stop', 'East']
[-165, -254, -145]
{'return': 505, 'opponent': 0, 'kill': 4, 'heuristicValue': 599, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1651.4
{'return': 504, 'kill': 3, 'stop': 1, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1738.3
{'return': 505, 'kill': 4, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1651.4
{'return': 503, 'kill': 2, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1625.2
['West', 'Stop', 'North', 'South']
[-1651.4, -1738.3, -1651.4, -1625.2]
{'opponent': 0, 'kill': 4, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-166
{'kill': 3, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'kill': 4, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-166
{'kill': 2, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-144
['West', 'Stop', 'North', 'South']
[-166, -255, -166, -144]
{'return': 475, 'kill': 3, 'stop': 1, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1679.3
{'return': 476, 'kill': 2, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 476, 'opponent': 0, 'kill': 4, 'heuristicValue': 600, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1594.4
{'return': 474, 'kill': 4, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1586.4
['Stop', 'East', 'North', 'South']
[-1679.3, -1572.2, -1594.4, -1586.4]
{'kill': 3, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
{'kill': 2, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
{'opponent': 0, 'kill': 4, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-167
{'kill': 4, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['Stop', 'East', 'North', 'South']
[-254, -145, -167, -163]
{'return': 475, 'opponent': 0, 'kill': 4, 'heuristicValue': 599, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1591.4
{'return': 476, 'kill': 3, 'stop': 1, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1682.3
{'return': 477, 'kill': 2, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1575.2
['West', 'Stop', 'East']
[-1591.4, -1682.3, -1575.2]
{'opponent': 0, 'kill': 4, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-166
{'kill': 3, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'kill': 2, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-146
['West', 'Stop', 'East']
[-166, -255, -146]
{'return': 476, 'opponent': 0, 'kill': 4, 'heuristicValue': 600, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1594.4
{'return': 477, 'kill': 3, 'stop': 1, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1685.3
{'return': 478, 'kill': 2, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1578.2
{'return': 478, 'kill': 4, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1598.4
{'return': 478, 'kill': 4, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1598.4
['West', 'Stop', 'East', 'North', 'South']
[-1594.4, -1685.3, -1578.2, -1598.4, -1598.4]
{'opponent': 0, 'kill': 4, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-167
{'kill': 3, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-256
{'return': 19, 'kill': 2, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-185
{'return': 21, 'kill': 4, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
{'return': 21, 'kill': 4, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
['West', 'Stop', 'East', 'North', 'South']
[-167, -256, -185, -209, -209]
{'return': 477, 'opponent': 0, 'kill': 2, 'heuristicValue': 601, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1577.2
{'return': 478, 'kill': 1, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1668.1
{'return': 474, 'kill': 19, 'heuristicValue': 618, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1757.9
['West', 'Stop', 'East']
[-1577.2, -1668.1, -1757.9]
{'return': 22, 'kill': 4, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-208
{'return': 21, 'kill': 3, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-297
{'return': 20, 'opponent': 0, 'kill': 2, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-188
['West', 'Stop', 'East']
[-208, -297, -188]
{'return': 476, 'kill': 4, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1592.4
{'return': 477, 'kill': 3, 'stop': 1, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1685.3
{'return': 478, 'opponent': 0, 'kill': 2, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1580.2
{'return': 478, 'kill': 4, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1598.4
{'return': 478, 'kill': 4, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1598.4
['West', 'Stop', 'East', 'North', 'South']
[-1592.4, -1685.3, -1580.2, -1598.4, -1598.4]
{'return': 21, 'opponent': 0, 'kill': 4, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
{'return': 20, 'kill': 3, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-296
{'return': 19, 'kill': 2, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-185
{'return': 21, 'kill': 4, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
{'return': 21, 'kill': 4, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
['West', 'Stop', 'East', 'North', 'South']
[-209, -296, -185, -209, -209]
{'return': 477, 'opponent': 0, 'kill': 4, 'heuristicValue': 601, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1597.4
{'return': 478, 'kill': 3, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1688.3
{'return': 477, 'kill': 2, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1577.2
['West', 'Stop', 'East']
[-1597.4, -1688.3, -1577.2]
{'return': 20, 'opponent': 0, 'kill': 4, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-208
{'return': 19, 'kill': 3, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-295
{'return': 18, 'kill': 2, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-184
['West', 'Stop', 'East']
[-208, -295, -184]
{'return': 478, 'opponent': 0, 'kill': 4, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1600.4
{'return': 477, 'kill': 3, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1687.3
{'return': 476, 'kill': 2, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1576.2
{'return': 478, 'kill': 4, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1600.4
['West', 'Stop', 'North', 'South']
[-1600.4, -1687.3, -1576.2, -1600.4]
{'return': 19, 'opponent': 0, 'kill': 4, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-207
{'return': 18, 'kill': 3, 'stop': 1, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-294
{'return': 17, 'kill': 2, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-183
{'return': 19, 'kill': 4, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-207
['West', 'Stop', 'North', 'South']
[-207, -294, -183, -207]
{'return': 476, 'kill': 1, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1666.1
{'return': 474, 'kill': 17, 'heuristicValue': 618, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1737.7
{'return': 477, 'opponent': 0, 'kill': 2, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1579.2
['Stop', 'North', 'South']
[-1666.1, -1737.7, -1579.2]
{'return': 17, 'kill': 1, 'stop': 1, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-273
{'return': 16, 'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-162
{'return': 18, 'opponent': 0, 'kill': 2, 'heuristicValue': 128, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-186
['Stop', 'North', 'South']
[-273, -162, -186]
{'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-602.0
{'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-703.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-606.0
{'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-604.0
['West', 'Stop', 'North', 'South']
[-602.0, -703.0, -606.0, -604.0]
{'return': 16, 'kill': 0, 'stop': 1, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-262
{'return': 15, 'kill': 0, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'return': 17, 'opponent': 0, 'kill': 0, 'heuristicValue': 129, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-165
['Stop', 'North', 'South']
[-262, -161, -165]
{'kill': 0, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-601.0
{'kill': 0, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-702.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-605.0
['West', 'Stop', 'East']
[-601.0, -702.0, -605.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-231
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'opponent': 0, 'kill': 0, 'heuristicValue': 130, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
['Stop', 'East', 'North', 'South']
[-231, -132, -132, -132]
{'kill': 0, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-600.0
{'kill': 0, 'stop': 1, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-701.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-604.0
{'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-602.0
{'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-602.0
['West', 'Stop', 'East', 'North', 'South']
[-600.0, -701.0, -604.0, -602.0, -602.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 131, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 0, 'stop': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'kill': 0, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East']
[-133, -232, -133]
{'kill': 0, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-599.0
{'kill': 0, 'stop': 1, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-700.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 601, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-603.0
['West', 'Stop', 'East']
[-599.0, -700.0, -603.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 132, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'stop': 1, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-233
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'East', 'North', 'South']
[-134, -233, -134, -134, -134]
{'kill': 0, 'stop': 1, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-699.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 600, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-602.0
{'kill': 0, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-600.0
{'kill': 0, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-598.0
['Stop', 'East', 'North', 'South']
[-699.0, -602.0, -600.0, -598.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'opponent': 0, 'kill': 0, 'heuristicValue': 133, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['Stop', 'East', 'South']
[-234, -135, -135]
{'kill': 0, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-698.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 599, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-601.0
{'kill': 0, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-597.0
['Stop', 'North', 'South']
[-698.0, -601.0, -597.0]
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'stop': 1, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-233
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'opponent': 0, 'kill': 0, 'heuristicValue': 134, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'East', 'North', 'South']
[-132, -233, -134, -136, -134]
{'kill': 0, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-697.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-600.0
{'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-596.0
['Stop', 'North', 'South']
[-697.0, -600.0, -596.0]
{'kill': 0, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'kill': 0, 'stop': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'opponent': 0, 'kill': 0, 'heuristicValue': 133, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['West', 'Stop', 'East']
[-131, -232, -135]
{'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-696.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-599.0
{'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-595.0
['Stop', 'North', 'South']
[-696.0, -599.0, -595.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-231
{'opponent': 0, 'kill': 0, 'heuristicValue': 132, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
['Stop', 'East', 'North', 'South']
[-231, -134, -132, -130]
{'return': 532, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1658.0
{'return': 531, 'kill': 0, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1757.0
{'return': 530, 'opponent': 0, 'kill': 0, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1658.0
{'return': 532, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1658.0
['West', 'Stop', 'North', 'South']
[-1658.0, -1757.0, -1658.0, -1658.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'opponent': 0, 'kill': 0, 'heuristicValue': 131, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 0, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
['Stop', 'North', 'South']
[-230, -133, -129]
{'return': 532, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1758.0
{'return': 531, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1659.0
{'return': 533, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1659.0
['Stop', 'North', 'South']
[-1758.0, -1659.0, -1659.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-229
{'opponent': 0, 'kill': 0, 'heuristicValue': 130, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
['Stop', 'North', 'South']
[-229, -132, -128]
{'return': 533, 'kill': 0, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1759.0
{'return': 532, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1660.0
{'return': 534, 'kill': 0, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1660.0
['Stop', 'North', 'South']
[-1759.0, -1660.0, -1660.0]
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'stop': 1, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-228
{'opponent': 0, 'kill': 0, 'heuristicValue': 129, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'kill': 0, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
['West', 'Stop', 'North', 'South']
[-127, -228, -131, -129]
{'return': 532, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1758.0
{'return': 531, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1657.0
{'return': 533, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1661.0
['Stop', 'North', 'South']
[-1758.0, -1657.0, -1661.0]
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
{'kill': 0, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-227
{'opponent': 0, 'kill': 0, 'heuristicValue': 128, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
['West', 'Stop', 'East']
[-126, -227, -130]
{'return': 532, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1658.0
{'return': 531, 'kill': 0, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1757.0
{'return': 530, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1656.0
{'return': 532, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1660.0
['West', 'Stop', 'North', 'South']
[-1658.0, -1757.0, -1656.0, -1660.0]
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
{'opponent': 0, 'kill': 0, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
['West', 'Stop', 'East', 'North', 'South']
[-125, -226, -129, -127, -127]
{'return': 496, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1688.0
{'return': 495, 'kill': 0, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1587.0
{'return': 497, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1591.0
['Stop', 'North', 'South']
[-1688.0, -1587.0, -1591.0]
{'kill': 0, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
{'kill': 0, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'opponent': 0, 'kill': 0, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
['West', 'Stop', 'East']
[-124, -225, -128]
{'return': 495, 'kill': 0, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1687.0
{'return': 494, 'kill': 0, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1586.0
{'return': 496, 'opponent': 0, 'kill': 0, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1590.0
['Stop', 'North', 'South']
[-1687.0, -1586.0, -1590.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'opponent': 0, 'kill': 0, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['Stop', 'East', 'North', 'South']
[-224, -127, -125, -123]
{'return': 494, 'kill': 0, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1686.0
{'return': 493, 'kill': 0, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1585.0
{'return': 495, 'opponent': 0, 'kill': 0, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1589.0
['Stop', 'North', 'South']
[-1686.0, -1585.0, -1589.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'opponent': 0, 'kill': 0, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
{'kill': 0, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
['Stop', 'North', 'South']
[-223, -126, -122]
{'return': 493, 'kill': 0, 'stop': 1, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1685.0
{'return': 492, 'kill': 0, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1584.0
{'return': 494, 'kill': 0, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1588.0
{'return': 494, 'opponent': 0, 'kill': 0, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1588.0
['Stop', 'East', 'North', 'South']
[-1685.0, -1584.0, -1588.0, -1588.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'opponent': 0, 'kill': 0, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
['Stop', 'North', 'South']
[-222, -125, -121]
{'return': 493, 'opponent': 0, 'kill': 0, 'heuristicValue': 599, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1587.0
{'return': 492, 'kill': 0, 'stop': 1, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1684.0
{'return': 491, 'kill': 0, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1583.0
['West', 'Stop', 'East']
[-1587.0, -1684.0, -1583.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'opponent': 0, 'kill': 0, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
['Stop', 'North', 'South']
[-221, -124, -120]
{'return': 492, 'opponent': 0, 'kill': 0, 'heuristicValue': 600, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1586.0
{'return': 491, 'kill': 0, 'stop': 1, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1683.0
{'return': 490, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1582.0
{'return': 492, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1586.0
{'return': 492, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1586.0
['West', 'Stop', 'East', 'North', 'South']
[-1586.0, -1683.0, -1582.0, -1586.0, -1586.0]
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'opponent': 0, 'kill': 0, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'North', 'South']
[-119, -220, -123, -119]
{'return': 491, 'opponent': 0, 'kill': 0, 'heuristicValue': 601, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1585.0
{'return': 490, 'kill': 0, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1682.0
{'return': 489, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1581.0
['West', 'Stop', 'East']
[-1585.0, -1682.0, -1581.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'opponent': 0, 'kill': 0, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'North', 'South']
[-219, -122, -118]
{'return': 490, 'opponent': 0, 'kill': 0, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1584.0
{'return': 489, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1681.0
{'return': 488, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1580.0
{'return': 490, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1584.0
['West', 'Stop', 'North', 'South']
[-1584.0, -1681.0, -1580.0, -1584.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
{'kill': 0, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
['Stop', 'North', 'South']
[-218, -121, -117]
{'return': 488, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1680.0
{'return': 487, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1579.0
{'return': 489, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1583.0
['Stop', 'North', 'South']
[-1680.0, -1579.0, -1583.0]
{'kill': 0, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['West', 'Stop', 'North', 'South']
[-116, -217, -120, -118]
{'return': 477, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1659.0
{'return': 476, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1558.0
{'return': 478, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1562.0
['Stop', 'North', 'South']
[-1659.0, -1558.0, -1562.0]
{'kill': 0, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
['West', 'Stop', 'East', 'South']
[-115, -216, -119, -117]
{'return': 476, 'kill': 0, 'stop': 1, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1658.0
{'return': 475, 'kill': 0, 'heuristicValue': 607, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1557.0
{'return': 477, 'kill': 0, 'heuristicValue': 607, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1561.0
{'return': 477, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1561.0
['Stop', 'East', 'North', 'South']
[-1658.0, -1557.0, -1561.0, -1561.0]
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['West', 'Stop', 'East', 'North']
[-114, -215, -118, -116]
{'return': 476, 'opponent': 0, 'kill': 0, 'heuristicValue': 606, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1560.0
{'return': 475, 'kill': 0, 'stop': 1, 'heuristicValue': 607, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1657.0
{'return': 474, 'kill': 0, 'heuristicValue': 608, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1556.0
['West', 'Stop', 'East']
[-1560.0, -1657.0, -1556.0]
{'kill': 0, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'opponent': 0, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
['West', 'Stop', 'East']
[-113, -214, -117]
{'return': 475, 'opponent': 0, 'kill': 0, 'heuristicValue': 607, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1559.0
{'return': 474, 'kill': 0, 'stop': 1, 'heuristicValue': 608, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1656.0
{'return': 475, 'kill': 0, 'heuristicValue': 609, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1559.0
{'return': 475, 'kill': 0, 'heuristicValue': 609, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1559.0
{'return': 473, 'kill': 0, 'heuristicValue': 609, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1555.0
['West', 'Stop', 'East', 'North', 'South']
[-1559.0, -1656.0, -1559.0, -1559.0, -1555.0]
{'kill': 0, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
{'kill': 0, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'opponent': 0, 'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East', 'North', 'South']
[-112, -213, -116, -114, -114]
{'return': 449, 'kill': 0, 'stop': 1, 'heuristicValue': 575}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1573.0
{'return': 448, 'kill': 0, 'heuristicValue': 574, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1472.0
{'return': 450, 'kill': 0, 'heuristicValue': 576}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1476.0
['Stop', 'North', 'South']
[-1573.0, -1472.0, -1476.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'return': 31, 'kill': 0, 'heuristicValue': 111, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['Stop', 'East', 'North', 'South']
[-212, -115, -153, -113]
{'return': 443, 'kill': 0, 'heuristicValue': 573}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1459.0
{'return': 442, 'kill': 0, 'stop': 1, 'heuristicValue': 574}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1558.0
{'return': 443, 'kill': 0, 'heuristicValue': 575}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1461.0
{'return': 443, 'kill': 0, 'heuristicValue': 575}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1461.0
{'return': 441, 'kill': 0, 'heuristicValue': 575, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1459.0
['West', 'Stop', 'East', 'North', 'South']
[-1459.0, -1558.0, -1461.0, -1461.0, -1459.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'kill': 0, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'return': 30, 'opponent': 5, 'kill': 0, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
{'kill': 0, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['Stop', 'East', 'North', 'South']
[-213, -114, -154, -114]
{'return': 419, 'kill': 0, 'stop': 1, 'heuristicValue': 575}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1513.0
{'return': 418, 'kill': 0, 'heuristicValue': 574, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 420, 'kill': 0, 'heuristicValue': 576}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1416.0
['Stop', 'North', 'South']
[-1513.0, -1412.0, -1416.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'kill': 0, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'return': 31, 'opponent': 5, 'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['Stop', 'East', 'North', 'South']
[-214, -115, -157, -113]
{'return': 417, 'kill': 0, 'heuristicValue': 573, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1407.0
{'return': 418, 'kill': 0, 'stop': 1, 'heuristicValue': 574, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1510.0
{'return': 419, 'kill': 0, 'heuristicValue': 575, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1413.0
{'return': 419, 'kill': 0, 'heuristicValue': 575, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1413.0
{'return': 419, 'opponent': 0, 'kill': 0, 'heuristicValue': 575, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1415.0
['West', 'Stop', 'East', 'North', 'South']
[-1407.0, -1510.0, -1413.0, -1413.0, -1415.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'opponent': 0, 'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
['Stop', 'East', 'North', 'South']
[-213, -114, -116, -112]
{'return': 416, 'kill': 0, 'heuristicValue': 572, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1404.0
{'return': 417, 'kill': 0, 'stop': 1, 'heuristicValue': 573, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1507.0
{'return': 418, 'opponent': 0, 'kill': 0, 'heuristicValue': 574, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
['West', 'Stop', 'East']
[-1404.0, -1507.0, -1412.0]
{'kill': 0, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
{'kill': 0, 'stop': 1, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'opponent': 0, 'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'East', 'North']
[-111, -212, -113, -115]
{'return': 408, 'kill': 0, 'stop': 1, 'heuristicValue': 572, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1488.0
{'return': 407, 'opponent': 0, 'kill': 0, 'heuristicValue': 573, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1389.0
{'return': 409, 'kill': 0, 'heuristicValue': 571, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1389.0
{'return': 409, 'kill': 0, 'heuristicValue': 571, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1389.0
['Stop', 'East', 'North', 'South']
[-1488.0, -1389.0, -1389.0, -1389.0]
{'kill': 0, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
{'kill': 0, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-211
{'opponent': 0, 'kill': 0, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East']
[-110, -211, -114]
{'return': 410, 'kill': 0, 'heuristicValue': 570, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.0
{'return': 409, 'kill': 0, 'stop': 1, 'heuristicValue': 571, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1489.0
{'return': 408, 'opponent': 0, 'kill': 0, 'heuristicValue': 572, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.0
['West', 'Stop', 'South']
[-1390.0, -1489.0, -1390.0]
{'kill': 0, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-109
{'kill': 0, 'stop': 1, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-210
{'opponent': 0, 'kill': 0, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['West', 'Stop', 'East']
[-109, -210, -113]
{'return': 411, 'kill': 0, 'heuristicValue': 569, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.0
{'return': 410, 'kill': 0, 'stop': 1, 'heuristicValue': 570, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1490.0
{'return': 409, 'opponent': 0, 'kill': 0, 'heuristicValue': 571, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.0
['West', 'Stop', 'East']
[-1391.0, -1490.0, -1391.0]
{'kill': 0, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-108
{'kill': 0, 'stop': 1, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
{'opponent': 0, 'kill': 0, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
['West', 'Stop', 'East']
[-108, -209, -112]
{'return': 410, 'opponent': 0, 'kill': 0, 'heuristicValue': 570, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.0
{'return': 409, 'kill': 0, 'stop': 1, 'heuristicValue': 571, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1489.0
{'return': 408, 'kill': 0, 'heuristicValue': 572, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1388.0
['West', 'Stop', 'South']
[-1392.0, -1489.0, -1388.0]
{'kill': 0, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-107
{'kill': 0, 'stop': 1, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-208
{'opponent': 0, 'kill': 0, 'heuristicValue': 109, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
['West', 'Stop', 'East']
[-107, -208, -111]
{'return': 408, 'kill': 0, 'stop': 1, 'heuristicValue': 572, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1488.0
{'return': 407, 'kill': 0, 'heuristicValue': 573, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1387.0
{'return': 409, 'opponent': 0, 'kill': 0, 'heuristicValue': 571, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.0
{'return': 409, 'kill': 0, 'heuristicValue': 571, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1389.0
['Stop', 'East', 'North', 'South']
[-1488.0, -1387.0, -1391.0, -1389.0]
{'kill': 0, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-106
{'kill': 0, 'stop': 1, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-207
{'opponent': 0, 'kill': 0, 'heuristicValue': 108, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
['West', 'Stop', 'East']
[-106, -207, -110]
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 572, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1342.0
{'return': 385, 'kill': 0, 'stop': 1, 'heuristicValue': 573, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1443.0
{'return': 386, 'kill': 0, 'heuristicValue': 574, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1346.0
['West', 'Stop', 'East']
[-1342.0, -1443.0, -1346.0]
{'kill': 0, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-107
{'kill': 0, 'stop': 1, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-206
{'opponent': 0, 'kill': 0, 'heuristicValue': 107, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-109
{'kill': 0, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-105
['West', 'Stop', 'East', 'North']
[-107, -206, -109, -105]
{'return': 384, 'kill': 0, 'stop': 1, 'heuristicValue': 540, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.0
{'return': 385, 'opponent': 0, 'kill': 0, 'heuristicValue': 541, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1313.0
{'return': 385, 'kill': 0, 'heuristicValue': 539, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1309.0
{'return': 383, 'kill': 0, 'heuristicValue': 539, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1305.0
['Stop', 'East', 'North', 'South']
[-1408.0, -1313.0, -1309.0, -1305.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-205
{'kill': 0, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-104
{'opponent': 0, 'kill': 0, 'heuristicValue': 106, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-108
['Stop', 'North', 'South']
[-205, -104, -108]
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 539, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1405.0
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 540, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1310.0
{'return': 382, 'kill': 0, 'heuristicValue': 538, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1302.0
['Stop', 'North', 'South']
[-1405.0, -1310.0, -1302.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-204
{'kill': 0, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-103
{'opponent': 0, 'kill': 0, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-107
['Stop', 'North', 'South']
[-204, -103, -107]
{'return': 382, 'kill': 0, 'stop': 1, 'heuristicValue': 538, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1402.0
{'return': 383, 'opponent': 0, 'kill': 0, 'heuristicValue': 539, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1307.0
{'return': 381, 'kill': 0, 'heuristicValue': 537, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1299.0
['Stop', 'North', 'South']
[-1402.0, -1307.0, -1299.0]
{'kill': 32, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-523
{'kill': 33, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-432
{'opponent': 0, 'kill': 31, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-416
['Stop', 'North', 'South']
[-523, -432, -416]
{'return': 380, 'kill': 12, 'heuristicValue': 536}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1417.2
{'return': 379, 'kill': 11, 'stop': 1, 'heuristicValue': 537}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1506.1
{'return': 378, 'kill': 10, 'heuristicValue': 538, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1397.0
{'return': 380, 'kill': 12, 'heuristicValue': 538}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1419.2
['West', 'Stop', 'North', 'South']
[-1417.2, -1506.1, -1397.0, -1419.2]
{'return': 38, 'kill': 32, 'stop': 1, 'heuristicValue': 104, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-584
{'return': 39, 'opponent': 5, 'kill': 33, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-493
{'return': 37, 'kill': 31, 'heuristicValue': 105, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-477
['Stop', 'North', 'South']
[-584, -493, -477]
{'return': 378, 'kill': 9, 'stop': 1, 'heuristicValue': 538}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1484.9
{'return': 377, 'kill': 8, 'heuristicValue': 539}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1373.8
{'return': 379, 'kill': 10, 'heuristicValue': 537, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1398.0
['Stop', 'North', 'South']
[-1484.9, -1373.8, -1398.0]
{'return': 37, 'kill': 32, 'stop': 1, 'heuristicValue': 105, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-591
{'return': 38, 'opponent': 3, 'kill': 33, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-500
{'return': 36, 'kill': 31, 'heuristicValue': 106, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-484
['Stop', 'North', 'South']
[-591, -500, -484]
{'return': 351, 'kill': 9, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1489.9
{'return': 352, 'kill': 8, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1382.8
{'return': 350, 'opponent': 0, 'kill': 10, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1399.0
['Stop', 'North', 'South']
[-1489.9, -1382.8, -1399.0]
{'kill': 0, 'opponent': 0, 'stop': 1, 'heuristicValue': 144, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 0, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
{'kill': 0, 'heuristicValue': 143, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-143
['Stop', 'North', 'South']
[-246, -145, -143]
{'return': 352, 'kill': 0, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1402.0
{'return': 353, 'kill': 0, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1305.0
{'return': 353, 'kill': 0, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1303.0
{'return': 351, 'opponent': 0, 'kill': 0, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1301.0
['Stop', 'East', 'North', 'South']
[-1402.0, -1305.0, -1303.0, -1301.0]
{'kill': 8, 'stop': 1, 'heuristicValue': 143, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-323
{'opponent': 0, 'kill': 9, 'heuristicValue': 144, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
{'kill': 7, 'heuristicValue': 142, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
['Stop', 'North', 'South']
[-323, -236, -212]
{'return': 351, 'kill': 7, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1469.7
{'return': 352, 'opponent': 0, 'kill': 6, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1364.6
{'return': 350, 'kill': 8, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1376.8
['Stop', 'North', 'South']
[-1469.7, -1364.6, -1376.8]
{'kill': 8, 'stop': 1, 'heuristicValue': 142, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-322
{'opponent': 0, 'kill': 9, 'heuristicValue': 143, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-235
{'kill': 7, 'heuristicValue': 141, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-211
['Stop', 'North', 'South']
[-322, -235, -211]
{'return': 352, 'kill': 5, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.5
{'return': 353, 'kill': 4, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1345.4
{'return': 353, 'kill': 6, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1363.6
{'return': 351, 'opponent': 0, 'kill': 6, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1361.6
['Stop', 'East', 'North', 'South']
[-1452.5, -1345.4, -1363.6, -1361.6]
{'kill': 6, 'stop': 1, 'heuristicValue': 141, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-301
{'opponent': 0, 'kill': 7, 'heuristicValue': 142, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'kill': 5, 'heuristicValue': 140, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-190
['Stop', 'North', 'South']
[-301, -214, -190]
{'return': 352, 'opponent': 0, 'kill': 6, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1364.6
{'return': 353, 'kill': 5, 'stop': 1, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1455.5
{'return': 354, 'kill': 4, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1348.4
['West', 'Stop', 'East']
[-1364.6, -1455.5, -1348.4]
{'kill': 3, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-169
{'kill': 4, 'stop': 1, 'heuristicValue': 140, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-280
{'opponent': 0, 'kill': 5, 'heuristicValue': 141, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-193
{'kill': 5, 'heuristicValue': 141, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-191
['West', 'Stop', 'North', 'South']
[-169, -280, -193, -191]
{'return': 353, 'opponent': 0, 'kill': 6, 'heuristicValue': 599, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1367.6
{'return': 354, 'kill': 5, 'stop': 1, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1458.5
{'return': 355, 'kill': 6, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1371.6
{'return': 355, 'kill': 6, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1371.6
{'return': 355, 'kill': 4, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.4
['West', 'Stop', 'East', 'North', 'South']
[-1367.6, -1458.5, -1371.6, -1371.6, -1351.4]
{'kill': 3, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-168
{'kill': 4, 'stop': 1, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-279
{'opponent': 0, 'kill': 5, 'heuristicValue': 140, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-192
['West', 'Stop', 'East']
[-168, -279, -192]
{'return': 355, 'kill': 3, 'stop': 1, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1441.3
{'return': 354, 'opponent': 0, 'kill': 4, 'heuristicValue': 600, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1350.4
{'return': 356, 'kill': 2, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1334.2
['Stop', 'North', 'South']
[-1441.3, -1350.4, -1334.2]
{'kill': 3, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-167
{'kill': 2, 'stop': 1, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'opponent': 0, 'kill': 3, 'heuristicValue': 139, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-171
{'kill': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
['West', 'Stop', 'East', 'North']
[-167, -258, -171, -145]
{'return': 356, 'kill': 3, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.3
{'return': 357, 'kill': 2, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1337.2
{'return': 355, 'opponent': 0, 'kill': 4, 'heuristicValue': 601, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.4
['Stop', 'East', 'North']
[-1444.3, -1337.2, -1353.4]
{'kill': 2, 'stop': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'kill': 1, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-144
{'opponent': 0, 'kill': 3, 'heuristicValue': 138, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-170
['Stop', 'North', 'South']
[-255, -144, -170]
{'return': 356, 'opponent': 0, 'kill': 4, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.4
{'return': 357, 'kill': 3, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1447.3
{'return': 358, 'kill': 2, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1340.2
{'return': 358, 'kill': 4, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1360.4
['West', 'Stop', 'East', 'South']
[-1356.4, -1447.3, -1340.2, -1360.4]
{'kill': 3, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'kill': 2, 'stop': 1, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
{'kill': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
{'opponent': 0, 'kill': 3, 'heuristicValue': 135, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-167
['West', 'Stop', 'North', 'South']
[-163, -254, -145, -167]
{'return': 357, 'opponent': 0, 'kill': 4, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.4
{'return': 358, 'kill': 3, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.3
{'return': 359, 'kill': 2, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1343.2
['West', 'Stop', 'East']
[-1359.4, -1450.3, -1343.2]
{'kill': 0, 'stop': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-235
{'kill': 0, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'opponent': 0, 'kill': 0, 'heuristicValue': 134, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['Stop', 'North', 'South']
[-235, -136, -136]
{'return': 460, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 459, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1623.0
{'return': 460, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 458, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1522.0
['West', 'Stop', 'North', 'South']
[-1526.0, -1623.0, -1526.0, -1522.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
{'kill': 0, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'opponent': 0, 'kill': 0, 'heuristicValue': 135, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
['Stop', 'North', 'South']
[-236, -137, -137]
{'return': 458, 'kill': 0, 'stop': 1, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1622.0
{'return': 459, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1525.0
{'return': 459, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1523.0
['Stop', 'North', 'South']
[-1622.0, -1525.0, -1523.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-237
{'opponent': 0, 'kill': 0, 'heuristicValue': 136, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
['Stop', 'South']
[-237, -138]
{'return': 460, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
{'return': 459, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1623.0
{'return': 460, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 458, 'opponent': 0, 'kill': 0, 'heuristicValue': 606, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
['West', 'Stop', 'East', 'North']
[-1524.0, -1623.0, -1526.0, -1524.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
{'opponent': 0, 'kill': 0, 'heuristicValue': 137, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['Stop', 'North', 'South']
[-236, -139, -135]
{'return': 461, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1527.0
{'return': 460, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1624.0
{'return': 459, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1525.0
{'return': 461, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1525.0
['West', 'Stop', 'East', 'South']
[-1527.0, -1624.0, -1525.0, -1525.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-235
{'opponent': 0, 'kill': 0, 'heuristicValue': 136, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['Stop', 'North', 'South']
[-235, -138, -134]
{'return': 461, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1625.0
{'return': 460, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 462, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
['Stop', 'North', 'South']
[-1625.0, -1526.0, -1526.0]
{'kill': 0, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 0, 'stop': 1, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
{'opponent': 0, 'kill': 0, 'heuristicValue': 135, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['West', 'Stop', 'North', 'South']
[-133, -234, -137, -135]
{'return': 463, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1529.0
{'return': 462, 'kill': 0, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1626.0
{'return': 463, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1529.0
{'return': 461, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1527.0
{'return': 463, 'kill': 0, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1527.0
['West', 'Stop', 'East', 'North', 'South']
[-1529.0, -1626.0, -1529.0, -1527.0, -1527.0]
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'stop': 1, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-233
{'opponent': 0, 'kill': 0, 'heuristicValue': 134, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'East']
[-132, -233, -136]
{'return': 461, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1625.0
{'return': 460, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
{'return': 462, 'opponent': 0, 'kill': 0, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1528.0
['Stop', 'North', 'South']
[-1625.0, -1524.0, -1528.0]
{'kill': 0, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'kill': 0, 'stop': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'opponent': 0, 'kill': 0, 'heuristicValue': 133, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 0, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East', 'South']
[-131, -232, -135, -133]
{'return': 461, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1527.0
{'return': 460, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1624.0
{'return': 459, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1523.0
{'return': 461, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1527.0
['West', 'Stop', 'East', 'South']
[-1527.0, -1624.0, -1523.0, -1527.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-231
{'opponent': 0, 'kill': 0, 'heuristicValue': 132, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
['Stop', 'East', 'North']
[-231, -134, -130]
{'return': 460, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 459, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1623.0
{'return': 460, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 458, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1522.0
['West', 'Stop', 'East', 'North']
[-1526.0, -1623.0, -1526.0, -1522.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'kill': 0, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
{'opponent': 0, 'kill': 0, 'heuristicValue': 131, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['Stop', 'North', 'South']
[-230, -129, -133]
{'return': 458, 'kill': 0, 'stop': 1, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1622.0
{'return': 459, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1523.0
{'return': 459, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1525.0
['Stop', 'North', 'South']
[-1622.0, -1523.0, -1525.0]
{'kill': 0, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
{'kill': 0, 'stop': 1, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-229
{'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
{'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
{'opponent': 0, 'kill': 0, 'heuristicValue': 130, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
['West', 'Stop', 'East', 'North', 'South']
[-128, -229, -130, -130, -132]
{'return': 460, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
{'return': 459, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1623.0
{'return': 460, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 458, 'opponent': 0, 'kill': 0, 'heuristicValue': 606, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
['West', 'Stop', 'North', 'South']
[-1524.0, -1623.0, -1526.0, -1524.0]
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'stop': 1, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-228
{'opponent': 0, 'kill': 0, 'heuristicValue': 129, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
['West', 'Stop', 'East']
[-127, -228, -131]
{'return': 458, 'kill': 0, 'stop': 1, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1622.0
{'return': 459, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1525.0
{'return': 459, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1523.0
['Stop', 'North', 'South']
[-1622.0, -1525.0, -1523.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-227
{'opponent': 0, 'kill': 0, 'heuristicValue': 128, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
['Stop', 'East', 'North', 'South']
[-227, -130, -126, -126]
{'return': 460, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
{'return': 459, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1623.0
{'return': 460, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1526.0
{'return': 458, 'opponent': 0, 'kill': 0, 'heuristicValue': 606, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.0
['West', 'Stop', 'East', 'North']
[-1524.0, -1623.0, -1526.0, -1524.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
{'opponent': 0, 'kill': 0, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
['Stop', 'North', 'South']
[-226, -129, -125]
{'return': 437, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.0
{'return': 438, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1580.0
{'return': 439, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.0
{'return': 439, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.0
['West', 'Stop', 'East', 'South']
[-1479.0, -1580.0, -1485.0, -1481.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'opponent': 0, 'kill': 0, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
{'kill': 0, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['Stop', 'North', 'South']
[-225, -128, -124]
{'return': 404, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1414.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1511.0
{'return': 404, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1414.0
{'return': 402, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.0
['West', 'Stop', 'East', 'North']
[-1414.0, -1511.0, -1414.0, -1408.0]
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
{'kill': 0, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'opponent': 0, 'kill': 0, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
['West', 'Stop', 'North', 'South']
[-123, -224, -127, -125]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1409.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1413.0
['Stop', 'North', 'South']
[-1508.0, -1409.0, -1413.0]
{'kill': 0, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
{'kill': 0, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'opponent': 0, 'kill': 0, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
['West', 'Stop', 'East']
[-122, -223, -126]
{'return': 404, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
['West', 'Stop', 'East', 'South']
[-1410.0, -1509.0, -1412.0, -1410.0]
{'kill': 0, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
{'kill': 0, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'opponent': 0, 'kill': 0, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['West', 'Stop', 'East', 'North', 'South']
[-121, -222, -125, -123, -123]
{'return': 404, 'kill': 0, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1510.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
{'return': 405, 'kill': 0, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
['Stop', 'East', 'North']
[-1510.0, -1411.0, -1411.0]
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'opponent': 0, 'kill': 0, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['West', 'Stop', 'East']
[-120, -221, -124]
{'return': 404, 'opponent': 0, 'kill': 0, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.0
['West', 'Stop', 'East', 'South']
[-1412.0, -1509.0, -1412.0, -1408.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'opponent': 0, 'kill': 0, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['Stop', 'East', 'North', 'South']
[-220, -123, -119, -123]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
{'return': 403, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
['Stop', 'North', 'South']
[-1508.0, -1411.0, -1411.0]
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'opponent': 0, 'kill': 0, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
['West', 'Stop', 'North', 'South']
[-118, -219, -120, -122]
{'return': 404, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
['West', 'Stop', 'East', 'South']
[-1410.0, -1509.0, -1412.0, -1410.0]
{'kill': 0, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
['West', 'Stop', 'East']
[-117, -218, -121]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
{'return': 403, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
['Stop', 'North', 'South']
[-1508.0, -1411.0, -1411.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['Stop', 'East', 'North', 'South']
[-217, -120, -118, -116]
{'return': 404, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
['West', 'Stop', 'East', 'South']
[-1410.0, -1509.0, -1412.0, -1410.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['Stop', 'North', 'South']
[-216, -119, -115]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
{'return': 403, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
['Stop', 'North', 'South']
[-1508.0, -1411.0, -1411.0]
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'North', 'South']
[-114, -215, -118, -114]
{'return': 404, 'kill': 0, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1414.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1511.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
['West', 'Stop', 'East', 'North']
[-1414.0, -1511.0, -1412.0, -1410.0]
{'kill': 0, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'opponent': 0, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'North', 'South']
[-113, -214, -117, -115]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'kill': 0, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1409.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1413.0
['Stop', 'North', 'South']
[-1508.0, -1409.0, -1413.0]
{'kill': 0, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
{'kill': 0, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'opponent': 0, 'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East', 'North']
[-112, -213, -116, -114]
{'return': 404, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
['West', 'Stop', 'East', 'South']
[-1410.0, -1509.0, -1412.0, -1410.0]
{'return': 31, 'kill': 0, 'heuristicValue': 111, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
{'return': 30, 'kill': 0, 'stop': 1, 'heuristicValue': 112, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
{'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['West', 'Stop', 'East', 'North', 'South']
[-157, -252, -115, -155, -113]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
{'return': 403, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
['Stop', 'North', 'South']
[-1508.0, -1411.0, -1411.0]
{'return': 32, 'kill': 0, 'heuristicValue': 112, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'return': 31, 'kill': 0, 'stop': 1, 'heuristicValue': 113, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'return': 30, 'opponent': 4, 'kill': 0, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
{'kill': 0, 'heuristicValue': 116}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['West', 'Stop', 'North', 'South']
[-160, -255, -158, -116]
{'return': 404, 'kill': 0, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
{'return': 403, 'kill': 0, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.0
{'return': 404, 'kill': 0, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.0
{'return': 402, 'opponent': 0, 'kill': 0, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.0
['West', 'Stop', 'East', 'South']
[-1410.0, -1509.0, -1412.0, -1410.0]
{'return': 33, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-165
{'return': 32, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-260
{'return': 31, 'opponent': 4, 'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 0, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'North', 'South']
[-165, -260, -161, -115]
{'return': 402, 'kill': 0, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1508.0
{'return': 403, 'opponent': 0, 'kill': 0, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
{'return': 403, 'kill': 0, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1411.0
['Stop', 'North', 'South']
[-1508.0, -1411.0, -1411.0]
{'kill': 6, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-174
{'kill': 5, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-265
{'kill': 6, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-176
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
{'kill': 6, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-174
['West', 'Stop', 'East', 'North', 'South']
[-174, -265, -176, -158, -174]
{'return': 404, 'kill': 21, 'heuristicValue': 606, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1626.1
{'return': 403, 'kill': 20, 'stop': 1, 'heuristicValue': 605, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1713.0
{'return': 404, 'kill': 21, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1624.1
{'return': 402, 'opponent': 0, 'kill': 19, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1601.9
['West', 'Stop', 'East', 'North']
[-1626.1, -1713.0, -1624.1, -1601.9]
{'kill': 4, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'kill': 3, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 2, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'opponent': 0, 'kill': 4, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-155, -246, -133, -157]
{'return': 402, 'kill': 20, 'stop': 1, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1710.0
{'return': 403, 'kill': 19, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1600.9
{'return': 403, 'opponent': 0, 'kill': 21, 'heuristicValue': 605, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1625.1
['Stop', 'North', 'South']
[-1710.0, -1600.9, -1625.1]
{'kill': 4, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-152
{'kill': 3, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'kill': 2, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['West', 'Stop', 'North', 'South']
[-152, -243, -132, -158]
{'return': 404, 'kill': 17, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1581.7
{'return': 403, 'kill': 18, 'stop': 1, 'heuristicValue': 603, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1690.8
{'return': 404, 'kill': 19, 'heuristicValue': 604, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1603.9
{'return': 402, 'opponent': 0, 'kill': 19, 'heuristicValue': 604, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1601.9
['West', 'Stop', 'East', 'South']
[-1581.7, -1690.8, -1603.9, -1601.9]
{'kill': 4, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-151
{'kill': 3, 'stop': 1, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
{'kill': 2, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 2, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'opponent': 0, 'kill': 4, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
['West', 'Stop', 'East', 'North', 'South']
[-151, -242, -133, -133, -155]
{'return': 404, 'kill': 16, 'stop': 1, 'heuristicValue': 602, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1671.6
{'return': 403, 'opponent': 0, 'kill': 17, 'heuristicValue': 603, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1582.7
{'return': 405, 'kill': 15, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1562.5
['Stop', 'East', 'North']
[-1671.6, -1582.7, -1562.5]
{'opponent': 0, 'kill': 4, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
{'kill': 3, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'East', 'North']
[-154, -243, -134, -134]
{'return': 405, 'kill': 14, 'stop': 1, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1652.4
{'return': 406, 'kill': 13, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1543.3
{'return': 404, 'opponent': 0, 'kill': 15, 'heuristicValue': 602, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1563.5
['Stop', 'North', 'South']
[-1652.4, -1543.3, -1563.5]
{'kill': 4, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 3, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'kill': 2, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'opponent': 0, 'kill': 4, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
['West', 'Stop', 'East', 'South']
[-153, -244, -135, -155]
{'return': 407, 'kill': 11, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1524.1
{'return': 406, 'kill': 12, 'stop': 1, 'heuristicValue': 600, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1633.2
{'return': 407, 'kill': 13, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1546.3
{'return': 407, 'kill': 13, 'heuristicValue': 601, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1546.3
{'return': 405, 'opponent': 0, 'kill': 13, 'heuristicValue': 601, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1544.3
['West', 'Stop', 'East', 'North', 'South']
[-1524.1, -1633.2, -1546.3, -1546.3, -1544.3]
{'opponent': 0, 'kill': 4, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 2, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 4, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
['West', 'Stop', 'North', 'South']
[-156, -245, -136, -154]
{'return': 408, 'kill': 9, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1504.9
{'return': 407, 'kill': 10, 'stop': 1, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1614.0
{'return': 406, 'opponent': 0, 'kill': 11, 'heuristicValue': 600, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1525.1
['West', 'Stop', 'East']
[-1504.9, -1614.0, -1525.1]
{'kill': 3, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 2, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'opponent': 0, 'kill': 4, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['Stop', 'North', 'South']
[-246, -137, -157]
{'return': 408, 'kill': 8, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1594.8
{'return': 407, 'opponent': 0, 'kill': 9, 'heuristicValue': 599, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1505.9
{'return': 409, 'kill': 9, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1505.9
{'return': 409, 'kill': 7, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.7
['Stop', 'East', 'North', 'South']
[-1594.8, -1505.9, -1505.9, -1485.7]
{'kill': 3, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-247
{'kill': 2, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
{'kill': 4, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-247, -138, -158, -158]
{'return': 409, 'kill': 6, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1575.6
{'return': 408, 'opponent': 0, 'kill': 7, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1486.7
{'return': 410, 'kill': 5, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1466.5
['Stop', 'North', 'South']
[-1575.6, -1486.7, -1466.5]
{'opponent': 0, 'kill': 4, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
{'kill': 3, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 2, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
['West', 'Stop', 'East']
[-159, -248, -139]
{'return': 410, 'kill': 6, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1576.6
{'return': 409, 'opponent': 0, 'kill': 7, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1487.7
{'return': 411, 'kill': 5, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.5
['Stop', 'North', 'South']
[-1576.6, -1487.7, -1467.5]
{'opponent': 0, 'kill': 4, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'kill': 3, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-249
{'kill': 4, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
{'kill': 2, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-140
['West', 'Stop', 'North', 'South']
[-160, -249, -160, -140]
{'return': 412, 'kill': 5, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1468.5
{'return': 411, 'kill': 6, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1577.6
{'return': 410, 'opponent': 0, 'kill': 7, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1488.7
{'return': 412, 'kill': 7, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1490.7
['West', 'Stop', 'North', 'South']
[-1468.5, -1577.6, -1488.7, -1490.7]
{'kill': 3, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
{'kill': 4, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'opponent': 0, 'kill': 4, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 2, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-143
['Stop', 'East', 'North', 'South']
[-250, -161, -161, -143]
{'return': 380, 'kill': 5, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1403.5
{'return': 379, 'kill': 6, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1512.6
{'return': 378, 'opponent': 0, 'kill': 7, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1423.7
['West', 'Stop', 'East']
[-1403.5, -1512.6, -1423.7]
{'kill': 3, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-253
{'opponent': 0, 'kill': 4, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-162
{'kill': 2, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['Stop', 'North', 'South']
[-253, -162, -142]
{'return': 381, 'kill': 5, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1404.5
{'return': 380, 'kill': 6, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1513.6
{'return': 379, 'opponent': 0, 'kill': 7, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1424.7
{'return': 381, 'kill': 7, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1426.7
{'return': 381, 'kill': 7, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1426.7
['West', 'Stop', 'East', 'North', 'South']
[-1404.5, -1513.6, -1424.7, -1426.7, -1426.7]
{'kill': 3, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
{'opponent': 0, 'kill': 4, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-165
{'kill': 2, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
['Stop', 'North', 'South']
[-252, -165, -141]
{'return': 382, 'kill': 5, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1405.5
{'return': 381, 'kill': 6, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1514.6
{'return': 380, 'opponent': 0, 'kill': 7, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1425.7
['West', 'Stop', 'East']
[-1405.5, -1514.6, -1425.7]
{'kill': 3, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-251
{'opponent': 0, 'kill': 4, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-164
{'kill': 2, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-140
['Stop', 'North', 'South']
[-251, -164, -140]
{'return': 382, 'kill': 6, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1515.6
{'return': 381, 'opponent': 0, 'kill': 7, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1426.7
{'return': 383, 'kill': 7, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1426.7
{'return': 383, 'kill': 5, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1406.5
['Stop', 'East', 'North', 'South']
[-1515.6, -1426.7, -1426.7, -1406.5]
{'kill': 2, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
{'kill': 3, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
{'opponent': 0, 'kill': 4, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'kill': 4, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
['West', 'Stop', 'North', 'South']
[-139, -250, -163, -161]
{'return': 383, 'kill': 6, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1516.6
{'return': 382, 'opponent': 0, 'kill': 7, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1427.7
{'return': 384, 'kill': 5, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1407.5
['Stop', 'North', 'South']
[-1516.6, -1427.7, -1407.5]
{'kill': 2, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
{'kill': 3, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-249
{'opponent': 0, 'kill': 4, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-162
['West', 'Stop', 'East']
[-138, -249, -162]
{'return': 384, 'kill': 6, 'stop': 1, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1517.6
{'return': 383, 'opponent': 0, 'kill': 7, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1428.7
{'return': 385, 'kill': 5, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.5
['Stop', 'North', 'South']
[-1517.6, -1428.7, -1408.5]
{'kill': 3, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'opponent': 0, 'kill': 4, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 2, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 4, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['Stop', 'East', 'North', 'South']
[-248, -161, -135, -157]
{'return': 385, 'kill': 6, 'stop': 1, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1518.6
{'return': 384, 'opponent': 0, 'kill': 7, 'heuristicValue': 589, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1429.7
{'return': 386, 'kill': 5, 'heuristicValue': 587, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1409.5
['Stop', 'North', 'South']
[-1518.6, -1429.7, -1409.5]
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'opponent': 0, 'kill': 4, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-160
['Stop', 'North', 'South']
[-245, -134, -160]
{'return': 387, 'kill': 5, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.5
{'return': 386, 'kill': 6, 'stop': 1, 'heuristicValue': 587, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1519.6
{'return': 385, 'opponent': 0, 'kill': 7, 'heuristicValue': 588, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1430.7
{'return': 387, 'kill': 7, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1432.7
['West', 'Stop', 'North', 'South']
[-1410.5, -1519.6, -1430.7, -1432.7]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'return': 29, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
['West', 'Stop', 'North', 'South']
[-163, -258, -153, -159]
{'return': 388, 'kill': 0, 'heuristicValue': 585}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1361.0
{'return': 387, 'kill': 0, 'stop': 1, 'heuristicValue': 586}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1460.0
{'return': 386, 'kill': 0, 'heuristicValue': 587, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1361.0
['West', 'Stop', 'East']
[-1361.0, -1460.0, -1361.0]
{'return': 28, 'kill': 0, 'heuristicValue': 114, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
{'return': 27, 'kill': 0, 'stop': 1, 'heuristicValue': 115, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-249
{'kill': 0, 'heuristicValue': 116}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'return': 28, 'opponent': 4, 'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['West', 'Stop', 'North', 'South']
[-154, -249, -116, -156]
{'return': 387, 'opponent': 0, 'kill': 0, 'heuristicValue': 586, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1362.0
{'return': 386, 'kill': 0, 'stop': 1, 'heuristicValue': 587, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1459.0
{'return': 385, 'kill': 0, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1358.0
{'return': 387, 'kill': 0, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1362.0
['West', 'Stop', 'North', 'South']
[-1362.0, -1459.0, -1358.0, -1362.0]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
['Stop', 'North', 'South']
[-248, -117, -155]
{'return': 385, 'kill': 0, 'stop': 1, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1458.0
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 386, 'opponent': 0, 'kill': 0, 'heuristicValue': 587, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1361.0
['Stop', 'North', 'South']
[-1458.0, -1357.0, -1361.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 384, 'kill': 0, 'stop': 1, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1457.0
{'return': 383, 'kill': 0, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 385, 'opponent': 0, 'kill': 0, 'heuristicValue': 588, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1360.0
['Stop', 'North', 'South']
[-1457.0, -1356.0, -1360.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'South']
[-218, -119]
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 589, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['Stop', 'North', 'South']
[-1456.0, -1355.0, -1359.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -178, -180, -156]
{'return': 382, 'kill': 8, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1535.8
{'return': 381, 'kill': 9, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.9
{'return': 383, 'kill': 7, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1426.7
{'return': 383, 'opponent': 0, 'kill': 9, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1448.9
['Stop', 'East', 'North', 'South']
[-1535.8, -1444.9, -1426.7, -1448.9]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
['West', 'Stop', 'North', 'South']
[-1357.0, -1456.0, -1359.0, -1357.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 385, 'kill': 0, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1358.0
{'return': 384, 'kill': 0, 'stop': 1, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1457.0
{'return': 383, 'opponent': 0, 'kill': 0, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1358.0
['West', 'Stop', 'East']
[-1358.0, -1457.0, -1358.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'East']
[-119, -218, -119]
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 589, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'North', 'South']
[-1359.0, -1456.0, -1359.0, -1355.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -180, -178, -156]
{'return': 382, 'kill': 8, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1535.8
{'return': 381, 'kill': 9, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.9
{'return': 383, 'opponent': 0, 'kill': 7, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1428.7
{'return': 383, 'kill': 9, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
['Stop', 'East', 'North', 'South']
[-1535.8, -1444.9, -1428.7, -1446.9]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
['West', 'Stop', 'North', 'South']
[-1357.0, -1456.0, -1359.0, -1357.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 382, 'kill': 0, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1455.0
{'return': 381, 'kill': 0, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 383, 'opponent': 0, 'kill': 0, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1358.0
{'return': 383, 'kill': 0, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['Stop', 'East', 'North', 'South']
[-1455.0, -1354.0, -1358.0, -1356.0]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1357.0, -1454.0, -1353.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 381, 'opponent': 0, 'kill': 0, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 380, 'kill': 0, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1453.0
{'return': 379, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1352.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['West', 'Stop', 'East', 'North', 'South']
[-1356.0, -1453.0, -1352.0, -1356.0, -1356.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'South']
[-218, -119]
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East']
[-1355.0, -1452.0, -1351.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -178, -180, -156]
{'return': 379, 'opponent': 0, 'kill': 11, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1465.1
{'return': 378, 'kill': 12, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 377, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.3
{'return': 379, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.3
['West', 'Stop', 'North', 'South']
[-1465.1, -1572.2, -1481.3, -1485.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1353.0, -1452.0, -1353.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 381, 'kill': 0, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 380, 'kill': 0, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1453.0
{'return': 379, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['West', 'Stop', 'East', 'North', 'South']
[-1354.0, -1453.0, -1354.0, -1356.0, -1356.0]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'East']
[-1355.0, -1454.0, -1355.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 381, 'opponent': 0, 'kill': 9, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
{'return': 380, 'kill': 10, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1554.0
{'return': 379, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1463.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
['West', 'Stop', 'East', 'North', 'South']
[-1446.9, -1554.0, -1463.1, -1467.1, -1467.1]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'East']
[-1355.0, -1454.0, -1355.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 381, 'opponent': 0, 'kill': 9, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
{'return': 380, 'kill': 10, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1554.0
{'return': 379, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1463.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
['West', 'Stop', 'East', 'North', 'South']
[-1446.9, -1554.0, -1463.1, -1467.1, -1467.1]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'East']
[-1355.0, -1454.0, -1355.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 381, 'opponent': 0, 'kill': 0, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 380, 'kill': 0, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1453.0
{'return': 379, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1352.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['West', 'Stop', 'East', 'North', 'South']
[-1356.0, -1453.0, -1352.0, -1356.0, -1356.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'East']
[-119, -218, -119]
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East']
[-1355.0, -1452.0, -1351.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
['West', 'Stop', 'North', 'South']
[-120, -219, -120, -120]
{'return': 379, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 378, 'kill': 0, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1451.0
{'return': 377, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1350.0
{'return': 379, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
['West', 'Stop', 'North', 'South']
[-1354.0, -1451.0, -1350.0, -1354.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'opponent': 0, 'kill': 0, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
['Stop', 'South']
[-220, -121]
{'return': 377, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.0
{'return': 376, 'kill': 0, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['Stop', 'North', 'South']
[-1450.0, -1349.0, -1353.0]
{'kill': 4, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
{'kill': 5, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-269
{'opponent': 0, 'kill': 6, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-182
{'kill': 6, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
['West', 'Stop', 'North', 'South']
[-158, -269, -182, -180]
{'return': 376, 'kill': 12, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1570.2
{'return': 375, 'kill': 13, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.3
{'return': 377, 'opponent': 0, 'kill': 11, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1463.1
['Stop', 'North', 'South']
[-1570.2, -1479.3, -1463.1]
{'kill': 4, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
{'kill': 5, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-268
{'opponent': 0, 'kill': 6, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-181
['West', 'Stop', 'East']
[-157, -268, -181]
{'return': 377, 'kill': 12, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1571.2
{'return': 376, 'opponent': 0, 'kill': 13, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1482.3
{'return': 378, 'kill': 11, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1462.1
['Stop', 'North', 'South']
[-1571.2, -1482.3, -1462.1]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -180, -178, -156]
{'return': 379, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1463.1
{'return': 378, 'kill': 12, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 377, 'opponent': 0, 'kill': 13, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1483.3
{'return': 379, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.3
['West', 'Stop', 'North', 'South']
[-1463.1, -1572.2, -1483.3, -1485.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1353.0, -1452.0, -1353.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 381, 'kill': 0, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 380, 'kill': 0, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1453.0
{'return': 379, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['West', 'Stop', 'East', 'North', 'South']
[-1354.0, -1453.0, -1354.0, -1356.0, -1356.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'East']
[-119, -218, -119]
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East']
[-1355.0, -1452.0, -1351.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -180, -178, -156]
{'return': 379, 'opponent': 0, 'kill': 11, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1465.1
{'return': 378, 'kill': 12, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 377, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.3
{'return': 379, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.3
['West', 'Stop', 'North', 'South']
[-1465.1, -1572.2, -1481.3, -1485.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1353.0, -1452.0, -1353.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 379, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 378, 'kill': 0, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1451.0
{'return': 377, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1350.0
{'return': 379, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
['West', 'Stop', 'North', 'South']
[-1354.0, -1451.0, -1350.0, -1354.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'South']
[-218, -119]
{'return': 377, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.0
{'return': 376, 'kill': 0, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['Stop', 'North', 'South']
[-1450.0, -1349.0, -1353.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -178, -180, -156]
{'return': 376, 'kill': 14, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1590.4
{'return': 375, 'kill': 15, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1499.5
{'return': 377, 'opponent': 0, 'kill': 13, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1483.3
['Stop', 'North', 'South']
[-1590.4, -1499.5, -1483.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 377, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.0
{'return': 376, 'opponent': 0, 'kill': 0, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['Stop', 'North', 'South']
[-1450.0, -1351.0, -1351.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 379, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1463.1
{'return': 378, 'kill': 12, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 377, 'opponent': 0, 'kill': 13, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1483.3
{'return': 379, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.3
['West', 'Stop', 'North', 'South']
[-1463.1, -1572.2, -1483.3, -1485.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1353.0, -1452.0, -1353.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 381, 'kill': 9, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.9
{'return': 380, 'kill': 10, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1554.0
{'return': 379, 'opponent': 0, 'kill': 11, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1465.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
['West', 'Stop', 'East', 'North', 'South']
[-1444.9, -1554.0, -1465.1, -1467.1, -1467.1]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'East']
[-1355.0, -1454.0, -1355.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 382, 'kill': 0, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1455.0
{'return': 381, 'opponent': 0, 'kill': 0, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 383, 'kill': 0, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 383, 'kill': 0, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['Stop', 'East', 'North', 'South']
[-1455.0, -1356.0, -1356.0, -1356.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'South']
[-218, -119]
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
['West', 'Stop', 'North', 'South']
[-1357.0, -1456.0, -1359.0, -1357.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -178, -180, -156]
{'return': 385, 'kill': 5, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.5
{'return': 384, 'kill': 6, 'stop': 1, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1517.6
{'return': 383, 'opponent': 0, 'kill': 7, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1428.7
['West', 'Stop', 'East']
[-1408.5, -1517.6, -1428.7]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 385, 'kill': 0, 'stop': 1, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1458.0
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 589, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 386, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1361.0
{'return': 386, 'kill': 0, 'heuristicValue': 587, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['Stop', 'East', 'North', 'South']
[-1458.0, -1359.0, -1361.0, -1359.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 385, 'opponent': 0, 'kill': 0, 'heuristicValue': 588, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1360.0
{'return': 384, 'kill': 0, 'stop': 1, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1457.0
{'return': 383, 'kill': 0, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['West', 'Stop', 'East']
[-1360.0, -1457.0, -1356.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'South']
[-218, -119]
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 589, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'North', 'South']
[-1359.0, -1456.0, -1359.0, -1355.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -178, -180, -156]
{'return': 382, 'kill': 8, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1535.8
{'return': 381, 'kill': 9, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.9
{'return': 383, 'opponent': 0, 'kill': 7, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1428.7
{'return': 383, 'kill': 9, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
['Stop', 'East', 'North', 'South']
[-1535.8, -1444.9, -1428.7, -1446.9]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
['West', 'Stop', 'North', 'South']
[-1357.0, -1456.0, -1359.0, -1357.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 382, 'kill': 8, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1535.8
{'return': 381, 'kill': 9, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.9
{'return': 383, 'opponent': 0, 'kill': 7, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1428.7
{'return': 383, 'kill': 9, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
['Stop', 'East', 'North', 'South']
[-1535.8, -1444.9, -1428.7, -1446.9]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
['West', 'Stop', 'North', 'South']
[-1357.0, -1456.0, -1359.0, -1357.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 382, 'kill': 0, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1455.0
{'return': 381, 'kill': 0, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 383, 'opponent': 0, 'kill': 0, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1358.0
{'return': 383, 'kill': 0, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['Stop', 'East', 'North', 'South']
[-1455.0, -1354.0, -1358.0, -1356.0]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1357.0, -1454.0, -1353.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 381, 'opponent': 0, 'kill': 0, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 380, 'kill': 0, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1453.0
{'return': 379, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1352.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
{'return': 381, 'kill': 0, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1356.0
['West', 'Stop', 'East', 'North', 'South']
[-1356.0, -1453.0, -1352.0, -1356.0, -1356.0]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East']
[-1355.0, -1452.0, -1351.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['Stop', 'East', 'North', 'South']
[-217, -118, -118, -118]
{'return': 379, 'opponent': 0, 'kill': 0, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
{'return': 378, 'kill': 0, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1451.0
{'return': 377, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1350.0
{'return': 379, 'kill': 0, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1354.0
['West', 'Stop', 'North', 'South']
[-1354.0, -1451.0, -1350.0, -1354.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'East']
[-119, -218, -119]
{'return': 377, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.0
{'return': 376, 'kill': 0, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['Stop', 'North', 'South']
[-1450.0, -1349.0, -1353.0]
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
['West', 'Stop', 'North', 'South']
[-120, -219, -120, -120]
{'return': 376, 'kill': 0, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1449.0
{'return': 375, 'kill': 0, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1348.0
{'return': 377, 'opponent': 0, 'kill': 0, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1352.0
['Stop', 'North', 'South']
[-1449.0, -1348.0, -1352.0]
{'kill': 4, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
{'kill': 5, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-268
{'opponent': 0, 'kill': 6, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-181
['West', 'Stop', 'East']
[-157, -268, -181]
{'return': 375, 'kill': 14, 'stop': 1, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1589.4
{'return': 374, 'kill': 15, 'heuristicValue': 599, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1498.5
{'return': 376, 'kill': 15, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1500.5
{'return': 376, 'opponent': 0, 'kill': 13, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1482.3
['Stop', 'East', 'North', 'South']
[-1589.4, -1498.5, -1500.5, -1482.3]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'opponent': 0, 'kill': 6, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-180
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
['Stop', 'East', 'North', 'South']
[-267, -180, -178, -156]
{'return': 376, 'kill': 14, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1590.4
{'return': 375, 'opponent': 0, 'kill': 15, 'heuristicValue': 598, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1501.5
{'return': 377, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.3
['Stop', 'North', 'South']
[-1590.4, -1501.5, -1481.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 377, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.0
{'return': 376, 'opponent': 0, 'kill': 0, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['Stop', 'North', 'South']
[-1450.0, -1351.0, -1351.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 376, 'kill': 14, 'stop': 1, 'heuristicValue': 597, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1590.4
{'return': 375, 'kill': 15, 'heuristicValue': 598, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1499.5
{'return': 377, 'opponent': 0, 'kill': 13, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1483.3
['Stop', 'North', 'South']
[-1590.4, -1499.5, -1483.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 377, 'kill': 0, 'stop': 1, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1450.0
{'return': 376, 'opponent': 0, 'kill': 0, 'heuristicValue': 597, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 378, 'kill': 0, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['Stop', 'North', 'South']
[-1450.0, -1351.0, -1351.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 379, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1463.1
{'return': 378, 'kill': 12, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 377, 'opponent': 0, 'kill': 13, 'heuristicValue': 596, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1483.3
{'return': 379, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.3
['West', 'Stop', 'North', 'South']
[-1463.1, -1572.2, -1483.3, -1485.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1353.0, -1452.0, -1353.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 379, 'opponent': 0, 'kill': 11, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1465.1
{'return': 378, 'kill': 12, 'stop': 1, 'heuristicValue': 595, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1572.2
{'return': 377, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.3
{'return': 379, 'kill': 13, 'heuristicValue': 596, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1485.3
['West', 'Stop', 'North', 'South']
[-1465.1, -1572.2, -1481.3, -1485.3]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 380, 'kill': 0, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
{'return': 379, 'kill': 0, 'stop': 1, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1452.0
{'return': 378, 'opponent': 0, 'kill': 0, 'heuristicValue': 595, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1353.0
['West', 'Stop', 'East']
[-1353.0, -1452.0, -1353.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 381, 'kill': 9, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1444.9
{'return': 380, 'kill': 10, 'stop': 1, 'heuristicValue': 593, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1554.0
{'return': 379, 'opponent': 0, 'kill': 11, 'heuristicValue': 594, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1465.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
{'return': 381, 'kill': 11, 'heuristicValue': 594, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1467.1
['West', 'Stop', 'East', 'North', 'South']
[-1444.9, -1554.0, -1465.1, -1467.1, -1467.1]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 382, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
{'return': 381, 'kill': 0, 'stop': 1, 'heuristicValue': 592, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 380, 'opponent': 0, 'kill': 0, 'heuristicValue': 593, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1355.0
['West', 'Stop', 'East']
[-1355.0, -1454.0, -1355.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 382, 'kill': 8, 'stop': 1, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1535.8
{'return': 381, 'opponent': 0, 'kill': 9, 'heuristicValue': 592, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
{'return': 383, 'kill': 7, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1426.7
{'return': 383, 'kill': 9, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1446.9
['Stop', 'East', 'North', 'South']
[-1535.8, -1446.9, -1426.7, -1446.9]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 384, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
{'return': 383, 'kill': 0, 'stop': 1, 'heuristicValue': 590, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1456.0
{'return': 384, 'kill': 0, 'heuristicValue': 591, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 382, 'opponent': 0, 'kill': 0, 'heuristicValue': 591, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1357.0
['West', 'Stop', 'North', 'South']
[-1357.0, -1456.0, -1359.0, -1357.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 385, 'kill': 5, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.5
{'return': 384, 'kill': 6, 'stop': 1, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1517.6
{'return': 383, 'opponent': 0, 'kill': 7, 'heuristicValue': 590, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1428.7
['West', 'Stop', 'East']
[-1408.5, -1517.6, -1428.7]
{'return': 26, 'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 5}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'return': 27, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['Stop', 'North', 'South']
[-248, -119, -153]
{'return': 385, 'kill': 0, 'stop': 1, 'heuristicValue': 588, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1458.0
{'return': 384, 'opponent': 0, 'kill': 0, 'heuristicValue': 589, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 386, 'kill': 0, 'heuristicValue': 589, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1361.0
{'return': 386, 'kill': 0, 'heuristicValue': 587, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['Stop', 'East', 'North', 'South']
[-1458.0, -1359.0, -1361.0, -1359.0]
{'kill': 5, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'kill': 6, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-178
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
['Stop', 'East', 'North', 'South']
[-267, -178, -178, -158]
{'return': 386, 'kill': 4, 'stop': 1, 'heuristicValue': 587, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1499.4
{'return': 385, 'opponent': 0, 'kill': 5, 'heuristicValue': 588, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1410.5
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
['Stop', 'North', 'South']
[-1499.4, -1410.5, -1390.3]
{'kill': 3, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'opponent': 0, 'kill': 4, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-159
{'kill': 2, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['Stop', 'North', 'South']
[-246, -159, -135]
{'return': 388, 'kill': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1371.1
{'return': 387, 'kill': 2, 'stop': 1, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1480.2
{'return': 386, 'opponent': 0, 'kill': 3, 'heuristicValue': 587, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.3
{'return': 388, 'kill': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1371.1
['West', 'Stop', 'North', 'South']
[-1371.1, -1480.2, -1391.3, -1371.1]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'opponent': 0, 'kill': 4, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-158
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-134, -245, -158, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'opponent': 0, 'kill': 3, 'heuristicValue': 586, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1372.1, -1481.2, -1392.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1349.0, -1351.0, -1359.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
['West', 'Stop', 'East', 'South']
[-1374.1, -1481.2, -1390.3, -1372.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1349.0, -1351.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1374.1, -1481.2, -1390.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1349.0, -1351.0, -1359.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
['West', 'Stop', 'East', 'South']
[-1374.1, -1481.2, -1390.3, -1372.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1349.0, -1351.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1374.1, -1481.2, -1390.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1349.0, -1351.0, -1359.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
['West', 'Stop', 'East', 'South']
[-1374.1, -1481.2, -1390.3, -1372.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1349.0, -1351.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1374.1, -1481.2, -1390.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1349.0, -1351.0, -1359.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
['West', 'Stop', 'East', 'South']
[-1374.1, -1481.2, -1390.3, -1372.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1349.0, -1351.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1374.1, -1481.2, -1390.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1349.0, -1351.0, -1359.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
['West', 'Stop', 'East', 'South']
[-1374.1, -1481.2, -1390.3, -1372.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1349.0, -1351.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1374.1, -1481.2, -1390.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1349.0, -1351.0, -1359.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
['West', 'Stop', 'East', 'South']
[-1374.1, -1481.2, -1390.3, -1372.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1349.0, -1351.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1394.3
['West', 'Stop', 'North', 'South']
[-1374.1, -1481.2, -1390.3, -1394.3]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
['West', 'Stop', 'East', 'South']
[-163, -258, -155, -163]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
['West', 'Stop', 'East', 'North']
[-1359.0, -1454.0, -1351.0, -1349.0]
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['West', 'Stop', 'North', 'South']
[-136, -245, -156, -134]
{'return': 389, 'kill': 1, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1372.1
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'East', 'South']
[-1372.1, -1481.2, -1390.3, -1374.1]
{'return': 29, 'kill': 0, 'heuristicValue': 113, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-163
{'return': 28, 'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'return': 27, 'opponent': 4, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'return': 29, 'kill': 0, 'heuristicValue': 115, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-157
['West', 'Stop', 'North', 'South']
[-163, -258, -155, -157]
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
{'return': 389, 'kill': 0, 'stop': 1, 'heuristicValue': 584, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1454.0
{'return': 388, 'opponent': 3, 'kill': 0, 'heuristicValue': 585, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1351.0
{'return': 388, 'kill': 0, 'heuristicValue': 585, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1349.0
{'return': 390, 'kill': 0, 'heuristicValue': 583, 'opponent': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1359.0
['West', 'Stop', 'East', 'North', 'South']
[-1359.0, -1454.0, -1351.0, -1349.0, -1359.0]
{'kill': 2, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 3, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 4, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-156
{'opponent': 0, 'kill': 2, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'North', 'South']
[-134, -245, -156, -136]
{'return': 389, 'kill': 3, 'heuristicValue': 584, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.3
{'return': 388, 'kill': 2, 'stop': 1, 'heuristicValue': 585, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1481.2
{'return': 387, 'kill': 3, 'heuristicValue': 586, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.3
{'return': 389, 'opponent': 0, 'kill': 1, 'heuristicValue': 584, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1374.1
['West', 'Stop', 'North', 'South']
[-1392.3, -1481.2, -1390.3, -1374.1]
Time is up.
The Red team wins by 1 points.
recorded

