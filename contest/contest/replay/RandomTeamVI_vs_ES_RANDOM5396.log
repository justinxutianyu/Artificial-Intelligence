Archive:  contest_and_teams.zip
   creating: contest-tmp/bin/
   creating: contest-tmp/layouts/
   creating: contest-tmp/teams/
  inflating: contest-tmp/game.py     
  inflating: contest-tmp/contest.html  
  inflating: contest-tmp/textDisplay.py  
  inflating: contest-tmp/mazeGenerator.py  
  inflating: contest-tmp/VERSION     
  inflating: contest-tmp/myTeam.py   
  inflating: contest-tmp/keyboardAgents.py  
  inflating: contest-tmp/autograder.py  
  inflating: contest-tmp/generateTournamentLayouts.py  
  inflating: contest-tmp/baselineTeam.py  
  inflating: contest-tmp/graphicsDisplay.py  
  inflating: contest-tmp/graphicsUtils.py  
  inflating: contest-tmp/pacman.py   
  inflating: contest-tmp/capture_the_flag.png  
  inflating: contest-tmp/contestLayout.png  
  inflating: contest-tmp/unpack.py   
  inflating: contest-tmp/testParser.py  
  inflating: contest-tmp/capture.py  
  inflating: contest-tmp/testClasses.py  
  inflating: contest-tmp/projects.css  
  inflating: contest-tmp/captureAgents.py  
  inflating: contest-tmp/pacmanAgents.py  
  inflating: contest-tmp/distanceCalculator.py  
  inflating: contest-tmp/layout.py   
  inflating: contest-tmp/captureGraphicsDisplay.py  
  inflating: contest-tmp/bracket.png  
  inflating: contest-tmp/ghostAgents.py  
  inflating: contest-tmp/util.py     
  inflating: contest-tmp/capture_the_flag2.png  
   creating: contest-tmp/layouts/layouts/
  inflating: contest-tmp/layouts/contest17Capture.lay  
  inflating: contest-tmp/layouts/testCapture.lay  
  inflating: contest-tmp/layouts/contest03Capture.lay  
  inflating: contest-tmp/layouts/contest14Capture.lay  
  inflating: contest-tmp/layouts/contest20Capture.lay  
  inflating: contest-tmp/layouts/contest15cCapture.lay  
  inflating: contest-tmp/layouts/contest13Capture.lay  
  inflating: contest-tmp/layouts/contest04cCapture.lay  
  inflating: contest-tmp/layouts/contest17cCapture.lay  
  inflating: contest-tmp/layouts/contest18cCapture.lay  
  inflating: contest-tmp/layouts/contest03cCapture.lay  
  inflating: contest-tmp/layouts/contest11Capture.lay  
  inflating: contest-tmp/layouts/contest19cCapture.lay  
  inflating: contest-tmp/layouts/contest16Capture.lay  
  inflating: contest-tmp/layouts/crowdedCapture.lay  
  inflating: contest-tmp/layouts/alleyCapture.lay  
  inflating: contest-tmp/layouts/contest07Capture.lay  
  inflating: contest-tmp/layouts/contest15Capture.lay  
  inflating: contest-tmp/layouts/mediumCapture.lay  
  inflating: contest-tmp/layouts/contest16cCapture.lay  
  inflating: contest-tmp/layouts/contest04Capture.lay  
  inflating: contest-tmp/layouts/bloxCapture.lay  
  inflating: contest-tmp/layouts/contest01cCapture.lay  
  inflating: contest-tmp/layouts/contest06Capture.lay  
  inflating: contest-tmp/layouts/contest05Capture.lay  
  inflating: contest-tmp/layouts/defaultCapture.lay  
  inflating: contest-tmp/layouts/contest18Capture.lay  
  inflating: contest-tmp/layouts/contest02cCapture.lay  
  inflating: contest-tmp/layouts/strategicCapture.lay  
  inflating: contest-tmp/layouts/contest20cCapture.lay  
  inflating: contest-tmp/layouts/contest12Capture.lay  
  inflating: contest-tmp/layouts/jumboCapture.lay  
  inflating: contest-tmp/layouts/contest19Capture.lay  
  inflating: contest-tmp/layouts/fastCapture.lay  
  inflating: contest-tmp/layouts/contest07cCapture.lay  
  inflating: contest-tmp/layouts/tinyCapture.lay  
  inflating: contest-tmp/layouts/contest09Capture.lay  
  inflating: contest-tmp/layouts/contest08Capture.lay  
  inflating: contest-tmp/layouts/contest02Capture.lay  
  inflating: contest-tmp/layouts/contest06cCapture.lay  
  inflating: contest-tmp/layouts/contest10Capture.lay  
  inflating: contest-tmp/layouts/distantCapture.lay  
  inflating: contest-tmp/layouts/contest01Capture.lay  
  inflating: contest-tmp/layouts/officeCapture.lay  
  inflating: contest-tmp/layouts/contest05cCapture.lay  
   creating: contest-tmp/teams/123/
   creating: contest-tmp/teams/2Defence/
   creating: contest-tmp/teams/404/
   creating: contest-tmp/teams/404TeamNamenotfound/
   creating: contest-tmp/teams/AIFighter/
   creating: contest-tmp/teams/AI_Rookie/
   creating: contest-tmp/teams/ARP/
   creating: contest-tmp/teams/AliEn/
   creating: contest-tmp/teams/Alive/
   creating: contest-tmp/teams/Allogator/
   creating: contest-tmp/teams/Artificialidiot/
   creating: contest-tmp/teams/Avatar/
   creating: contest-tmp/teams/BetaPacMc3/
   creating: contest-tmp/teams/BetterThanBaselineTeam/
   creating: contest-tmp/teams/Chicken-Dinner/
   creating: contest-tmp/teams/Coder/
   creating: contest-tmp/teams/DEVGRU/
   creating: contest-tmp/teams/DSS/
   creating: contest-tmp/teams/Dark-Flame-Master/
   creating: contest-tmp/teams/Deox/
   creating: contest-tmp/teams/ERC/
   creating: contest-tmp/teams/ES/
   creating: contest-tmp/teams/EvilGeniuses/
   creating: contest-tmp/teams/EvilPacman/
   creating: contest-tmp/teams/FGO/
   creating: contest-tmp/teams/FatHeadFish/
   creating: contest-tmp/teams/FatMan/
   creating: contest-tmp/teams/GrantWard/
   creating: contest-tmp/teams/H2O2/
   creating: contest-tmp/teams/HelloKitty/
   creating: contest-tmp/teams/HelloPacman/
   creating: contest-tmp/teams/HelloTeam1213/
   creating: contest-tmp/teams/HelloWorld/
   creating: contest-tmp/teams/Higher_Brothers/
   creating: contest-tmp/teams/HouseofPac/
   creating: contest-tmp/teams/IHateCapsule/
   creating: contest-tmp/teams/IPhoneX/
   creating: contest-tmp/teams/ITCrowd/
   creating: contest-tmp/teams/InfiniteLoop/
   creating: contest-tmp/teams/Inky_Blinky_and_Clyde/
   creating: contest-tmp/teams/InvictusGaming/
   creating: contest-tmp/teams/InvincibleGhosts/
   creating: contest-tmp/teams/MMM/
   creating: contest-tmp/teams/MrTuring/
   creating: contest-tmp/teams/New_continue/
   creating: contest-tmp/teams/OffDef/
   creating: contest-tmp/teams/PACMAN/
   creating: contest-tmp/teams/PacKid/
   creating: contest-tmp/teams/PacMan/
   creating: contest-tmp/teams/PacMaster/
   creating: contest-tmp/teams/PacMax/
   creating: contest-tmp/teams/PaceMin/
   creating: contest-tmp/teams/PacmanNotNull/
   creating: contest-tmp/teams/Pacmon-Sun-and-Moon/
   creating: contest-tmp/teams/Pacsain_Bolt/
   creating: contest-tmp/teams/PandaTV/
   creating: contest-tmp/teams/Patman/
   creating: contest-tmp/teams/Pokeman/
   creating: contest-tmp/teams/QCR/
   creating: contest-tmp/teams/R2D2/
   creating: contest-tmp/teams/RMY/
   creating: contest-tmp/teams/RNG/
   creating: contest-tmp/teams/RandomTeamVI/
   creating: contest-tmp/teams/RealDaddy/
   creating: contest-tmp/teams/Reaper/
   creating: contest-tmp/teams/RoguePi/
   creating: contest-tmp/teams/SBAI_PURE/
   creating: contest-tmp/teams/ShallowMind/
   creating: contest-tmp/teams/SunMicrosystemsInc/
   creating: contest-tmp/teams/TLH/
   creating: contest-tmp/teams/TeamLads_Q_H/
   creating: contest-tmp/teams/WaterMelon/
   creating: contest-tmp/teams/Werewolf/
   creating: contest-tmp/teams/WindyDay/
   creating: contest-tmp/teams/Y.Z.S/
   creating: contest-tmp/teams/ZZZTeam/
   creating: contest-tmp/teams/ai-pddl/
   creating: contest-tmp/teams/betaGo/
   creating: contest-tmp/teams/bias/
   creating: contest-tmp/teams/chickendinner/
   creating: contest-tmp/teams/coffee/
   creating: contest-tmp/teams/contestrndmnm/
   creating: contest-tmp/teams/deltaforce/
   creating: contest-tmp/teams/disabledPacman4/
   creating: contest-tmp/teams/farseer/
   creating: contest-tmp/teams/friedOreo/
   creating: contest-tmp/teams/go_home_safe/
   creating: contest-tmp/teams/iceice/
   creating: contest-tmp/teams/lexus/
   creating: contest-tmp/teams/loserswishes/
   creating: contest-tmp/teams/marshmallow/
   creating: contest-tmp/teams/montecarlo2/
   creating: contest-tmp/teams/myADmilk/
   creating: contest-tmp/teams/oEtFKY/
   creating: contest-tmp/teams/omega-go/
   creating: contest-tmp/teams/pacsain_bolt/
   creating: contest-tmp/teams/pass/
   creating: contest-tmp/teams/press_any_key/
   creating: contest-tmp/teams/song2/
   creating: contest-tmp/teams/staff_team_basic/
   creating: contest-tmp/teams/staff_team_medium/
   creating: contest-tmp/teams/staff_team_top/
   creating: contest-tmp/teams/super_scaper/
   creating: contest-tmp/teams/superpacman/
   creating: contest-tmp/teams/testrunning/
   creating: contest-tmp/teams/tryingAIMen/
   creating: contest-tmp/teams/trytrytrytry/
   creating: contest-tmp/teams/umr1/
   creating: contest-tmp/teams/victoriasSecret/
   creating: contest-tmp/teams/wings/
   creating: contest-tmp/teams/worstPacman/
   creating: contest-tmp/teams/PacMan/__MACOSX/
  inflating: contest-tmp/teams/PacMan/myTeam.py  
  inflating: contest-tmp/teams/PacMan/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/HelloKitty/__MACOSX/
  inflating: contest-tmp/teams/HelloKitty/myTeam.py  
  inflating: contest-tmp/teams/HelloKitty/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/chickendinner/layouts/
  inflating: contest-tmp/teams/chickendinner/game.py  
  inflating: contest-tmp/teams/chickendinner/contest.html  
  inflating: contest-tmp/teams/chickendinner/textDisplay.py  
  inflating: contest-tmp/teams/chickendinner/score  
  inflating: contest-tmp/teams/chickendinner/mazeGenerator.py  
  inflating: contest-tmp/teams/chickendinner/group.txt  
  inflating: contest-tmp/teams/chickendinner/ffTeam.py  
  inflating: contest-tmp/teams/chickendinner/myTeam.py  
  inflating: contest-tmp/teams/chickendinner/mazeGenerator.pyc  
  inflating: contest-tmp/teams/chickendinner/keyboardAgents.py  
  inflating: contest-tmp/teams/chickendinner/autograder.py  
  inflating: contest-tmp/teams/chickendinner/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/chickendinner/dummyAgents.py  
  inflating: contest-tmp/teams/chickendinner/baselineTeam.py  
  inflating: contest-tmp/teams/chickendinner/pacman-domain.pddl~  
  inflating: contest-tmp/teams/chickendinner/graphicsDisplay.py  
  inflating: contest-tmp/teams/chickendinner/graphicsUtils.py  
  inflating: contest-tmp/teams/chickendinner/pacman.py  
  inflating: contest-tmp/teams/chickendinner/capture_the_flag.png  
  inflating: contest-tmp/teams/chickendinner/contestLayout.png  
  inflating: contest-tmp/teams/chickendinner/unpack.py  
  inflating: contest-tmp/teams/chickendinner/problem2.pddl  
  inflating: contest-tmp/teams/chickendinner/dummyTeam.py  
  inflating: contest-tmp/teams/chickendinner/testParser.py  
  inflating: contest-tmp/teams/chickendinner/problem3.pddl  
  inflating: contest-tmp/teams/chickendinner/capture.py  
  inflating: contest-tmp/teams/chickendinner/testClasses.py  
  inflating: contest-tmp/teams/chickendinner/projects.css  
  inflating: contest-tmp/teams/chickendinner/captureAgents.py  
  inflating: contest-tmp/teams/chickendinner/pacmanAgents.py  
  inflating: contest-tmp/teams/chickendinner/distanceCalculator.py  
  inflating: contest-tmp/teams/chickendinner/.gitignore  
  inflating: contest-tmp/teams/chickendinner/problem1.pddl  
  inflating: contest-tmp/teams/chickendinner/ghost-domain.pddl  
  inflating: contest-tmp/teams/chickendinner/layout.py  
  inflating: contest-tmp/teams/chickendinner/runFromPacmanProblem.pddl  
  inflating: contest-tmp/teams/chickendinner/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/chickendinner/bracket.png  
  inflating: contest-tmp/teams/chickendinner/pacman-domain.pddl  
  inflating: contest-tmp/teams/chickendinner/ghostAgents.py  
  inflating: contest-tmp/teams/chickendinner/util.py  
  inflating: contest-tmp/teams/chickendinner/results.txt  
  inflating: contest-tmp/teams/chickendinner/capture_the_flag2.png  
  inflating: contest-tmp/teams/chickendinner/README.txt  
  inflating: contest-tmp/teams/chickendinner/problem4.pddl  
  inflating: contest-tmp/teams/chickendinner/killGhostProblem.pddl  
  inflating: contest-tmp/teams/chickendinner/layouts/testCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/simpleCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/simpleCapture.lay~  
  inflating: contest-tmp/teams/chickendinner/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/chickendinner/layouts/officeCapture.lay  
   creating: contest-tmp/teams/404TeamNamenotfound/404TeamNamenotfound/
   creating: contest-tmp/teams/404TeamNamenotfound/__MACOSX/
  inflating: contest-tmp/teams/404TeamNamenotfound/404TeamNamenotfound/myTeam.py  
   creating: contest-tmp/teams/404TeamNamenotfound/__MACOSX/404TeamNamenotfound/
  inflating: contest-tmp/teams/404TeamNamenotfound/__MACOSX/404TeamNamenotfound/._myTeam.py  
  inflating: contest-tmp/teams/pacsain_bolt/myTeam.py  
  inflating: contest-tmp/teams/2Defence/myTeam.py  
   creating: contest-tmp/teams/123/__MACOSX/
  inflating: contest-tmp/teams/123/myTeam.py  
  inflating: contest-tmp/teams/123/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/superpacman/myTeam.py  
  inflating: contest-tmp/teams/TeamLads_Q_H/myTeam.py  
  inflating: contest-tmp/teams/TeamLads_Q_H/weights.p  
   creating: contest-tmp/teams/PACMAN/PDDL/
  inflating: contest-tmp/teams/PACMAN/qLearning.py  
  inflating: contest-tmp/teams/PACMAN/group.txt  
  inflating: contest-tmp/teams/PACMAN/myTeam.py  
  inflating: contest-tmp/teams/PACMAN/README.txt  
  inflating: contest-tmp/teams/MrTuring/myTeam.py  
  inflating: contest-tmp/teams/MrTuring/README.txt  
   creating: contest-tmp/teams/coffee/Project1/
   creating: contest-tmp/teams/coffee/__MACOSX/
   creating: contest-tmp/teams/coffee/contest/
   creating: contest-tmp/teams/coffee/search/
   creating: contest-tmp/teams/coffee/__MACOSX/contest/
  inflating: contest-tmp/teams/coffee/__MACOSX/._contest  
   creating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._capture_the_flag2.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._contestLayout.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._game.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._capture_the_flag.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._textDisplay.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._contest.html  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._projects.css  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._pacmanAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._keyboardAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._VERSION  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._mazeGenerator.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._unpack.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._capture.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._autograder.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._captureAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._graphicsUtils.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._testClasses.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._pacman.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._graphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._util.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._layout.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._.DS_Store  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._baselineTeam.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._bracket.png  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._testParser.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._layouts  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._ghostAgents.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/._distanceCalculator.py  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/coffee/__MACOSX/contest/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/coffee/Project1/project1.zip  
   creating: contest-tmp/teams/coffee/contest/.idea/
   creating: contest-tmp/teams/coffee/contest/layouts/
  inflating: contest-tmp/teams/coffee/contest/game.py  
  inflating: contest-tmp/teams/coffee/contest/contest.html  
  inflating: contest-tmp/teams/coffee/contest/textDisplay.py  
  inflating: contest-tmp/teams/coffee/contest/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/coffee/contest/score  
  inflating: contest-tmp/teams/coffee/contest/mazeGenerator.py  
  inflating: contest-tmp/teams/coffee/contest/VERSION  
  inflating: contest-tmp/teams/coffee/contest/myTeam.py  
  inflating: contest-tmp/teams/coffee/contest/anotherTeam.pyc  
  inflating: contest-tmp/teams/coffee/contest/keyboardAgents.py  
  inflating: contest-tmp/teams/coffee/contest/autograder.py  
  inflating: contest-tmp/teams/coffee/contest/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/coffee/contest/baselineTeam.py  
  inflating: contest-tmp/teams/coffee/contest/myTeam.pyc  
  inflating: contest-tmp/teams/coffee/contest/keyboardAgents.pyc  
  inflating: contest-tmp/teams/coffee/contest/graphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/contest/graphicsUtils.py  
  inflating: contest-tmp/teams/coffee/contest/layout.pyc  
  inflating: contest-tmp/teams/coffee/contest/pacman.py  
  inflating: contest-tmp/teams/coffee/contest/capture_the_flag.png  
  inflating: contest-tmp/teams/coffee/contest/contestLayout.png  
  inflating: contest-tmp/teams/coffee/contest/unpack.py  
  inflating: contest-tmp/teams/coffee/contest/testParser.py  
  inflating: contest-tmp/teams/coffee/contest/anotherTeam.py  
  inflating: contest-tmp/teams/coffee/contest/capture.py  
  inflating: contest-tmp/teams/coffee/contest/.DS_Store  
  inflating: contest-tmp/teams/coffee/contest/baselineTeam.pyc  
  inflating: contest-tmp/teams/coffee/contest/captureAgents.pyc  
  inflating: contest-tmp/teams/coffee/contest/testClasses.py  
  inflating: contest-tmp/teams/coffee/contest/projects.css  
  inflating: contest-tmp/teams/coffee/contest/captureAgents.py  
  inflating: contest-tmp/teams/coffee/contest/pacmanAgents.py  
  inflating: contest-tmp/teams/coffee/contest/distanceCalculator.py  
  inflating: contest-tmp/teams/coffee/contest/graphicsUtils.pyc  
  inflating: contest-tmp/teams/coffee/contest/util.pyc  
  inflating: contest-tmp/teams/coffee/contest/layout.py  
  inflating: contest-tmp/teams/coffee/contest/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/contest/bracket.png  
  inflating: contest-tmp/teams/coffee/contest/ghostAgents.py  
  inflating: contest-tmp/teams/coffee/contest/distanceCalculator.pyc  
  inflating: contest-tmp/teams/coffee/contest/util.py  
  inflating: contest-tmp/teams/coffee/contest/capture_the_flag2.png  
  inflating: contest-tmp/teams/coffee/contest/game.pyc  
  inflating: contest-tmp/teams/coffee/contest/layouts/testCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/coffee/contest/layouts/officeCapture.lay  
   creating: contest-tmp/teams/coffee/contest/.idea/inspectionProfiles/
  inflating: contest-tmp/teams/coffee/contest/.idea/workspace.xml  
  inflating: contest-tmp/teams/coffee/contest/.idea/misc.xml  
  inflating: contest-tmp/teams/coffee/contest/.idea/modules.xml  
  inflating: contest-tmp/teams/coffee/contest/.idea/contest.iml  
  inflating: contest-tmp/teams/coffee/contest/.idea/inspectionProfiles/Project_Default.xml  
   creating: contest-tmp/teams/coffee/search/layouts/
   creating: contest-tmp/teams/coffee/search/test_cases/
  inflating: contest-tmp/teams/coffee/search/game.py  
  inflating: contest-tmp/teams/coffee/search/textDisplay.py  
  inflating: contest-tmp/teams/coffee/search/textDisplay.pyc  
  inflating: contest-tmp/teams/coffee/search/grading.py  
  inflating: contest-tmp/teams/coffee/search/VERSION  
  inflating: contest-tmp/teams/coffee/search/keyboardAgents.py  
  inflating: contest-tmp/teams/coffee/search/autograder.py  
  inflating: contest-tmp/teams/coffee/search/searchTestClasses.py  
  inflating: contest-tmp/teams/coffee/search/ghostAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/searchAgents.py  
  inflating: contest-tmp/teams/coffee/search/testParser.pyc  
  inflating: contest-tmp/teams/coffee/search/keyboardAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/pacmanAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/graphicsDisplay.py  
  inflating: contest-tmp/teams/coffee/search/searchAgents.pyc  
  inflating: contest-tmp/teams/coffee/search/graphicsUtils.py  
  inflating: contest-tmp/teams/coffee/search/layout.pyc  
  inflating: contest-tmp/teams/coffee/search/pacman.py  
  inflating: contest-tmp/teams/coffee/search/commands.txt  
  inflating: contest-tmp/teams/coffee/search/pacman.pyc  
  inflating: contest-tmp/teams/coffee/search/testParser.py  
  inflating: contest-tmp/teams/coffee/search/submission_autograder.py  
  inflating: contest-tmp/teams/coffee/search/grading.pyc  
  inflating: contest-tmp/teams/coffee/search/testClasses.py  
  inflating: contest-tmp/teams/coffee/search/pacmanAgents.py  
  inflating: contest-tmp/teams/coffee/search/graphicsDisplay.pyc  
  inflating: contest-tmp/teams/coffee/search/graphicsUtils.pyc  
  inflating: contest-tmp/teams/coffee/search/util.pyc  
  inflating: contest-tmp/teams/coffee/search/search.py  
  inflating: contest-tmp/teams/coffee/search/projectParams.pyc  
  inflating: contest-tmp/teams/coffee/search/searchTestClasses.pyc  
  inflating: contest-tmp/teams/coffee/search/layout.py  
  inflating: contest-tmp/teams/coffee/search/eightpuzzle.py  
  inflating: contest-tmp/teams/coffee/search/ghostAgents.py  
  inflating: contest-tmp/teams/coffee/search/util.py  
  inflating: contest-tmp/teams/coffee/search/testClasses.pyc  
  inflating: contest-tmp/teams/coffee/search/search.pyc  
  inflating: contest-tmp/teams/coffee/search/game.pyc  
  inflating: contest-tmp/teams/coffee/search/projectParams.py  
  inflating: contest-tmp/teams/coffee/search/layouts/testMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/openClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinySafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumScaryMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallSafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinyMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinyCorners.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/openMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumCorners.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/contoursMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/originalClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/openSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/minimaxClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumDottedMaze.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/trappedClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/oddSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/testSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/trickySearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/smallSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/testClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/mediumSafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/greedySearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/powerClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/contestClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/tinySearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/trickyClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigSafeSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/capsuleClassic.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/boxSearch.lay  
  inflating: contest-tmp/teams/coffee/search/layouts/bigCorners.lay  
   creating: contest-tmp/teams/coffee/search/test_cases/q1/
   creating: contest-tmp/teams/coffee/search/test_cases/q2/
   creating: contest-tmp/teams/coffee/search/test_cases/q3/
   creating: contest-tmp/teams/coffee/search/test_cases/q4/
   creating: contest-tmp/teams/coffee/search/test_cases/q5/
   creating: contest-tmp/teams/coffee/search/test_cases/q6/
   creating: contest-tmp/teams/coffee/search/test_cases/q7/
   creating: contest-tmp/teams/coffee/search/test_cases/q8/
  inflating: contest-tmp/teams/coffee/search/test_cases/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q5/corner_tiny_corner.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q5/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q5/corner_tiny_corner.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_infinite.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/pacman_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_bfs_vs_dfs.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_infinite.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/graph_bfs_vs_dfs.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q1/pacman_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_1_graph_heuristic.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_0.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_1_graph_heuristic.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_2_manhattan.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_3_goalAtDequeue.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_0.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_2_manhattan.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q4/astar_3_goalAtDequeue.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_1_problemC.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_infinite.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_3_problemW.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_bfs_vs_dfs.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_2_problemE.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_2_problemE.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_4_testSearch.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_infinite.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_4_testSearch.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_0_graph.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_5_goalAtDequeue.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_5_goalAtDequeue.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_3_problemW.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_0_graph.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/ucs_1_problemC.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q3/graph_bfs_vs_dfs.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_5.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_4.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_grade_tricky.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_5.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_grade_tricky.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_13.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_2.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_11.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_12.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_8.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_14.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_12.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_10.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_11.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_17.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_14.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_15.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_7.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_16.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_3.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_9.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_16.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_2.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_6.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_9.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_13.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_6.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_15.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_3.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_17.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_4.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_10.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_8.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q7/food_heuristic_7.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_8.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_7.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_10.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_13.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_4.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_5.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_3.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_11.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_5.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_9.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_10.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_3.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_12.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_2.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_12.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_2.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_4.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_7.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_13.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_9.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_6.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_11.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_8.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q8/closest_dot_6.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_infinite.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/pacman_1.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_bfs_vs_dfs.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_infinite.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_backtrack.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_backtrack.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_manypaths.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_manypaths.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/graph_bfs_vs_dfs.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q2/pacman_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_2.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/medium_corners.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_2.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_3.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/CONFIG  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/medium_corners.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_3.solution  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_1.test  
  inflating: contest-tmp/teams/coffee/search/test_cases/q6/corner_sanity_1.solution  
   creating: contest-tmp/teams/FGO/__MACOSX/
   creating: contest-tmp/teams/FGO/bin/
   creating: contest-tmp/teams/FGO/layouts/
  inflating: contest-tmp/teams/FGO/game.py  
  inflating: contest-tmp/teams/FGO/contest.html  
  inflating: contest-tmp/teams/FGO/textDisplay.py  
  inflating: contest-tmp/teams/FGO/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/FGO/score  
  inflating: contest-tmp/teams/FGO/mazeGenerator.py  
  inflating: contest-tmp/teams/FGO/VERSION  
  inflating: contest-tmp/teams/FGO/myTeam.py  
  inflating: contest-tmp/teams/FGO/keyboardAgents.py  
  inflating: contest-tmp/teams/FGO/autograder.py  
  inflating: contest-tmp/teams/FGO/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/FGO/qlearning.py  
  inflating: contest-tmp/teams/FGO/myTeamtest.pyc  
  inflating: contest-tmp/teams/FGO/baselineTeam.py  
  inflating: contest-tmp/teams/FGO/keyboardAgents.pyc  
  inflating: contest-tmp/teams/FGO/graphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/graphicsUtils.py  
  inflating: contest-tmp/teams/FGO/layout.pyc  
  inflating: contest-tmp/teams/FGO/pacman.py  
  inflating: contest-tmp/teams/FGO/capture.pyc  
  inflating: contest-tmp/teams/FGO/capture_the_flag.png  
  inflating: contest-tmp/teams/FGO/contestLayout.png  
  inflating: contest-tmp/teams/FGO/unpack.py  
  inflating: contest-tmp/teams/FGO/testParser.py  
  inflating: contest-tmp/teams/FGO/capture.py  
  inflating: contest-tmp/teams/FGO/captureAgents.pyc  
  inflating: contest-tmp/teams/FGO/testClasses.py  
  inflating: contest-tmp/teams/FGO/projects.css  
  inflating: contest-tmp/teams/FGO/captureAgents.py  
  inflating: contest-tmp/teams/FGO/pacmanAgents.py  
  inflating: contest-tmp/teams/FGO/distanceCalculator.py  
  inflating: contest-tmp/teams/FGO/graphicsUtils.pyc  
  inflating: contest-tmp/teams/FGO/qlearning.pyc  
  inflating: contest-tmp/teams/FGO/util.pyc  
  inflating: contest-tmp/teams/FGO/layout.py  
  inflating: contest-tmp/teams/FGO/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/bracket.png  
  inflating: contest-tmp/teams/FGO/ghostAgents.py  
  inflating: contest-tmp/teams/FGO/distanceCalculator.pyc  
  inflating: contest-tmp/teams/FGO/util.py  
  inflating: contest-tmp/teams/FGO/capture_the_flag2.png  
  inflating: contest-tmp/teams/FGO/game.pyc  
   creating: contest-tmp/teams/FGO/layouts/layouts/
  inflating: contest-tmp/teams/FGO/layouts/testCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/FGO/layouts/officeCapture.lay  
   creating: contest-tmp/teams/FGO/bin/bin/
  inflating: contest-tmp/teams/FGO/bin/ff  
   creating: contest-tmp/teams/FGO/__MACOSX/bin/
   creating: contest-tmp/teams/FGO/__MACOSX/layouts/
  inflating: contest-tmp/teams/FGO/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._game.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/FGO/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/FGO/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/FGO/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._bin  
  inflating: contest-tmp/teams/FGO/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._util.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._qlearning.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/FGO/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._layouts  
  inflating: contest-tmp/teams/FGO/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._layouts  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/FGO/__MACOSX/bin/._bin  
  inflating: contest-tmp/teams/FGO/__MACOSX/bin/._ff  
  inflating: contest-tmp/teams/Coder/group.txt  
  inflating: contest-tmp/teams/Coder/myTeam.py  
  inflating: contest-tmp/teams/Coder/ghost_problem.pddl  
  inflating: contest-tmp/teams/Coder/ghost v2.pddl  
  inflating: contest-tmp/teams/Coder/pacman_problem.pddl  
  inflating: contest-tmp/teams/Coder/readme.txt  
  inflating: contest-tmp/teams/Coder/pacman v2.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/group.txt  
  inflating: contest-tmp/teams/PacmanNotNull/myTeam.py  
  inflating: contest-tmp/teams/PacmanNotNull/ghost_problem.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/ghost_domain.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/pacman_problem.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/pacman_domain.pddl  
  inflating: contest-tmp/teams/PacmanNotNull/README.txt  
   creating: contest-tmp/teams/Dark-Flame-Master/layouts/
  inflating: contest-tmp/teams/Dark-Flame-Master/game.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/contest.html  
  inflating: contest-tmp/teams/Dark-Flame-Master/textDisplay.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/mazeGenerator.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/VERSION  
  inflating: contest-tmp/teams/Dark-Flame-Master/myTeam.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/keyboardAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/autograder.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/baselineTeam.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/graphicsDisplay.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/graphicsUtils.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/pacman.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/capture_the_flag.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/contestLayout.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/unpack.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/testParser.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/capture.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/testClasses.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/projects.css  
  inflating: contest-tmp/teams/Dark-Flame-Master/captureAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/pacmanAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/distanceCalculator.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/layout.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/bracket.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/ghostAgents.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/util.py  
  inflating: contest-tmp/teams/Dark-Flame-Master/capture_the_flag2.png  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/testCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/Dark-Flame-Master/layouts/officeCapture.lay  
  inflating: contest-tmp/teams/H2O2/myTeam.py  
  inflating: contest-tmp/teams/H2O2/README.txt  
  inflating: contest-tmp/teams/HelloTeam1213/myTeam.py  
  inflating: contest-tmp/teams/testrunning/myTeam.py  
  inflating: contest-tmp/teams/GrantWard/myTeam.py  
  inflating: contest-tmp/teams/Deox/myTeam.py  
  inflating: contest-tmp/teams/pass/myTeam.py  
   creating: contest-tmp/teams/deltaforce/layouts/
  inflating: contest-tmp/teams/deltaforce/game.py  
  inflating: contest-tmp/teams/deltaforce/contest.html  
  inflating: contest-tmp/teams/deltaforce/textDisplay.py  
  inflating: contest-tmp/teams/deltaforce/mazeGenerator.py  
  inflating: contest-tmp/teams/deltaforce/VERSION  
  inflating: contest-tmp/teams/deltaforce/myTeam.py  
  inflating: contest-tmp/teams/deltaforce/keyboardAgents.py  
  inflating: contest-tmp/teams/deltaforce/autograder.py  
  inflating: contest-tmp/teams/deltaforce/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/deltaforce/baselineTeam.py  
  inflating: contest-tmp/teams/deltaforce/graphicsDisplay.py  
  inflating: contest-tmp/teams/deltaforce/graphicsUtils.py  
  inflating: contest-tmp/teams/deltaforce/pacman.py  
  inflating: contest-tmp/teams/deltaforce/capture_the_flag.png  
  inflating: contest-tmp/teams/deltaforce/contestLayout.png  
  inflating: contest-tmp/teams/deltaforce/unpack.py  
  inflating: contest-tmp/teams/deltaforce/testParser.py  
  inflating: contest-tmp/teams/deltaforce/capture.py  
  inflating: contest-tmp/teams/deltaforce/testClasses.py  
  inflating: contest-tmp/teams/deltaforce/projects.css  
  inflating: contest-tmp/teams/deltaforce/captureAgents.py  
  inflating: contest-tmp/teams/deltaforce/pacmanAgents.py  
  inflating: contest-tmp/teams/deltaforce/distanceCalculator.py  
  inflating: contest-tmp/teams/deltaforce/layout.py  
  inflating: contest-tmp/teams/deltaforce/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/deltaforce/bracket.png  
  inflating: contest-tmp/teams/deltaforce/ghostAgents.py  
  inflating: contest-tmp/teams/deltaforce/util.py  
  inflating: contest-tmp/teams/deltaforce/capture_the_flag2.png  
  inflating: contest-tmp/teams/deltaforce/layouts/testCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/deltaforce/layouts/officeCapture.lay  
   creating: contest-tmp/teams/marshmallow/__MACOSX/
  inflating: contest-tmp/teams/marshmallow/myTeam.py  
  inflating: contest-tmp/teams/marshmallow/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/
   creating: contest-tmp/teams/SunMicrosystemsInc/pddl/
  inflating: contest-tmp/teams/SunMicrosystemsInc/myTeam.py  
  inflating: contest-tmp/teams/SunMicrosystemsInc/README.txt  
   creating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/pddl/
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/._README.txt  
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/pddl/._README.txt  
  inflating: contest-tmp/teams/SunMicrosystemsInc/__MACOSX/pddl/._.DS_Store  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/pacman-problem.pddl  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/pacman-layout.txt  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/.DS_Store  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/pacman-domain.pddl  
  inflating: contest-tmp/teams/SunMicrosystemsInc/pddl/README.txt  
   creating: contest-tmp/teams/DSS/__MACOSX/
  inflating: contest-tmp/teams/DSS/myTeam.py  
  inflating: contest-tmp/teams/DSS/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/New_continue/myteam.py  
   creating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/
   creating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/group.txt  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/myTeam.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/readme.txt  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/q_learning.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/state_repackage.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/__init__.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/classical_search.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/value_iteration.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/generic_implementation.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/approximate_q_learning.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/deep_q_learning.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/monte_carlo_tree_search.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/implementation/recognition.py  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-problem2.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/ghost-domain-decomposed.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/ghost-problem1.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-domain-decomposed.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-problem3.pddl  
  inflating: contest-tmp/teams/Inky_Blinky_and_Clyde/pddl/pacman-problem1.pddl  
   creating: contest-tmp/teams/farseer/__MACOSX/
   creating: contest-tmp/teams/farseer/farseer/
   creating: contest-tmp/teams/farseer/__MACOSX/farseer/
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_0  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_red  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_3  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_1  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._myTeam.py  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_blue  
  inflating: contest-tmp/teams/farseer/__MACOSX/farseer/._qfile_2  
  inflating: contest-tmp/teams/farseer/farseer/qfile_0  
  inflating: contest-tmp/teams/farseer/farseer/myTeam.py  
  inflating: contest-tmp/teams/farseer/farseer/qfile_blue  
  inflating: contest-tmp/teams/farseer/farseer/qfile_3  
  inflating: contest-tmp/teams/farseer/farseer/qfile_1  
  inflating: contest-tmp/teams/farseer/farseer/qfile_2  
  inflating: contest-tmp/teams/farseer/farseer/qfile_red  
   creating: contest-tmp/teams/montecarlo2/.idea/
   creating: contest-tmp/teams/montecarlo2/bin/
   creating: contest-tmp/teams/montecarlo2/layouts/
  inflating: contest-tmp/teams/montecarlo2/game.py  
  inflating: contest-tmp/teams/montecarlo2/contest.html  
  inflating: contest-tmp/teams/montecarlo2/textDisplay.py  
  inflating: contest-tmp/teams/montecarlo2/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/montecarlo2/score  
  inflating: contest-tmp/teams/montecarlo2/mazeGenerator.py  
  inflating: contest-tmp/teams/montecarlo2/VERSION  
  inflating: contest-tmp/teams/montecarlo2/myTeam.py  
  inflating: contest-tmp/teams/montecarlo2/BetaPac_ModeSelHard_vs_montecarlo_contest18Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/mazeGenerator.pyc  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/keyboardAgents.py  
  inflating: contest-tmp/teams/montecarlo2/autograder.py  
  inflating: contest-tmp/teams/montecarlo2/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/montecarlo2/baselineTeam.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_basic_contest17Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/keyboardAgents.pyc  
  inflating: contest-tmp/teams/montecarlo2/myteam.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarloTeam.py  
  inflating: contest-tmp/teams/montecarlo2/graphicsDisplay.py  
  inflating: contest-tmp/teams/montecarlo2/ERC_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/betaGo.py  
  inflating: contest-tmp/teams/montecarlo2/graphicsUtils.py  
  inflating: contest-tmp/teams/montecarlo2/layout.pyc  
  inflating: contest-tmp/teams/montecarlo2/ERC_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/pacman.py  
  inflating: contest-tmp/teams/montecarlo2/capture.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarlo3.py  
  inflating: contest-tmp/teams/montecarlo2/betaGo_vs_RoguePi_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/COMPAI.pyc  
  inflating: contest-tmp/teams/montecarlo2/capture_the_flag.png  
  inflating: contest-tmp/teams/montecarlo2/contestLayout.png  
  inflating: contest-tmp/teams/montecarlo2/betaGo_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/unpack.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo.py  
  inflating: contest-tmp/teams/montecarlo2/hahaTeam.py  
  inflating: contest-tmp/teams/montecarlo2/testParser.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_betaGo_contest17Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/RoguePi_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/capture.py  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_top_contest03cCapture.replay  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_basic_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/baselineTeam.pyc  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_basic_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/captureAgents.pyc  
  inflating: contest-tmp/teams/montecarlo2/testClasses.py  
  inflating: contest-tmp/teams/montecarlo2/randteamname_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/betago.pyc  
  inflating: contest-tmp/teams/montecarlo2/projects.css  
  inflating: contest-tmp/teams/montecarlo2/captureAgents.py  
  inflating: contest-tmp/teams/montecarlo2/pacmanAgents.py  
  inflating: contest-tmp/teams/montecarlo2/distanceCalculator.py  
  inflating: contest-tmp/teams/montecarlo2/RoguePi_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/graphicsUtils.pyc  
  inflating: contest-tmp/teams/montecarlo2/util.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarloTeam.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_top_RANDOM921.replay  
  inflating: contest-tmp/teams/montecarlo2/montecarlo.pyc  
  inflating: contest-tmp/teams/montecarlo2/layout.py  
  inflating: contest-tmp/teams/montecarlo2/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/montecarlo2/bracket.png  
  inflating: contest-tmp/teams/montecarlo2/montecarlo3.pyc  
  inflating: contest-tmp/teams/montecarlo2/montecarlo2.py  
  inflating: contest-tmp/teams/montecarlo2/COMPAI.py  
  inflating: contest-tmp/teams/montecarlo2/ghostAgents.py  
  inflating: contest-tmp/teams/montecarlo2/distanceCalculator.pyc  
  inflating: contest-tmp/teams/montecarlo2/util.py  
  inflating: contest-tmp/teams/montecarlo2/WaterMelon_vs_staff_team_top_RANDOM577.replay  
  inflating: contest-tmp/teams/montecarlo2/montecarlo_vs_staff_team_top_contest17Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/python  
  inflating: contest-tmp/teams/montecarlo2/capture_the_flag2.png  
  inflating: contest-tmp/teams/montecarlo2/montecarlo2.pyc  
  inflating: contest-tmp/teams/montecarlo2/game.pyc  
  inflating: contest-tmp/teams/montecarlo2/beTaGo_vs_staff_team_top_contest20Capture.replay  
  inflating: contest-tmp/teams/montecarlo2/montercarlo4.py  
   creating: contest-tmp/teams/montecarlo2/layouts/layouts/
  inflating: contest-tmp/teams/montecarlo2/layouts/testCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/montecarlo2/layouts/officeCapture.lay  
   creating: contest-tmp/teams/montecarlo2/bin/bin/
  inflating: contest-tmp/teams/montecarlo2/bin/ff  
  inflating: contest-tmp/teams/montecarlo2/.idea/workspace.xml  
  inflating: contest-tmp/teams/montecarlo2/.idea/misc.xml  
  inflating: contest-tmp/teams/montecarlo2/.idea/modules.xml  
  inflating: contest-tmp/teams/montecarlo2/.idea/contest.iml  
  inflating: contest-tmp/teams/ES/myTeam.py  
  inflating: contest-tmp/teams/super_scaper/myTeam.py  
   creating: contest-tmp/teams/R2D2/R2D2/
   creating: contest-tmp/teams/R2D2/__MACOSX/
   creating: contest-tmp/teams/R2D2/__MACOSX/R2D2/
  inflating: contest-tmp/teams/R2D2/__MACOSX/R2D2/._myTeam.py  
  inflating: contest-tmp/teams/R2D2/R2D2/myTeam.py  
  inflating: contest-tmp/teams/RoguePi/myTeam.py  
  inflating: contest-tmp/teams/OffDef/myTeam.py  
  inflating: contest-tmp/teams/wings/myTeam.py  
  inflating: contest-tmp/teams/HouseofPac/myTeam.py  
  inflating: contest-tmp/teams/myADmilk/myADmilk.py  
   creating: contest-tmp/teams/PaceMin/PaceMin/
  inflating: contest-tmp/teams/PaceMin/PaceMin/myTeam.py  
  inflating: contest-tmp/teams/PacMaster/myTeam.py  
   creating: contest-tmp/teams/betaGo/__MACOSX/
  inflating: contest-tmp/teams/betaGo/myTeam.py  
  inflating: contest-tmp/teams/betaGo/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/song2/myTeam.py  
  inflating: contest-tmp/teams/omega-go/myTeam.py  
  inflating: contest-tmp/teams/omega-go/name.txt  
  inflating: contest-tmp/teams/omega-go/omega.py  
  inflating: contest-tmp/teams/omega-go/omegaDefensive.py  
  inflating: contest-tmp/teams/omega-go/omegaOffensive.py  
  inflating: contest-tmp/teams/HelloPacman/myTeam.py  
  inflating: contest-tmp/teams/RealDaddy/myTeam.py  
  inflating: contest-tmp/teams/Y.Z.S/myTeam.py  
   creating: contest-tmp/teams/oEtFKY/__MACOSX/
  inflating: contest-tmp/teams/oEtFKY/myTeam.py  
  inflating: contest-tmp/teams/oEtFKY/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Pokeman/__MACOSX/
  inflating: contest-tmp/teams/Pokeman/myTeam.py  
  inflating: contest-tmp/teams/Pokeman/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/lexus/myTeam.py  
   creating: contest-tmp/teams/ai-pddl/__MACOSX/
   creating: contest-tmp/teams/ai-pddl/ai-pddl/
   creating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._ai-README.txt  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._ghost_problem.pddl  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._test.txt  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._problem_pacman_01.pddl  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._.DS_Store  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._pacman.pddl  
  inflating: contest-tmp/teams/ai-pddl/__MACOSX/ai-pddl/._ghost.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/test.txt  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/ghost_problem.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/ghost.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/pacman.pddl  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/ai-README.txt  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/.DS_Store  
  inflating: contest-tmp/teams/ai-pddl/ai-pddl/problem_pacman_01.pddl  
  inflating: contest-tmp/teams/WaterMelon/myTeam.py  
  inflating: contest-tmp/teams/PacMax/myTeam.py  
  inflating: contest-tmp/teams/PacMax/offensiveWeightsDefault.json  
  inflating: contest-tmp/teams/PacMax/defensiveWeightsDefault.json  
  inflating: contest-tmp/teams/go_home_safe/myTeam.py  
   creating: contest-tmp/teams/404/__MACOSX/
  inflating: contest-tmp/teams/404/myTeam.py  
  inflating: contest-tmp/teams/404/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/FatHeadFish/__MACOSX/
  inflating: contest-tmp/teams/FatHeadFish/myTeam.py  
  inflating: contest-tmp/teams/FatHeadFish/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/DEVGRU/__MACOSX/
   creating: contest-tmp/teams/DEVGRU/layouts/
  inflating: contest-tmp/teams/DEVGRU/game.py  
  inflating: contest-tmp/teams/DEVGRU/DQN.pyc  
  inflating: contest-tmp/teams/DEVGRU/contest.html  
  inflating: contest-tmp/teams/DEVGRU/textDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/DEVGRU/score  
  inflating: contest-tmp/teams/DEVGRU/mazeGenerator.py  
  inflating: contest-tmp/teams/DEVGRU/VERSION  
  inflating: contest-tmp/teams/DEVGRU/myTeam.py  
  inflating: contest-tmp/teams/DEVGRU/keyboardAgents.py  
  inflating: contest-tmp/teams/DEVGRU/autograder.py  
  inflating: contest-tmp/teams/DEVGRU/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/DEVGRU/baselineTeam.py  
  inflating: contest-tmp/teams/DEVGRU/myTeam.pyc  
  inflating: contest-tmp/teams/DEVGRU/keyboardAgents.pyc  
  inflating: contest-tmp/teams/DEVGRU/graphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/graphicsUtils.py  
  inflating: contest-tmp/teams/DEVGRU/layout.pyc  
  inflating: contest-tmp/teams/DEVGRU/pacman.py  
  inflating: contest-tmp/teams/DEVGRU/capture.pyc  
  inflating: contest-tmp/teams/DEVGRU/capture_the_flag.png  
  inflating: contest-tmp/teams/DEVGRU/contestLayout.png  
  inflating: contest-tmp/teams/DEVGRU/unpack.py  
  inflating: contest-tmp/teams/DEVGRU/pacman.pyc  
  inflating: contest-tmp/teams/DEVGRU/testParser.py  
  inflating: contest-tmp/teams/DEVGRU/capture.py  
  inflating: contest-tmp/teams/DEVGRU/baselineTeam.pyc  
  inflating: contest-tmp/teams/DEVGRU/captureAgents.pyc  
  inflating: contest-tmp/teams/DEVGRU/testClasses.py  
  inflating: contest-tmp/teams/DEVGRU/projects.css  
  inflating: contest-tmp/teams/DEVGRU/captureAgents.py  
  inflating: contest-tmp/teams/DEVGRU/pacmanAgents.py  
  inflating: contest-tmp/teams/DEVGRU/distanceCalculator.py  
  inflating: contest-tmp/teams/DEVGRU/graphicsUtils.pyc  
  inflating: contest-tmp/teams/DEVGRU/util.pyc  
  inflating: contest-tmp/teams/DEVGRU/layout.py  
  inflating: contest-tmp/teams/DEVGRU/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/bracket.png  
  inflating: contest-tmp/teams/DEVGRU/ghostAgents.py  
  inflating: contest-tmp/teams/DEVGRU/distanceCalculator.pyc  
  inflating: contest-tmp/teams/DEVGRU/util.py  
  inflating: contest-tmp/teams/DEVGRU/capture_the_flag2.png  
  inflating: contest-tmp/teams/DEVGRU/game.pyc  
  inflating: contest-tmp/teams/DEVGRU/PacmanDQNTeam.pyc  
  inflating: contest-tmp/teams/DEVGRU/layouts/testCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/layouts/officeCapture.lay  
   creating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._game.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._util.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._layouts  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/DEVGRU/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/worstPacman/tournament.py  
  inflating: contest-tmp/teams/InvincibleGhosts/group.txt  
  inflating: contest-tmp/teams/InvincibleGhosts/myTeam.py  
  inflating: contest-tmp/teams/InvincibleGhosts/ghost-domain.pddl  
  inflating: contest-tmp/teams/InvincibleGhosts/pacman-domain.pddl  
  inflating: contest-tmp/teams/InvincibleGhosts/readme.txt  
  inflating: contest-tmp/teams/SBAI_PURE/myTeam.py  
  inflating: contest-tmp/teams/SBAI_PURE/ghost-domain.pddl  
  inflating: contest-tmp/teams/SBAI_PURE/pacman-domain.pddl  
  inflating: contest-tmp/teams/tryingAIMen/myTeam.py  
  inflating: contest-tmp/teams/Pacsain_Bolt/myTeam.py  
  inflating: contest-tmp/teams/umr1/myTeam.py  
  inflating: contest-tmp/teams/WindyDay/myTeam.py  
  inflating: contest-tmp/teams/BetaPacMc3/myTeam.py  
  inflating: contest-tmp/teams/BetaPacMc3/MCT.py  
  inflating: contest-tmp/teams/BetaPacMc3/featuresTool.py  
  inflating: contest-tmp/teams/FatMan/myTeam.py  
  inflating: contest-tmp/teams/press_any_key/myTeam.py  
  inflating: contest-tmp/teams/press_any_key/offensive.train  
  inflating: contest-tmp/teams/press_any_key/deffensive.train  
   creating: contest-tmp/teams/Avatar/__MACOSX/
   creating: contest-tmp/teams/Avatar/layouts/
  inflating: contest-tmp/teams/Avatar/game.py  
  inflating: contest-tmp/teams/Avatar/contest.html  
  inflating: contest-tmp/teams/Avatar/textDisplay.py  
  inflating: contest-tmp/teams/Avatar/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/Avatar/score  
  inflating: contest-tmp/teams/Avatar/mazeGenerator.py  
  inflating: contest-tmp/teams/Avatar/VERSION  
  inflating: contest-tmp/teams/Avatar/myTeam.py  
  inflating: contest-tmp/teams/Avatar/keyboardAgents.py  
  inflating: contest-tmp/teams/Avatar/autograder.py  
  inflating: contest-tmp/teams/Avatar/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/Avatar/baselineTeam.py  
  inflating: contest-tmp/teams/Avatar/myTeam.pyc  
  inflating: contest-tmp/teams/Avatar/keyboardAgents.pyc  
  inflating: contest-tmp/teams/Avatar/graphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/graphicsUtils.py  
  inflating: contest-tmp/teams/Avatar/layout.pyc  
  inflating: contest-tmp/teams/Avatar/pacman.py  
  inflating: contest-tmp/teams/Avatar/capture.pyc  
  inflating: contest-tmp/teams/Avatar/learningAgents  
  inflating: contest-tmp/teams/Avatar/capture_the_flag.png  
  inflating: contest-tmp/teams/Avatar/contestLayout.png  
  inflating: contest-tmp/teams/Avatar/unpack.py  
  inflating: contest-tmp/teams/Avatar/testParser.py  
  inflating: contest-tmp/teams/Avatar/capture.py  
  inflating: contest-tmp/teams/Avatar/baselineTeam.pyc  
  inflating: contest-tmp/teams/Avatar/captureAgents.pyc  
  inflating: contest-tmp/teams/Avatar/testClasses.py  
  inflating: contest-tmp/teams/Avatar/projects.css  
  inflating: contest-tmp/teams/Avatar/captureAgents.py  
  inflating: contest-tmp/teams/Avatar/pacmanAgents.py  
  inflating: contest-tmp/teams/Avatar/distanceCalculator.py  
  inflating: contest-tmp/teams/Avatar/graphicsUtils.pyc  
  inflating: contest-tmp/teams/Avatar/util.pyc  
  inflating: contest-tmp/teams/Avatar/agents.pyc  
  inflating: contest-tmp/teams/Avatar/layout.py  
  inflating: contest-tmp/teams/Avatar/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/bracket.png  
  inflating: contest-tmp/teams/Avatar/ghostAgents.py  
  inflating: contest-tmp/teams/Avatar/distanceCalculator.pyc  
  inflating: contest-tmp/teams/Avatar/util.py  
  inflating: contest-tmp/teams/Avatar/agents.py  
  inflating: contest-tmp/teams/Avatar/capture_the_flag2.png  
  inflating: contest-tmp/teams/Avatar/game.pyc  
  inflating: contest-tmp/teams/Avatar/layouts/testCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/Avatar/layouts/officeCapture.lay  
   creating: contest-tmp/teams/Avatar/__MACOSX/layouts/
  inflating: contest-tmp/teams/Avatar/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._game.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._util.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._layouts  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/Avatar/__MACOSX/layouts/._bloxCapture.lay  
   creating: contest-tmp/teams/HelloWorld/__MACOSX/
   creating: contest-tmp/teams/HelloWorld/layouts/
  inflating: contest-tmp/teams/HelloWorld/game.py  
  inflating: contest-tmp/teams/HelloWorld/contest.html  
  inflating: contest-tmp/teams/HelloWorld/textDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/HelloWorld/score  
  inflating: contest-tmp/teams/HelloWorld/mazeGenerator.py  
  inflating: contest-tmp/teams/HelloWorld/VERSION  
  inflating: contest-tmp/teams/HelloWorld/myTeam.py  
  inflating: contest-tmp/teams/HelloWorld/test_MonteCarlo.py  
  inflating: contest-tmp/teams/HelloWorld/keyboardAgents.py  
  inflating: contest-tmp/teams/HelloWorld/autograder.py  
  inflating: contest-tmp/teams/HelloWorld/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/HelloWorld/baselineTeam.py  
  inflating: contest-tmp/teams/HelloWorld/myTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/keyboardAgents.pyc  
  inflating: contest-tmp/teams/HelloWorld/graphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/graphicsUtils.py  
  inflating: contest-tmp/teams/HelloWorld/layout.pyc  
  inflating: contest-tmp/teams/HelloWorld/pacman.py  
  inflating: contest-tmp/teams/HelloWorld/randomTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/mergeTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/capture_the_flag.png  
  inflating: contest-tmp/teams/HelloWorld/randomTeam.py  
  inflating: contest-tmp/teams/HelloWorld/contestLayout.png  
  inflating: contest-tmp/teams/HelloWorld/unpack.py  
  inflating: contest-tmp/teams/HelloWorld/testParser.py  
  inflating: contest-tmp/teams/HelloWorld/planner_team.py  
  inflating: contest-tmp/teams/HelloWorld/capture.py  
  inflating: contest-tmp/teams/HelloWorld/baselineTeam.pyc  
  inflating: contest-tmp/teams/HelloWorld/captureAgents.pyc  
  inflating: contest-tmp/teams/HelloWorld/testClasses.py  
  inflating: contest-tmp/teams/HelloWorld/projects.css  
  inflating: contest-tmp/teams/HelloWorld/captureAgents.py  
  inflating: contest-tmp/teams/HelloWorld/pacmanAgents.py  
  inflating: contest-tmp/teams/HelloWorld/distanceCalculator.py  
  inflating: contest-tmp/teams/HelloWorld/graphicsUtils.pyc  
  inflating: contest-tmp/teams/HelloWorld/util.pyc  
  inflating: contest-tmp/teams/HelloWorld/layout.py  
  inflating: contest-tmp/teams/HelloWorld/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/bracket.png  
  inflating: contest-tmp/teams/HelloWorld/ghostAgents.py  
  inflating: contest-tmp/teams/HelloWorld/distanceCalculator.pyc  
  inflating: contest-tmp/teams/HelloWorld/util.py  
  inflating: contest-tmp/teams/HelloWorld/uctTeam.py  
  inflating: contest-tmp/teams/HelloWorld/testOffensive.py  
  inflating: contest-tmp/teams/HelloWorld/capture_the_flag2.png  
  inflating: contest-tmp/teams/HelloWorld/tempTeam.py  
  inflating: contest-tmp/teams/HelloWorld/game.pyc  
  inflating: contest-tmp/teams/HelloWorld/testOriginal.py  
  inflating: contest-tmp/teams/HelloWorld/layouts/testCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/layouts/officeCapture.lay  
   creating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._game.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._util.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._planner_team.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._layouts  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/HelloWorld/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/bias/myTeam.py  
  inflating: contest-tmp/teams/ZZZTeam/myTeam.py  
  inflating: contest-tmp/teams/TLH/myTeam.py  
  inflating: contest-tmp/teams/TLH/weights.p  
   creating: contest-tmp/teams/PacKid/teams/
  inflating: contest-tmp/teams/PacKid/group.txt  
  inflating: contest-tmp/teams/PacKid/myTeam.py  
  inflating: contest-tmp/teams/PacKid/plan_for_pacman  
  inflating: contest-tmp/teams/PacKid/ghost_domain.pddl  
  inflating: contest-tmp/teams/PacKid/Problem_image.PNG  
  inflating: contest-tmp/teams/PacKid/pacman_domain.pddl  
  inflating: contest-tmp/teams/PacKid/readme.txt  
  inflating: contest-tmp/teams/PacKid/probelm.pddl  
   creating: contest-tmp/teams/PacKid/teams/Terminators/
  inflating: contest-tmp/teams/PacKid/teams/Terminators/team.py  
  inflating: contest-tmp/teams/EvilGeniuses/myTeam.py  
  inflating: contest-tmp/teams/iceice/myTeam.py  
   creating: contest-tmp/teams/loserswishes/__MACOSX/
  inflating: contest-tmp/teams/loserswishes/group.txt  
  inflating: contest-tmp/teams/loserswishes/myTeam.py  
  inflating: contest-tmp/teams/loserswishes/README.txt  
  inflating: contest-tmp/teams/loserswishes/__MACOSX/._README.txt  
  inflating: contest-tmp/teams/loserswishes/__MACOSX/._group.txt  
   creating: contest-tmp/teams/contestrndmnm/contestrndmnm/
   creating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/game.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/contest.html  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/textDisplay.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/score  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/mazeGenerator.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/VERSION  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/myTeam.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/mazeGenerator.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/keyboardAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/autograder.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/baselineTeam.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/myTeam.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/keyboardAgents.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/graphicsDisplay.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/graphicsUtils.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layout.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/pacman.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/capture_the_flag.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/contestLayout.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/unpack.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/testParser.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/capture.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/baselineTeam.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureAgents.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/testClasses.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/projects.css  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/pacmanAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/distanceCalculator.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/graphicsUtils.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/util.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layout.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/bracket.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/ghostAgents.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/distanceCalculator.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/util.py  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/capture_the_flag2.png  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/game.pyc  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/testCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/contestrndmnm/contestrndmnm/layouts/officeCapture.lay  
  inflating: contest-tmp/teams/InfiniteLoop/myTeam.py  
  inflating: contest-tmp/teams/friedOreo/myTeam.py  
  inflating: contest-tmp/teams/Reaper/group.txt  
  inflating: contest-tmp/teams/Reaper/myTeam.py  
  inflating: contest-tmp/teams/Reaper/README.TXT  
  inflating: contest-tmp/teams/AliEn/myTeam.py  
   creating: contest-tmp/teams/IPhoneX/__MACOSX/
  inflating: contest-tmp/teams/IPhoneX/myTeam.py  
  inflating: contest-tmp/teams/IPhoneX/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/victoriasSecret/myTeam.py  
  inflating: contest-tmp/teams/Allogator/myTeam.py  
   creating: contest-tmp/teams/MMM/layouts/
  inflating: contest-tmp/teams/MMM/game.py  
  inflating: contest-tmp/teams/MMM/contest.html  
  inflating: contest-tmp/teams/MMM/textDisplay.py  
  inflating: contest-tmp/teams/MMM/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/MMM/score  
  inflating: contest-tmp/teams/MMM/mazeGenerator.py  
  inflating: contest-tmp/teams/MMM/VERSION  
  inflating: contest-tmp/teams/MMM/myTeam.py  
  inflating: contest-tmp/teams/MMM/anotherTeam.pyc  
  inflating: contest-tmp/teams/MMM/keyboardAgents.py  
  inflating: contest-tmp/teams/MMM/autograder.py  
  inflating: contest-tmp/teams/MMM/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/MMM/baselineTeam.py  
  inflating: contest-tmp/teams/MMM/myTeam_2.py  
  inflating: contest-tmp/teams/MMM/myTeam.pyc  
  inflating: contest-tmp/teams/MMM/keyboardAgents.pyc  
  inflating: contest-tmp/teams/MMM/graphicsDisplay.py  
  inflating: contest-tmp/teams/MMM/myTeam_top.py  
  inflating: contest-tmp/teams/MMM/graphicsUtils.py  
  inflating: contest-tmp/teams/MMM/layout.pyc  
  inflating: contest-tmp/teams/MMM/pacman.py  
  inflating: contest-tmp/teams/MMM/ERC.zip  
  inflating: contest-tmp/teams/MMM/capture_the_flag.png  
  inflating: contest-tmp/teams/MMM/contestLayout.png  
  inflating: contest-tmp/teams/MMM/unpack.py  
  inflating: contest-tmp/teams/MMM/testParser.py  
  inflating: contest-tmp/teams/MMM/anotherTeam.py  
  inflating: contest-tmp/teams/MMM/capture.py  
  inflating: contest-tmp/teams/MMM/c3Team.py  
  inflating: contest-tmp/teams/MMM/baselineTeam.pyc  
  inflating: contest-tmp/teams/MMM/captureAgents.pyc  
  inflating: contest-tmp/teams/MMM/testClasses.py  
  inflating: contest-tmp/teams/MMM/projects.css  
  inflating: contest-tmp/teams/MMM/cTeam.pyc  
  inflating: contest-tmp/teams/MMM/captureAgents.py  
  inflating: contest-tmp/teams/MMM/pacmanAgents.py  
  inflating: contest-tmp/teams/MMM/distanceCalculator.py  
  inflating: contest-tmp/teams/MMM/graphicsUtils.pyc  
  inflating: contest-tmp/teams/MMM/myTeam_1.py  
  inflating: contest-tmp/teams/MMM/util.pyc  
  inflating: contest-tmp/teams/MMM/layout.py  
  inflating: contest-tmp/teams/MMM/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/MMM/bracket.png  
  inflating: contest-tmp/teams/MMM/ghostAgents.py  
  inflating: contest-tmp/teams/MMM/distanceCalculator.pyc  
  inflating: contest-tmp/teams/MMM/util.py  
  inflating: contest-tmp/teams/MMM/capture_the_flag2.png  
  inflating: contest-tmp/teams/MMM/game.pyc  
  inflating: contest-tmp/teams/MMM/cTeam.py  
  inflating: contest-tmp/teams/MMM/monteCarloTeam.py  
  inflating: contest-tmp/teams/QCR/myTeam.py  
  inflating: contest-tmp/teams/PandaTV/myTeam.py  
   creating: contest-tmp/teams/AIFighter/__MACOSX/
  inflating: contest-tmp/teams/AIFighter/myTeam.py  
  inflating: contest-tmp/teams/AIFighter/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/staff_team_medium/myTeam.py  
  inflating: contest-tmp/teams/staff_team_medium/ghost-domain-kilpacman-problem.pddl  
  inflating: contest-tmp/teams/staff_team_medium/pacman-domain-eatfood-problem.pddl  
  inflating: contest-tmp/teams/staff_team_medium/pacman-domain-killghostproblem.pddl  
  inflating: contest-tmp/teams/staff_team_medium/ghost-domain.pddl  
  inflating: contest-tmp/teams/staff_team_medium/pacman-domain.pddl  
  inflating: contest-tmp/teams/staff_team_medium/README.txt  
  inflating: contest-tmp/teams/staff_team_medium/ff  
   creating: contest-tmp/teams/RandomTeamVI/__MACOSX/
  inflating: contest-tmp/teams/RandomTeamVI/myTeam.py  
  inflating: contest-tmp/teams/RandomTeamVI/ghost_problem.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/ghost.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/pacman.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/problem_pacman_01.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._ghost_problem.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._problem_pacman_01.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._pacman.pddl  
  inflating: contest-tmp/teams/RandomTeamVI/__MACOSX/._ghost.pddl  
  inflating: contest-tmp/teams/staff_team_basic/myTeam.py  
  inflating: contest-tmp/teams/staff_team_basic/problem.pddl  
  inflating: contest-tmp/teams/staff_team_basic/__init__.py  
  inflating: contest-tmp/teams/staff_team_basic/domain.pddl  
  inflating: contest-tmp/teams/staff_team_basic/gmon.out  
  inflating: contest-tmp/teams/disabledPacman4/disabledPacman3.py  
  inflating: contest-tmp/teams/Patman/myTeam.py  
  inflating: contest-tmp/teams/RNG/PacMax.zip  
  inflating: contest-tmp/teams/RNG/myTeam.py  
  inflating: contest-tmp/teams/RNG/offensiveWeightsDefault.json  
  inflating: contest-tmp/teams/RNG/myTeam.pyc  
  inflating: contest-tmp/teams/RNG/defensiveWeightsDefault.json  
  inflating: contest-tmp/teams/RNG/defensiveWeights.json  
  inflating: contest-tmp/teams/RNG/logger.log  
  inflating: contest-tmp/teams/RNG/agents.py  
  inflating: contest-tmp/teams/RNG/offensiveWeights.json  
   creating: contest-tmp/teams/Alive/__MACOSX/
  inflating: contest-tmp/teams/Alive/myTeam.py  
  inflating: contest-tmp/teams/Alive/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Artificialidiot/__MACOSX/
  inflating: contest-tmp/teams/Artificialidiot/myTeam.py  
  inflating: contest-tmp/teams/Artificialidiot/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/staff_team_top/group.txt  
  inflating: contest-tmp/teams/staff_team_top/myTeam.py  
  inflating: contest-tmp/teams/staff_team_top/domain_pacman_contestpacman.pddl  
  inflating: contest-tmp/teams/staff_team_top/problem_ghost_eatpacman.pddl  
  inflating: contest-tmp/teams/staff_team_top/problem_pacman_eatdot.pddl  
  inflating: contest-tmp/teams/staff_team_top/domain_ghost_contestghost.pddl  
  inflating: contest-tmp/teams/staff_team_top/problem_pacman_eatghost.pddl  
  inflating: contest-tmp/teams/staff_team_top/readme.txt  
  inflating: contest-tmp/teams/staff_team_top/ff  
  inflating: contest-tmp/teams/ShallowMind/myTeam.py  
  inflating: contest-tmp/teams/ShallowMind/offense.json  
  inflating: contest-tmp/teams/AI_Rookie/myTeam.py  
   creating: contest-tmp/teams/InvictusGaming/__MACOSX/
  inflating: contest-tmp/teams/InvictusGaming/myTeam.py  
  inflating: contest-tmp/teams/InvictusGaming/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Higher_Brothers/__MACOSX/
  inflating: contest-tmp/teams/Higher_Brothers/myTeam.py  
  inflating: contest-tmp/teams/Higher_Brothers/ghost_domain.pddl  
  inflating: contest-tmp/teams/Higher_Brothers/pacman_domain.pddl  
  inflating: contest-tmp/teams/Higher_Brothers/ff  
  inflating: contest-tmp/teams/Higher_Brothers/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/Pacmon-Sun-and-Moon/myTeam.py  
   creating: contest-tmp/teams/ERC/layouts/
  inflating: contest-tmp/teams/ERC/game.py  
  inflating: contest-tmp/teams/ERC/contest.html  
  inflating: contest-tmp/teams/ERC/textDisplay.py  
  inflating: contest-tmp/teams/ERC/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/ERC/score  
  inflating: contest-tmp/teams/ERC/mazeGenerator.py  
  inflating: contest-tmp/teams/ERC/VERSION  
  inflating: contest-tmp/teams/ERC/myTeam.py  
  inflating: contest-tmp/teams/ERC/anotherTeam.pyc  
  inflating: contest-tmp/teams/ERC/keyboardAgents.py  
  inflating: contest-tmp/teams/ERC/autograder.py  
  inflating: contest-tmp/teams/ERC/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/ERC/baselineTeam.py  
  inflating: contest-tmp/teams/ERC/myTeam_2.py  
  inflating: contest-tmp/teams/ERC/myTeam.pyc  
  inflating: contest-tmp/teams/ERC/keyboardAgents.pyc  
  inflating: contest-tmp/teams/ERC/graphicsDisplay.py  
  inflating: contest-tmp/teams/ERC/myTeam_top.py  
  inflating: contest-tmp/teams/ERC/graphicsUtils.py  
  inflating: contest-tmp/teams/ERC/layout.pyc  
  inflating: contest-tmp/teams/ERC/pacman.py  
  inflating: contest-tmp/teams/ERC/capture_the_flag.png  
  inflating: contest-tmp/teams/ERC/contestLayout.png  
  inflating: contest-tmp/teams/ERC/unpack.py  
  inflating: contest-tmp/teams/ERC/testParser.py  
  inflating: contest-tmp/teams/ERC/anotherTeam.py  
  inflating: contest-tmp/teams/ERC/capture.py  
  inflating: contest-tmp/teams/ERC/c3Team.py  
  inflating: contest-tmp/teams/ERC/baselineTeam.pyc  
  inflating: contest-tmp/teams/ERC/captureAgents.pyc  
  inflating: contest-tmp/teams/ERC/mmmD.py  
  inflating: contest-tmp/teams/ERC/testClasses.py  
  inflating: contest-tmp/teams/ERC/projects.css  
  inflating: contest-tmp/teams/ERC/cTeam.pyc  
  inflating: contest-tmp/teams/ERC/captureAgents.py  
  inflating: contest-tmp/teams/ERC/pacmanAgents.py  
  inflating: contest-tmp/teams/ERC/distanceCalculator.py  
  inflating: contest-tmp/teams/ERC/graphicsUtils.pyc  
  inflating: contest-tmp/teams/ERC/myTeam_1.py  
  inflating: contest-tmp/teams/ERC/util.pyc  
  inflating: contest-tmp/teams/ERC/layout.py  
  inflating: contest-tmp/teams/ERC/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/ERC/bracket.png  
  inflating: contest-tmp/teams/ERC/ghostAgents.py  
  inflating: contest-tmp/teams/ERC/distanceCalculator.pyc  
  inflating: contest-tmp/teams/ERC/util.py  
  inflating: contest-tmp/teams/ERC/capture_the_flag2.png  
  inflating: contest-tmp/teams/ERC/game.pyc  
  inflating: contest-tmp/teams/ERC/cTeam.py  
  inflating: contest-tmp/teams/ERC/monteCarloTeam.py  
   creating: contest-tmp/teams/RMY/RMY/
   creating: contest-tmp/teams/RMY/__MACOSX/
   creating: contest-tmp/teams/RMY/__MACOSX/RMY/
  inflating: contest-tmp/teams/RMY/__MACOSX/RMY/._.DS_Store  
  inflating: contest-tmp/teams/RMY/RMY/myTeam.py  
  inflating: contest-tmp/teams/RMY/RMY/.DS_Store  
  inflating: contest-tmp/teams/RMY/RMY/README.txt  
  inflating: contest-tmp/teams/Chicken-Dinner/myTeam.py  
  inflating: contest-tmp/teams/ARP/myTeam.py  
   creating: contest-tmp/teams/ITCrowd/__MACOSX/
   creating: contest-tmp/teams/ITCrowd/layouts/
  inflating: contest-tmp/teams/ITCrowd/game.py  
  inflating: contest-tmp/teams/ITCrowd/contest.html  
  inflating: contest-tmp/teams/ITCrowd/textDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/captureGraphicsDisplay.pyc  
  inflating: contest-tmp/teams/ITCrowd/score  
  inflating: contest-tmp/teams/ITCrowd/mazeGenerator.py  
  inflating: contest-tmp/teams/ITCrowd/VERSION  
  inflating: contest-tmp/teams/ITCrowd/myTeam.py  
  inflating: contest-tmp/teams/ITCrowd/keyboardAgents.py  
  inflating: contest-tmp/teams/ITCrowd/autograder.py  
  inflating: contest-tmp/teams/ITCrowd/generateTournamentLayouts.py  
  inflating: contest-tmp/teams/ITCrowd/baselineTeam.py  
  inflating: contest-tmp/teams/ITCrowd/myTeam.pyc  
  inflating: contest-tmp/teams/ITCrowd/keyboardAgents.pyc  
  inflating: contest-tmp/teams/ITCrowd/graphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/graphicsUtils.py  
  inflating: contest-tmp/teams/ITCrowd/layout.pyc  
  inflating: contest-tmp/teams/ITCrowd/pacman.py  
  inflating: contest-tmp/teams/ITCrowd/capture_the_flag.png  
  inflating: contest-tmp/teams/ITCrowd/contestLayout.png  
  inflating: contest-tmp/teams/ITCrowd/unpack.py  
  inflating: contest-tmp/teams/ITCrowd/testParser.py  
  inflating: contest-tmp/teams/ITCrowd/capture.py  
  inflating: contest-tmp/teams/ITCrowd/baselineTeam.pyc  
  inflating: contest-tmp/teams/ITCrowd/captureAgents.pyc  
  inflating: contest-tmp/teams/ITCrowd/testClasses.py  
  inflating: contest-tmp/teams/ITCrowd/projects.css  
  inflating: contest-tmp/teams/ITCrowd/captureAgents.py  
  inflating: contest-tmp/teams/ITCrowd/pacmanAgents.py  
  inflating: contest-tmp/teams/ITCrowd/distanceCalculator.py  
  inflating: contest-tmp/teams/ITCrowd/graphicsUtils.pyc  
  inflating: contest-tmp/teams/ITCrowd/util.pyc  
  inflating: contest-tmp/teams/ITCrowd/layout.py  
  inflating: contest-tmp/teams/ITCrowd/captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/bracket.png  
  inflating: contest-tmp/teams/ITCrowd/ghostAgents.py  
  inflating: contest-tmp/teams/ITCrowd/distanceCalculator.pyc  
  inflating: contest-tmp/teams/ITCrowd/util.py  
  inflating: contest-tmp/teams/ITCrowd/capture_the_flag2.png  
  inflating: contest-tmp/teams/ITCrowd/game.pyc  
  inflating: contest-tmp/teams/ITCrowd/layouts/testCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/crowdedCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/alleyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/mediumCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/bloxCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/defaultCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/strategicCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/jumboCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/fastCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/tinyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/distantCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/layouts/officeCapture.lay  
   creating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._capture_the_flag2.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._contestLayout.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._game.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._capture_the_flag.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._textDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._generateTournamentLayouts.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._contest.html  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._projects.css  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._pacmanAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._keyboardAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._VERSION  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._mazeGenerator.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._unpack.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._myTeam.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._capture.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._autograder.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._captureAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._graphicsUtils.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._testClasses.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._pacman.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._graphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._util.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._captureGraphicsDisplay.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._layout.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._baselineTeam.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._score  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._bracket.png  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._testParser.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._layouts  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._ghostAgents.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/._distanceCalculator.py  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._strategicCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._alleyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._officeCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._mediumCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._defaultCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._fastCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._distantCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._tinyCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._jumboCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._testCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._crowdedCapture.lay  
  inflating: contest-tmp/teams/ITCrowd/__MACOSX/layouts/._bloxCapture.lay  
  inflating: contest-tmp/teams/BetterThanBaselineTeam/myTeam.py  
  inflating: contest-tmp/teams/BetterThanBaselineTeam/README.txt  
   creating: contest-tmp/teams/EvilPacman/__MACOSX/
  inflating: contest-tmp/teams/EvilPacman/myTeam.py  
  inflating: contest-tmp/teams/EvilPacman/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/Werewolf/__MACOSX/
  inflating: contest-tmp/teams/Werewolf/myTeam.py  
  inflating: contest-tmp/teams/Werewolf/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/trytrytrytry/__MACOSX/
  inflating: contest-tmp/teams/trytrytrytry/myTeam.py  
  inflating: contest-tmp/teams/trytrytrytry/__MACOSX/._myTeam.py  
   creating: contest-tmp/teams/IHateCapsule/__MACOSX/
  inflating: contest-tmp/teams/IHateCapsule/myTeam.py  
  inflating: contest-tmp/teams/IHateCapsule/__MACOSX/._myTeam.py  
   creating: contest-tmp/bin/bin/
  inflating: contest-tmp/bin/metric-ff  
  inflating: contest-tmp/bin/ff      

Red team teams/RandomTeamVI/myTeam.py with {}:
teams/RandomTeamVI/myTeam.py
Loading Team: teams/RandomTeamVI/myTeam.py
Arguments: {}

Blue team teams/ES/myTeam.py with {}:
teams/ES/myTeam.py
Loading Team: teams/ES/myTeam.py
Arguments: {}
0
Blue team starts
{'kill': 0, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
{'kill': 0, 'opponent': 0, 'stop': 1, 'heuristicValue': 140, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
{'kill': 0, 'heuristicValue': 141, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 0, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
['West', 'Stop', 'North', 'South']
[-139, -242, -141, -139]
{'kill': 0, 'heuristicValue': 866, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-866.0
{'kill': 0, 'opponent': 0, 'stop': 1, 'heuristicValue': 867, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'kill': 0, 'heuristicValue': 866, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-866.0
['West', 'Stop', 'South']
[-866.0, -969.0, -866.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
{'opponent': 0, 'kill': 0, 'heuristicValue': 140, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
{'kill': 0, 'heuristicValue': 140, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-140
{'kill': 0, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
['Stop', 'East', 'North', 'South']
[-239, -142, -140, -138]
{'kill': 0, 'stop': 1, 'heuristicValue': 866, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-966.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 867, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-869.0
{'kill': 0, 'heuristicValue': 865, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-865.0
['Stop', 'East', 'South']
[-966.0, -869.0, -865.0]
{'kill': 0, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 0, 'stop': 1, 'heuristicValue': 138, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'kill': 0, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
{'opponent': 0, 'kill': 0, 'heuristicValue': 139, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 0, 'heuristicValue': 139, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
['West', 'Stop', 'East', 'North', 'South']
[-137, -238, -139, -141, -139]
{'kill': 0, 'stop': 1, 'heuristicValue': 865, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-965.0
{'kill': 0, 'heuristicValue': 866, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-866.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 866, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-868.0
{'kill': 0, 'heuristicValue': 864, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-864.0
['Stop', 'East', 'North', 'South']
[-965.0, -866.0, -868.0, -864.0]
{'kill': 0, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 0, 'stop': 1, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-237
{'opponent': 0, 'kill': 0, 'heuristicValue': 138, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-140
['West', 'Stop', 'East']
[-136, -237, -140]
{'kill': 0, 'heuristicValue': 863, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-863.0
{'kill': 0, 'stop': 1, 'heuristicValue': 864, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-964.0
{'kill': 0, 'heuristicValue': 865, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-865.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 865, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-867.0
{'kill': 0, 'heuristicValue': 865, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-865.0
['West', 'Stop', 'East', 'North', 'South']
[-863.0, -964.0, -865.0, -867.0, -865.0]
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 0, 'stop': 1, 'heuristicValue': 136, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
{'opponent': 0, 'kill': 0, 'heuristicValue': 137, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-139
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 0, 'heuristicValue': 137, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
['West', 'Stop', 'East', 'North', 'South']
[-135, -236, -139, -135, -137]
{'kill': 0, 'heuristicValue': 862, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-862.0
{'kill': 0, 'stop': 1, 'heuristicValue': 863, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-963.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 864, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-866.0
['West', 'Stop', 'East']
[-862.0, -963.0, -866.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-235
{'opponent': 0, 'kill': 0, 'heuristicValue': 136, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
{'kill': 0, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['Stop', 'East', 'North']
[-235, -138, -134]
{'kill': 0, 'heuristicValue': 861, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-861.0
{'kill': 0, 'stop': 1, 'heuristicValue': 862, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-962.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 863, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-865.0
{'kill': 0, 'heuristicValue': 861, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-861.0
{'kill': 0, 'heuristicValue': 863, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-863.0
['West', 'Stop', 'East', 'North', 'South']
[-861.0, -962.0, -865.0, -861.0, -863.0]
{'kill': 0, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 0, 'stop': 1, 'heuristicValue': 134, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 0, 'heuristicValue': 135, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'opponent': 0, 'kill': 0, 'heuristicValue': 135, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
['West', 'Stop', 'East', 'North', 'South']
[-133, -234, -135, -135, -137]
{'kill': 0, 'stop': 1, 'heuristicValue': 861, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 862, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-864.0
{'kill': 0, 'heuristicValue': 860, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-860.0
['Stop', 'East', 'North']
[-961.0, -864.0, -860.0]
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'stop': 1, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-233
{'opponent': 0, 'kill': 0, 'heuristicValue': 134, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'East']
[-132, -233, -136]
{'kill': 0, 'heuristicValue': 859, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-859.0
{'kill': 0, 'stop': 1, 'heuristicValue': 860, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-960.0
{'kill': 0, 'heuristicValue': 861, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-861.0
{'kill': 0, 'heuristicValue': 861, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-861.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 861, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-863.0
['West', 'Stop', 'East', 'North', 'South']
[-859.0, -960.0, -861.0, -861.0, -863.0]
{'kill': 0, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'kill': 0, 'stop': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'opponent': 0, 'kill': 0, 'heuristicValue': 133, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 0, 'heuristicValue': 133, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East', 'North']
[-131, -232, -135, -133]
{'kill': 0, 'heuristicValue': 858, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-858.0
{'kill': 0, 'stop': 1, 'heuristicValue': 859, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-959.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 860, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-862.0
['West', 'Stop', 'East']
[-858.0, -959.0, -862.0]
{'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
{'kill': 0, 'stop': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-231
{'opponent': 0, 'kill': 0, 'heuristicValue': 132, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 0, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
['West', 'Stop', 'East', 'North']
[-130, -231, -134, -132]
{'kill': 0, 'heuristicValue': 857, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-857.0
{'kill': 0, 'stop': 1, 'heuristicValue': 858, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-958.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 859, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-861.0
{'kill': 0, 'heuristicValue': 859, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-859.0
['West', 'Stop', 'East', 'North']
[-857.0, -958.0, -861.0, -859.0]
{'kill': 0, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
{'kill': 0, 'stop': 1, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'opponent': 0, 'kill': 0, 'heuristicValue': 131, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East']
[-129, -230, -133]
{'kill': 0, 'heuristicValue': 856, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-856.0
{'kill': 0, 'stop': 1, 'heuristicValue': 857, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-957.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 858, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-860.0
{'kill': 0, 'heuristicValue': 858, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-858.0
['West', 'Stop', 'East', 'North']
[-856.0, -957.0, -860.0, -858.0]
{'kill': 0, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
{'kill': 0, 'stop': 1, 'heuristicValue': 129, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-229
{'opponent': 0, 'kill': 0, 'heuristicValue': 130, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 0, 'heuristicValue': 130, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
['West', 'Stop', 'East', 'North']
[-128, -229, -132, -130]
{'kill': 0, 'heuristicValue': 855, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-855.0
{'kill': 0, 'stop': 1, 'heuristicValue': 856, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-956.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 857, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-859.0
['West', 'Stop', 'East']
[-855.0, -956.0, -859.0]
{'kill': 0, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'stop': 1, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-228
{'opponent': 0, 'kill': 0, 'heuristicValue': 129, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
['West', 'Stop', 'East']
[-127, -228, -131]
{'kill': 0, 'heuristicValue': 854, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-854.0
{'kill': 0, 'stop': 1, 'heuristicValue': 855, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-955.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 856, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-858.0
{'kill': 0, 'heuristicValue': 856, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-856.0
['West', 'Stop', 'East', 'North']
[-854.0, -955.0, -858.0, -856.0]
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
{'kill': 0, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-227
{'opponent': 0, 'kill': 0, 'heuristicValue': 128, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-130
{'kill': 0, 'heuristicValue': 128, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
['West', 'Stop', 'East', 'North']
[-126, -227, -130, -128]
{'kill': 0, 'heuristicValue': 853, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-853.0
{'kill': 0, 'stop': 1, 'heuristicValue': 854, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-954.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 855, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-857.0
['West', 'Stop', 'East']
[-853.0, -954.0, -857.0]
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
{'opponent': 0, 'kill': 0, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
['West', 'Stop', 'East']
[-125, -226, -129]
{'kill': 0, 'heuristicValue': 852, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-852.0
{'kill': 0, 'stop': 1, 'heuristicValue': 853, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-953.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 854, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-856.0
{'kill': 0, 'heuristicValue': 854, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-854.0
['West', 'Stop', 'East', 'North']
[-852.0, -953.0, -856.0, -854.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'opponent': 0, 'kill': 0, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
{'kill': 0, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
['Stop', 'East', 'North', 'South']
[-225, -128, -124, -126]
{'kill': 0, 'heuristicValue': 851, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-851.0
{'kill': 0, 'stop': 1, 'heuristicValue': 852, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-952.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 853, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-855.0
['West', 'Stop', 'East']
[-851.0, -952.0, -855.0]
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
{'kill': 0, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'opponent': 0, 'kill': 0, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
['West', 'Stop', 'South']
[-123, -224, -127]
{'kill': 0, 'stop': 1, 'heuristicValue': 851, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-951.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 852, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-854.0
{'kill': 0, 'heuristicValue': 850, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-850.0
{'kill': 0, 'heuristicValue': 852, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-852.0
['Stop', 'East', 'North', 'South']
[-951.0, -854.0, -850.0, -852.0]
{'kill': 0, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
{'kill': 0, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'opponent': 0, 'kill': 0, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
['West', 'Stop', 'East']
[-122, -223, -126]
{'kill': 0, 'heuristicValue': 849, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-849.0
{'kill': 0, 'stop': 1, 'heuristicValue': 850, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-950.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 851, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-853.0
['West', 'Stop', 'South']
[-849.0, -950.0, -853.0]
{'kill': 0, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
{'kill': 0, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'opponent': 0, 'kill': 0, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['West', 'Stop', 'East', 'South']
[-121, -222, -125, -123]
{'kill': 0, 'heuristicValue': 848, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-848.0
{'kill': 0, 'stop': 1, 'heuristicValue': 849, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-949.0
{'opponent': 0, 'kill': 0, 'heuristicValue': 850, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-852.0
['West', 'Stop', 'East']
[-848.0, -949.0, -852.0]
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'opponent': 0, 'kill': 0, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['West', 'Stop', 'East']
[-120, -221, -124]
{'return': 827, 'kill': 0, 'heuristicValue': 847, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2501.0
{'return': 826, 'kill': 0, 'stop': 1, 'heuristicValue': 848, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2600.0
{'return': 825, 'opponent': 0, 'kill': 0, 'heuristicValue': 849, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2501.0
{'return': 827, 'kill': 0, 'heuristicValue': 849, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2503.0
['West', 'Stop', 'East', 'South']
[-2501.0, -2600.0, -2501.0, -2503.0]
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'opponent': 0, 'kill': 0, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['West', 'Stop', 'East']
[-119, -220, -123]
{'return': 826, 'opponent': 0, 'kill': 0, 'heuristicValue': 848, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2502.0
{'return': 825, 'kill': 0, 'stop': 1, 'heuristicValue': 849, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2599.0
{'return': 824, 'kill': 0, 'heuristicValue': 850, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2498.0
['West', 'Stop', 'East']
[-2502.0, -2599.0, -2498.0]
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'opponent': 0, 'kill': 0, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
['West', 'Stop', 'East']
[-118, -219, -122]
{'return': 825, 'opponent': 0, 'kill': 0, 'heuristicValue': 849, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2501.0
{'return': 824, 'kill': 0, 'stop': 1, 'heuristicValue': 850, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2598.0
{'return': 823, 'kill': 0, 'heuristicValue': 851, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2497.0
['West', 'Stop', 'South']
[-2501.0, -2598.0, -2497.0]
{'kill': 0, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
['West', 'Stop', 'East']
[-117, -218, -121]
{'return': 823, 'kill': 0, 'stop': 1, 'heuristicValue': 851, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2597.0
{'return': 824, 'kill': 0, 'heuristicValue': 852, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2500.0
{'return': 824, 'opponent': 0, 'kill': 0, 'heuristicValue': 850, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2500.0
{'return': 822, 'kill': 0, 'heuristicValue': 852, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2496.0
['Stop', 'East', 'North', 'South']
[-2597.0, -2500.0, -2500.0, -2496.0]
{'kill': 0, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['West', 'Stop', 'East', 'South']
[-116, -217, -120, -123]
{'return': 822, 'kill': 0, 'stop': 1, 'heuristicValue': 852, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2596.0
{'return': 823, 'opponent': 0, 'kill': 0, 'heuristicValue': 851, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2499.0
{'return': 821, 'kill': 0, 'heuristicValue': 857, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2499.0
['Stop', 'North', 'South']
[-2596.0, -2499.0, -2499.0]
{'kill': 0, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'East']
[-115, -216, -119]
{'return': 822, 'kill': 0, 'heuristicValue': 856, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2500.0
{'return': 821, 'kill': 0, 'stop': 1, 'heuristicValue': 857, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2599.0
{'return': 822, 'kill': 0, 'heuristicValue': 858, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2502.0
{'return': 822, 'opponent': 0, 'kill': 0, 'heuristicValue': 852, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2498.0
{'return': 820, 'kill': 0, 'heuristicValue': 856, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2496.0
['West', 'Stop', 'East', 'North', 'South']
[-2500.0, -2599.0, -2502.0, -2498.0, -2496.0]
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['West', 'Stop', 'East']
[-114, -215, -118]
{'return': 821, 'kill': 6, 'heuristicValue': 839, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2541.6
{'return': 820, 'kill': 5, 'stop': 1, 'heuristicValue': 840, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2630.5
{'return': 821, 'kill': 6, 'heuristicValue': 841, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2543.6
{'return': 821, 'opponent': 0, 'kill': 6, 'heuristicValue': 841, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2545.6
{'return': 819, 'kill': 4, 'heuristicValue': 839, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2517.4
['West', 'Stop', 'East', 'North', 'South']
[-2541.6, -2630.5, -2543.6, -2545.6, -2517.4]
{'kill': 20, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-313
{'kill': 19, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-404
{'opponent': 0, 'kill': 18, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-297
['West', 'Stop', 'East']
[-313, -404, -297]
{'return': 781, 'kill': 0, 'stop': 1, 'heuristicValue': 839}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2501.0
{'return': 780, 'kill': 0, 'heuristicValue': 840, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2402.0
{'return': 782, 'kill': 0, 'heuristicValue': 838, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2386.0
['Stop', 'North', 'South']
[-2501.0, -2402.0, -2386.0]
{'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'stop': 1, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'kill': 0, 'heuristicValue': 116}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['West', 'Stop', 'East']
[-116, -215, -116]
{'return': 759, 'kill': 0, 'heuristicValue': 837, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2347.0
{'return': 758, 'kill': 0, 'stop': 1, 'heuristicValue': 838, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2442.0
{'return': 757, 'kill': 0, 'heuristicValue': 839, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2337.0
{'return': 759, 'opponent': 4, 'kill': 0, 'heuristicValue': 839, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2343.0
{'return': 757, 'kill': 0, 'heuristicValue': 839, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2337.0
['West', 'Stop', 'East', 'North', 'South']
[-2347.0, -2442.0, -2337.0, -2343.0, -2337.0]
{'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'stop': 1, 'heuristicValue': 116}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'kill': 0, 'heuristicValue': 117}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
['West', 'Stop', 'East']
[-117, -216, -117]
{'return': 758, 'opponent': 4, 'kill': 0, 'heuristicValue': 838, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2340.0
{'return': 757, 'kill': 0, 'stop': 1, 'heuristicValue': 839}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2453.0
{'return': 756, 'kill': 0, 'heuristicValue': 840}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2352.0
['West', 'Stop', 'South']
[-2340.0, -2453.0, -2352.0]
{'kill': 0, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['West', 'Stop', 'East']
[-114, -215, -118]
{'return': 759, 'kill': 0, 'heuristicValue': 837, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2339.0
{'return': 758, 'kill': 0, 'stop': 1, 'heuristicValue': 838}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2454.0
{'return': 757, 'kill': 0, 'heuristicValue': 839, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2355.0
{'return': 759, 'kill': 0, 'heuristicValue': 839, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2341.0
{'return': 757, 'kill': 0, 'heuristicValue': 839}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2353.0
['West', 'Stop', 'East', 'North', 'South']
[-2339.0, -2454.0, -2355.0, -2341.0, -2353.0]
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
['West', 'Stop', 'East']
[-113, -214, -117]
{'return': 760, 'kill': 4, 'heuristicValue': 810, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2370.4
{'return': 759, 'kill': 5, 'stop': 1, 'heuristicValue': 811, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2479.5
{'return': 758, 'opponent': 0, 'kill': 4, 'heuristicValue': 812, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2370.4
['West', 'Stop', 'East']
[-2370.4, -2479.5, -2370.4]
{'kill': 17, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-383
{'opponent': 0, 'kill': 16, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
['Stop', 'East']
[-383, -274]
{'return': 759, 'opponent': 0, 'kill': 4, 'heuristicValue': 811, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2371.4
{'return': 758, 'kill': 3, 'stop': 1, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2458.3
{'return': 757, 'kill': 4, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2367.4
{'return': 759, 'kill': 2, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2351.2
{'return': 757, 'kill': 4, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2367.4
['West', 'Stop', 'East', 'North', 'South']
[-2371.4, -2458.3, -2367.4, -2351.2, -2367.4]
{'opponent': 0, 'kill': 16, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-275
{'kill': 15, 'stop': 1, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-362
{'kill': 14, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-251
['West', 'Stop', 'East']
[-275, -362, -251]
{'return': 759, 'kill': 3, 'stop': 1, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2461.3
{'return': 760, 'kill': 2, 'heuristicValue': 814, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2354.2
{'return': 758, 'opponent': 0, 'kill': 4, 'heuristicValue': 812, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2370.4
['Stop', 'North', 'South']
[-2461.3, -2354.2, -2370.4]
{'opponent': 0, 'kill': 16, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
{'kill': 15, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-361
{'kill': 14, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
['West', 'Stop', 'East']
[-274, -361, -250]
{'return': 761, 'kill': 0, 'heuristicValue': 813, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2327.0
{'return': 760, 'kill': 0, 'stop': 1, 'heuristicValue': 814, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2422.0
{'return': 761, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2321.0
{'return': 761, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2321.0
{'return': 759, 'opponent': 4, 'kill': 0, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2317.0
['West', 'Stop', 'East', 'North', 'South']
[-2327.0, -2422.0, -2321.0, -2321.0, -2317.0]
{'kill': 0, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 110}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-210
{'kill': 0, 'heuristicValue': 109}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-109
['West', 'Stop', 'East']
[-113, -210, -109]
{'return': 759, 'kill': 3, 'stop': 1, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2461.3
{'return': 760, 'opponent': 0, 'kill': 2, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2356.2
{'return': 758, 'kill': 4, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2368.4
['Stop', 'North', 'South']
[-2461.3, -2356.2, -2368.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
{'kill': 13, 'stop': 1, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-339
{'kill': 12, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'kill': 14, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
['West', 'Stop', 'East', 'South']
[-252, -339, -230, -248]
{'return': 731, 'kill': 0, 'heuristicValue': 813, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2267.0
{'return': 730, 'kill': 0, 'stop': 1, 'heuristicValue': 814, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2362.0
{'return': 731, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2261.0
{'return': 731, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2261.0
{'return': 729, 'opponent': 4, 'kill': 0, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2257.0
['West', 'Stop', 'East', 'North', 'South']
[-2267.0, -2362.0, -2261.0, -2261.0, -2257.0]
{'kill': 0, 'heuristicValue': 109, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
{'kill': 0, 'stop': 1, 'heuristicValue': 110}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-210
{'kill': 0, 'heuristicValue': 111}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
['West', 'Stop', 'East']
[-111, -210, -111]
{'return': 729, 'kill': 3, 'stop': 1, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2401.3
{'return': 730, 'opponent': 0, 'kill': 2, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2296.2
{'return': 730, 'kill': 4, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2312.4
['Stop', 'North', 'South']
[-2401.3, -2296.2, -2312.4]
{'opponent': 0, 'kill': 12, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'kill': 11, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-321
{'kill': 10, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
['West', 'Stop', 'East']
[-232, -321, -212]
{'return': 731, 'kill': 0, 'heuristicValue': 813, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2267.0
{'return': 730, 'kill': 0, 'stop': 1, 'heuristicValue': 814, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2362.0
{'return': 731, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2261.0
{'return': 731, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2261.0
{'return': 729, 'opponent': 4, 'kill': 0, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2257.0
['West', 'Stop', 'East', 'North', 'South']
[-2267.0, -2362.0, -2261.0, -2261.0, -2257.0]
{'kill': 0, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['West', 'Stop', 'East']
[-113, -212, -113]
{'return': 729, 'kill': 3, 'stop': 1, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2401.3
{'return': 728, 'opponent': 0, 'kill': 2, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2292.2
{'return': 730, 'kill': 4, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2312.4
['Stop', 'North', 'South']
[-2401.3, -2292.2, -2312.4]
{'kill': 12, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'kill': 11, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-321
{'opponent': 0, 'kill': 10, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
['West', 'Stop', 'East']
[-230, -321, -214]
{'return': 729, 'kill': 0, 'heuristicValue': 813, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2263.0
{'return': 728, 'kill': 0, 'stop': 1, 'heuristicValue': 814, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2358.0
{'return': 729, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2257.0
{'return': 727, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2253.0
{'return': 729, 'opponent': 4, 'kill': 0, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2257.0
['West', 'Stop', 'East', 'North', 'South']
[-2263.0, -2358.0, -2257.0, -2253.0, -2257.0]
{'kill': 0, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['West', 'Stop', 'East']
[-113, -212, -113]
{'return': 728, 'kill': 0, 'heuristicValue': 814, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2254.0
{'return': 727, 'kill': 0, 'stop': 1, 'heuristicValue': 815}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2369.0
{'return': 728, 'kill': 0, 'heuristicValue': 816}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2272.0
{'return': 726, 'kill': 0, 'heuristicValue': 812}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2264.0
{'return': 728, 'opponent': 4, 'kill': 0, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2256.0
['West', 'Stop', 'East', 'North', 'South']
[-2254.0, -2369.0, -2272.0, -2264.0, -2256.0]
{'kill': 0, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'kill': 0, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East']
[-114, -213, -114]
{'return': 729, 'kill': 0, 'heuristicValue': 813, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2255.0
{'return': 728, 'kill': 0, 'stop': 1, 'heuristicValue': 814}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2370.0
{'return': 727, 'kill': 0, 'heuristicValue': 815, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2271.0
{'return': 729, 'kill': 0, 'heuristicValue': 813, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2255.0
['West', 'Stop', 'East', 'South']
[-2255.0, -2370.0, -2271.0, -2255.0]
{'kill': 0, 'heuristicValue': 111}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
{'kill': 0, 'stop': 1, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'East']
[-111, -212, -115]
{'return': 730, 'kill': 4, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2312.4
{'return': 729, 'kill': 5, 'stop': 1, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2421.5
{'return': 728, 'kill': 4, 'heuristicValue': 814, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2310.4
{'return': 728, 'opponent': 0, 'kill': 6, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2332.6
['West', 'Stop', 'East', 'North']
[-2312.4, -2421.5, -2310.4, -2332.6]
{'kill': 14, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
{'kill': 13, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-341
{'opponent': 0, 'kill': 12, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
['West', 'Stop', 'East']
[-250, -341, -234]
{'return': 729, 'opponent': 4, 'kill': 0, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2257.0
{'return': 728, 'kill': 0, 'stop': 1, 'heuristicValue': 814}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2370.0
{'return': 729, 'kill': 0, 'heuristicValue': 815}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2273.0
{'return': 727, 'kill': 0, 'heuristicValue': 815}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2269.0
{'return': 729, 'kill': 0, 'heuristicValue': 813, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2255.0
['West', 'Stop', 'East', 'North', 'South']
[-2257.0, -2370.0, -2273.0, -2269.0, -2255.0]
{'kill': 0, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['West', 'Stop', 'East']
[-113, -212, -113]
{'return': 729, 'kill': 0, 'stop': 1, 'heuristicValue': 813}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2371.0
{'return': 728, 'opponent': 4, 'kill': 0, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2256.0
{'return': 730, 'kill': 0, 'heuristicValue': 812, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2256.0
['Stop', 'North', 'South']
[-2371.0, -2256.0, -2256.0]
{'kill': 0, 'heuristicValue': 110}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
{'kill': 0, 'stop': 1, 'heuristicValue': 111}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-211
{'kill': 0, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East']
[-110, -211, -114]
{'return': 683, 'kill': 0, 'heuristicValue': 811, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2161.0
{'return': 682, 'kill': 0, 'stop': 1, 'heuristicValue': 812}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2276.0
{'return': 681, 'kill': 0, 'heuristicValue': 813}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2175.0
{'return': 683, 'opponent': 4, 'kill': 0, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2165.0
{'return': 681, 'kill': 0, 'heuristicValue': 813}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2175.0
['West', 'Stop', 'East', 'North', 'South']
[-2161.0, -2276.0, -2175.0, -2165.0, -2175.0]
{'kill': 0, 'heuristicValue': 109}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-109
{'kill': 0, 'stop': 1, 'heuristicValue': 110}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-210
{'kill': 0, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['West', 'Stop', 'East']
[-109, -210, -113]
{'return': 684, 'kill': 4, 'heuristicValue': 810, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2218.4
{'return': 683, 'kill': 5, 'stop': 1, 'heuristicValue': 811, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2327.5
{'return': 682, 'opponent': 0, 'kill': 4, 'heuristicValue': 812, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2218.4
['West', 'Stop', 'East']
[-2218.4, -2327.5, -2218.4]
{'kill': 14, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
{'kill': 13, 'stop': 1, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-339
{'opponent': 0, 'kill': 12, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
{'kill': 14, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
['West', 'Stop', 'East', 'South']
[-250, -339, -232, -248]
{'return': 685, 'kill': 4, 'heuristicValue': 809, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2219.4
{'return': 684, 'kill': 5, 'stop': 1, 'heuristicValue': 810, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2328.5
{'return': 683, 'opponent': 0, 'kill': 4, 'heuristicValue': 811, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2219.4
{'return': 685, 'kill': 6, 'heuristicValue': 809, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2239.6
['West', 'Stop', 'East', 'South']
[-2219.4, -2328.5, -2219.4, -2239.6]
{'opponent': 0, 'kill': 12, 'heuristicValue': 109, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-231
{'kill': 11, 'stop': 1, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-320
{'kill': 10, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-211
['West', 'Stop', 'East']
[-231, -320, -211]
{'return': 685, 'kill': 5, 'stop': 1, 'heuristicValue': 809, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2329.5
{'return': 684, 'opponent': 0, 'kill': 4, 'heuristicValue': 810, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2220.4
{'return': 686, 'kill': 4, 'heuristicValue': 810, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2222.4
{'return': 686, 'kill': 6, 'heuristicValue': 808, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2240.6
['Stop', 'East', 'North', 'South']
[-2329.5, -2220.4, -2222.4, -2240.6]
{'opponent': 0, 'kill': 10, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 9, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-301
{'kill': 8, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-192
['West', 'Stop', 'East']
[-212, -301, -192]
{'return': 657, 'opponent': 0, 'kill': 4, 'heuristicValue': 809, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2165.4
{'return': 656, 'kill': 3, 'stop': 1, 'heuristicValue': 810, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2252.3
{'return': 655, 'kill': 2, 'heuristicValue': 811, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2141.2
{'return': 657, 'kill': 4, 'heuristicValue': 809, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2163.4
['West', 'Stop', 'East', 'South']
[-2165.4, -2252.3, -2141.2, -2163.4]
{'opponent': 0, 'kill': 10, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'kill': 9, 'stop': 1, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-302
{'kill': 8, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-193
['West', 'Stop', 'East']
[-213, -302, -193]
{'return': 616, 'opponent': 0, 'kill': 2, 'heuristicValue': 810, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2064.2
{'return': 615, 'kill': 1, 'stop': 1, 'heuristicValue': 811, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2151.1
{'return': 635, 'kill': 21, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2309.1
['West', 'Stop', 'East']
[-2064.2, -2151.1, -2309.1]
{'opponent': 0, 'kill': 10, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'kill': 9, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-303
{'kill': 8, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-194
['West', 'Stop', 'East']
[-214, -303, -194]
{'return': 617, 'kill': 4, 'heuristicValue': 809, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2083.4
{'return': 616, 'kill': 3, 'stop': 1, 'heuristicValue': 810, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2172.3
{'return': 615, 'opponent': 0, 'kill': 2, 'heuristicValue': 811, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2063.2
{'return': 617, 'kill': 4, 'heuristicValue': 809, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2083.4
['West', 'Stop', 'East', 'South']
[-2083.4, -2172.3, -2063.2, -2083.4]
{'opponent': 0, 'kill': 10, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'kill': 9, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-304
{'kill': 8, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-195
{'kill': 10, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
['West', 'Stop', 'East', 'South']
[-215, -304, -195, -215]
{'return': 529, 'opponent': 0, 'kill': 4, 'heuristicValue': 810, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1910.4
{'return': 528, 'kill': 3, 'stop': 1, 'heuristicValue': 811, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1997.3
{'return': 527, 'kill': 2, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1886.2
['West', 'Stop', 'East']
[-1910.4, -1997.3, -1886.2]
{'opponent': 0, 'kill': 10, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'kill': 9, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-305
{'kill': 8, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-196
['West', 'Stop', 'East']
[-216, -305, -196]
{'return': 528, 'opponent': 0, 'kill': 4, 'heuristicValue': 811, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1909.4
{'return': 527, 'kill': 3, 'stop': 1, 'heuristicValue': 812, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1996.3
{'return': 528, 'kill': 2, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1889.2
{'return': 526, 'kill': 4, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1905.4
{'return': 528, 'kill': 2, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1889.2
['West', 'Stop', 'East', 'North', 'South']
[-1909.4, -1996.3, -1889.2, -1905.4, -1889.2]
{'opponent': 0, 'kill': 10, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 9, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-306
{'kill': 8, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-197
['West', 'Stop', 'South']
[-217, -306, -197]
{'return': 527, 'opponent': 0, 'kill': 4, 'heuristicValue': 812, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1908.4
{'return': 528, 'kill': 3, 'stop': 1, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1999.3
{'return': 529, 'kill': 2, 'heuristicValue': 814, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1892.2
['West', 'Stop', 'South']
[-1908.4, -1999.3, -1892.2]
{'kill': 9, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-307
{'kill': 10, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 10, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 8, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-198
['Stop', 'East', 'North', 'South']
[-307, -218, -218, -198]
{'return': 528, 'kill': 4, 'heuristicValue': 813, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1909.4
{'return': 529, 'kill': 3, 'stop': 1, 'heuristicValue': 814, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-2002.3
{'return': 528, 'opponent': 0, 'kill': 4, 'heuristicValue': 813, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1911.4
{'return': 530, 'kill': 2, 'heuristicValue': 815, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1895.2
['West', 'Stop', 'North', 'South']
[-1909.4, -2002.3, -1911.4, -1895.2]
{'kill': 9, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-308
{'opponent': 0, 'kill': 10, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'kill': 8, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
['Stop', 'North', 'South']
[-308, -219, -225]
{'return': 514, 'kill': 3, 'stop': 1, 'heuristicValue': 815, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1973.3
{'return': 515, 'opponent': 0, 'kill': 4, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1886.4
{'return': 513, 'kill': 2, 'heuristicValue': 816, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1862.2
['Stop', 'North', 'South']
[-1973.3, -1886.4, -1862.2]
{'kill': 11, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-327
{'kill': 12, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'kill': 12, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
{'opponent': 0, 'kill': 10, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
['Stop', 'East', 'North', 'South']
[-327, -238, -236, -220]
{'return': 512, 'kill': 2, 'heuristicValue': 817, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1861.2
{'return': 513, 'kill': 3, 'stop': 1, 'heuristicValue': 816, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1972.3
{'return': 514, 'opponent': 0, 'kill': 4, 'heuristicValue': 815, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1885.4
['West', 'Stop', 'North']
[-1861.2, -1972.3, -1885.4]
{'kill': 11, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-328
{'opponent': 0, 'kill': 12, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
{'kill': 10, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
['Stop', 'North', 'South']
[-328, -239, -245]
{'return': 512, 'kill': 3, 'stop': 1, 'heuristicValue': 817, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1971.3
{'return': 513, 'opponent': 0, 'kill': 4, 'heuristicValue': 816, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1884.4
{'return': 511, 'kill': 2, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1868.2
['Stop', 'East', 'South']
[-1971.3, -1884.4, -1868.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-347
{'kill': 14, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'kill': 14, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-256
{'opponent': 0, 'kill': 12, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-240
['Stop', 'East', 'North', 'South']
[-347, -258, -256, -240]
{'return': 511, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1978.3
{'return': 512, 'opponent': 0, 'kill': 4, 'heuristicValue': 817, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1883.4
{'return': 510, 'kill': 2, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1865.2
['Stop', 'North', 'South']
[-1978.3, -1883.4, -1865.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-348
{'opponent': 0, 'kill': 14, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-259
{'kill': 12, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-265
['Stop', 'North', 'South']
[-348, -259, -265]
{'return': 446, 'kill': 3, 'stop': 1, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1847.3
{'return': 445, 'kill': 2, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1736.2
{'return': 447, 'opponent': 0, 'kill': 4, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1762.4
{'return': 447, 'kill': 4, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1758.4
['Stop', 'East', 'North', 'South']
[-1847.3, -1736.2, -1762.4, -1758.4]
{'kill': 15, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-367
{'kill': 16, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-278
{'kill': 16, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-276
{'opponent': 0, 'kill': 14, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-260
['Stop', 'East', 'North', 'South']
[-367, -278, -276, -260]
{'return': 394, 'opponent': 0, 'kill': 4, 'heuristicValue': 825, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1655.4
{'return': 395, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1746.3
{'return': 396, 'kill': 2, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1637.2
['West', 'Stop', 'East']
[-1655.4, -1746.3, -1637.2]
{'kill': 15, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-368
{'opponent': 0, 'kill': 16, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-279
{'kill': 14, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-285
['Stop', 'North', 'South']
[-368, -279, -285]
{'return': 395, 'opponent': 0, 'kill': 4, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1658.4
{'return': 396, 'kill': 3, 'stop': 1, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1747.3
{'return': 397, 'kill': 2, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1638.2
['West', 'Stop', 'East']
[-1658.4, -1747.3, -1638.2]
{'kill': 17, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-387
{'kill': 18, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-298
{'kill': 18, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-296
{'opponent': 0, 'kill': 16, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-280
['Stop', 'East', 'North', 'South']
[-387, -298, -296, -280]
{'return': 396, 'opponent': 0, 'kill': 4, 'heuristicValue': 825, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1659.4
{'return': 397, 'kill': 3, 'stop': 1, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1748.3
{'return': 398, 'kill': 2, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1641.2
{'return': 398, 'kill': 4, 'heuristicValue': 823, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1659.4
['West', 'Stop', 'North', 'South']
[-1659.4, -1748.3, -1641.2, -1659.4]
{'kill': 17, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-388
{'opponent': 0, 'kill': 18, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-299
{'kill': 16, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-305
['Stop', 'North', 'South']
[-388, -299, -305]
{'return': 364, 'kill': 3, 'stop': 1, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1683.3
{'return': 365, 'kill': 4, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1596.4
{'return': 365, 'kill': 2, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1576.2
{'return': 363, 'opponent': 0, 'kill': 4, 'heuristicValue': 824, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1592.4
['Stop', 'East', 'North', 'South']
[-1683.3, -1596.4, -1576.2, -1592.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 365, 'kill': 1, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1666.1
{'return': 364, 'kill': 34, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1898.4
{'return': 364, 'opponent': 0, 'kill': 2, 'heuristicValue': 825, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1575.2
['Stop', 'North', 'South']
[-1666.1, -1898.4, -1575.2]
{'kill': 17, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-388
{'opponent': 0, 'kill': 18, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-299
{'kill': 16, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-305
['Stop', 'North', 'South']
[-388, -299, -305]
{'return': 364, 'kill': 3, 'stop': 1, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1683.3
{'return': 365, 'kill': 4, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1596.4
{'return': 365, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1578.2
{'return': 363, 'kill': 4, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1590.4
['Stop', 'East', 'North', 'South']
[-1683.3, -1596.4, -1578.2, -1590.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 322, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1600.3
{'return': 323, 'kill': 2, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1493.2
{'return': 321, 'opponent': 0, 'kill': 4, 'heuristicValue': 825, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1509.4
['Stop', 'North', 'South']
[-1600.3, -1493.2, -1509.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 271, 'kill': 3, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1499.3
{'return': 272, 'kill': 4, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1412.4
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 270, 'opponent': 0, 'kill': 4, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1408.4
['Stop', 'East', 'North', 'South']
[-1499.3, -1412.4, -1392.2, -1408.4]
{'kill': 21, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-427
{'kill': 22, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-338
{'kill': 22, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-336
{'opponent': 0, 'kill': 20, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-320
['Stop', 'East', 'North', 'South']
[-427, -338, -336, -320]
{'return': 272, 'kill': 1, 'stop': 1, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1482.1
{'return': 241, 'kill': 36, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1672.6
{'return': 271, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.2
['Stop', 'North', 'South']
[-1482.1, -1672.6, -1391.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 271, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.1
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 241, 'opponent': 0, 'kill': 27, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1583.7
{'return': 270, 'kill': 2, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1386.2
['Stop', 'East', 'North', 'South']
[-1479.1, -1392.2, -1583.7, -1386.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 270, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1496.3
{'return': 271, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.2
{'return': 269, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1403.4
['Stop', 'North', 'South']
[-1496.3, -1391.2, -1403.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 271, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.1
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 241, 'kill': 35, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1662.5
{'return': 270, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1388.2
['Stop', 'East', 'North', 'South']
[-1479.1, -1392.2, -1662.5, -1388.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 270, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1496.3
{'return': 271, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.2
{'return': 269, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1403.4
['Stop', 'North', 'South']
[-1496.3, -1391.2, -1403.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 271, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.1
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 241, 'kill': 31, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1622.1
{'return': 270, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1388.2
['Stop', 'East', 'North', 'South']
[-1479.1, -1392.2, -1622.1, -1388.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 270, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1496.3
{'return': 271, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.2
{'return': 269, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1403.4
['Stop', 'North', 'South']
[-1496.3, -1391.2, -1403.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 271, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.1
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 241, 'kill': 33, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1642.3
{'return': 270, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1388.2
['Stop', 'East', 'North', 'South']
[-1479.1, -1392.2, -1642.3, -1388.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 270, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1496.3
{'return': 271, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.2
{'return': 269, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1403.4
['Stop', 'North', 'South']
[-1496.3, -1391.2, -1403.4]
{'kill': 18, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-398
{'opponent': 0, 'kill': 19, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-309
{'kill': 17, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-315
['Stop', 'North', 'South']
[-398, -309, -315]
{'return': 271, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.1
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 241, 'kill': 35, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1662.5
{'return': 270, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1388.2
['Stop', 'East', 'North', 'South']
[-1479.1, -1392.2, -1662.5, -1388.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 270, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1496.3
{'return': 271, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.2
{'return': 269, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1403.4
['Stop', 'North', 'South']
[-1496.3, -1391.2, -1403.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 271, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1479.1
{'return': 272, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.2
{'return': 241, 'kill': 35, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1662.5
{'return': 270, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1388.2
['Stop', 'East', 'North', 'South']
[-1479.1, -1392.2, -1662.5, -1388.2]
{'kill': 19, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-407
{'kill': 20, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-318
{'kill': 20, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-316
{'opponent': 0, 'kill': 18, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-300
['Stop', 'East', 'North', 'South']
[-407, -318, -316, -300]
{'return': 234, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1424.3
{'return': 235, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1319.2
{'return': 233, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1331.4
['Stop', 'North', 'South']
[-1424.3, -1319.2, -1331.4]
{'kill': 19, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-408
{'opponent': 0, 'kill': 20, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-319
{'kill': 18, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-325
['Stop', 'North', 'South']
[-408, -319, -325]
{'return': 235, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1407.1
{'return': 236, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1320.2
{'return': 211, 'kill': 35, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1602.5
{'return': 234, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1316.2
['Stop', 'East', 'North', 'South']
[-1407.1, -1320.2, -1602.5, -1316.2]
{'kill': 18, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-397
{'kill': 19, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-308
{'kill': 19, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-306
{'opponent': 0, 'kill': 17, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-290
['Stop', 'East', 'North', 'South']
[-397, -308, -306, -290]
{'return': 234, 'kill': 3, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1424.3
{'return': 235, 'opponent': 0, 'kill': 2, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1319.2
{'return': 233, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1331.4
['Stop', 'North', 'South']
[-1424.3, -1319.2, -1331.4]
{'kill': 16, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-378
{'opponent': 0, 'kill': 17, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-289
{'kill': 15, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-295
['Stop', 'North', 'South']
[-378, -289, -295]
{'return': 235, 'kill': 1, 'stop': 1, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1407.1
{'return': 236, 'kill': 2, 'heuristicValue': 828, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1320.2
{'return': 211, 'kill': 33, 'heuristicValue': 827, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1582.3
{'return': 234, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1316.2
['Stop', 'East', 'North', 'South']
[-1407.1, -1320.2, -1582.3, -1316.2]
{'kill': 16, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-377
{'kill': 17, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-288
{'kill': 17, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-286
{'opponent': 0, 'kill': 15, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-270
['Stop', 'East', 'North', 'South']
[-377, -288, -286, -270]
{'return': 234, 'kill': 1, 'stop': 1, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1404.1
{'return': 211, 'opponent': 0, 'kill': 32, 'heuristicValue': 827, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1574.2
{'return': 233, 'kill': 2, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1311.2
['Stop', 'North', 'South']
[-1404.1, -1574.2, -1311.2]
{'kill': 16, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-378
{'opponent': 0, 'kill': 17, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-289
{'kill': 15, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-295
['Stop', 'North', 'South']
[-378, -289, -295]
{'return': 233, 'kill': 3, 'stop': 1, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1421.3
{'return': 234, 'kill': 4, 'heuristicValue': 826, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1334.4
{'return': 234, 'opponent': 0, 'kill': 2, 'heuristicValue': 826, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1316.2
{'return': 232, 'kill': 2, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1308.2
['Stop', 'East', 'North', 'South']
[-1421.3, -1334.4, -1316.2, -1308.2]
{'kill': 16, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-377
{'kill': 17, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-288
{'kill': 17, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-286
{'opponent': 0, 'kill': 15, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-270
['Stop', 'East', 'North', 'South']
[-377, -288, -286, -270]
{'return': 231, 'kill': 4, 'heuristicValue': 825, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1327.4
{'return': 232, 'kill': 3, 'stop': 1, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1418.3
{'return': 233, 'opponent': 0, 'kill': 2, 'heuristicValue': 825, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1313.2
{'return': 233, 'kill': 2, 'heuristicValue': 823, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1309.2
['West', 'Stop', 'North', 'South']
[-1327.4, -1418.3, -1313.2, -1309.2]
{'kill': 16, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-378
{'opponent': 0, 'kill': 17, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-289
{'kill': 15, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-295
['Stop', 'North', 'South']
[-378, -289, -295]
{'return': 233, 'kill': 3, 'stop': 1, 'heuristicValue': 823, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1419.3
{'return': 234, 'kill': 4, 'heuristicValue': 824, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1332.4
{'return': 232, 'opponent': 0, 'kill': 4, 'heuristicValue': 824, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1330.4
{'return': 234, 'kill': 2, 'heuristicValue': 822, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1310.2
['Stop', 'East', 'North', 'South']
[-1419.3, -1332.4, -1330.4, -1310.2]
{'kill': 18, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-397
{'kill': 19, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-308
{'kill': 19, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-306
{'opponent': 0, 'kill': 17, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-290
['Stop', 'East', 'North', 'South']
[-397, -308, -306, -290]
{'return': 233, 'kill': 2, 'heuristicValue': 821, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1307.2
{'return': 234, 'kill': 3, 'stop': 1, 'heuristicValue': 822, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1420.3
{'return': 235, 'kill': 4, 'heuristicValue': 823, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1333.4
{'return': 233, 'opponent': 0, 'kill': 4, 'heuristicValue': 823, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1331.4
['West', 'Stop', 'East', 'North']
[-1307.2, -1420.3, -1333.4, -1331.4]
{'kill': 18, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-398
{'opponent': 0, 'kill': 19, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-309
{'kill': 17, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-315
['Stop', 'North', 'South']
[-398, -309, -315]
{'return': 232, 'kill': 4, 'heuristicValue': 822, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1326.4
{'return': 233, 'kill': 3, 'stop': 1, 'heuristicValue': 821, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1417.3
{'return': 234, 'opponent': 0, 'kill': 4, 'heuristicValue': 822, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1332.4
{'return': 234, 'kill': 2, 'heuristicValue': 820, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1308.2
['West', 'Stop', 'East', 'South']
[-1326.4, -1417.3, -1332.4, -1308.2]
{'kill': 20, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-417
{'kill': 21, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-328
{'kill': 21, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-326
{'opponent': 0, 'kill': 19, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-310
['Stop', 'East', 'North', 'South']
[-417, -328, -326, -310]
{'return': 234, 'kill': 3, 'stop': 1, 'heuristicValue': 820, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1418.3
{'return': 233, 'opponent': 0, 'kill': 4, 'heuristicValue': 821, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1329.4
{'return': 235, 'kill': 2, 'heuristicValue': 819, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1309.2
['Stop', 'North', 'South']
[-1418.3, -1329.4, -1309.2]
{'kill': 20, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-418
{'opponent': 0, 'kill': 21, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-329
{'kill': 19, 'heuristicValue': 145, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-335
['Stop', 'North', 'South']
[-418, -329, -335]
{'return': 236, 'kill': 2, 'heuristicValue': 818, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1310.2
{'return': 235, 'kill': 3, 'stop': 1, 'heuristicValue': 819, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1419.3
{'return': 236, 'kill': 4, 'heuristicValue': 820, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1332.4
{'return': 234, 'opponent': 0, 'kill': 4, 'heuristicValue': 820, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1330.4
['West', 'Stop', 'East', 'North']
[-1310.2, -1419.3, -1332.4, -1330.4]
{'kill': 22, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-437
{'kill': 23, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-348
{'kill': 23, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-346
{'opponent': 0, 'kill': 21, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-330
['Stop', 'East', 'North', 'South']
[-437, -348, -346, -330]
{'return': 237, 'kill': 2, 'heuristicValue': 817, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1311.2
{'return': 236, 'kill': 3, 'stop': 1, 'heuristicValue': 818, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1420.3
{'return': 235, 'opponent': 0, 'kill': 4, 'heuristicValue': 819, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1331.4
['West', 'Stop', 'East']
[-1311.2, -1420.3, -1331.4]
{'kill': 0, 'stop': 1, 'heuristicValue': 118}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'kill': 0, 'heuristicValue': 145}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-145
['Stop', 'North', 'South']
[-218, -119, -145]
{'return': 238, 'kill': 0, 'heuristicValue': 816, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1284.0
{'return': 237, 'kill': 0, 'stop': 1, 'heuristicValue': 817, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1379.0
{'return': 236, 'opponent': 4, 'kill': 0, 'heuristicValue': 818, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1276.0
['West', 'Stop', 'East']
[-1284.0, -1379.0, -1276.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 117}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'kill': 0, 'heuristicValue': 118}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'heuristicValue': 116}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
['Stop', 'East', 'North', 'South']
[-217, -118, -116, -120]
{'return': 237, 'opponent': 4, 'kill': 0, 'heuristicValue': 817, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1277.0
{'return': 236, 'kill': 0, 'stop': 1, 'heuristicValue': 818}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.0
{'return': 235, 'kill': 0, 'heuristicValue': 819}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1289.0
['West', 'Stop', 'East']
[-1277.0, -1390.0, -1289.0]
{'kill': 0, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'kill': 0, 'stop': 1, 'heuristicValue': 116}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['West', 'Stop', 'South']
[-115, -216, -119]
{'return': 238, 'kill': 0, 'heuristicValue': 816, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1276.0
{'return': 237, 'kill': 0, 'stop': 1, 'heuristicValue': 817}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1391.0
{'return': 236, 'kill': 0, 'heuristicValue': 818, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1292.0
['West', 'Stop', 'East']
[-1276.0, -1391.0, -1292.0]
{'kill': 0, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['West', 'Stop', 'East']
[-114, -215, -118]
{'return': 239, 'kill': 0, 'heuristicValue': 815, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1277.0
{'return': 238, 'kill': 0, 'stop': 1, 'heuristicValue': 816}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1392.0
{'return': 237, 'kill': 0, 'heuristicValue': 817, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1293.0
['West', 'Stop', 'East']
[-1277.0, -1392.0, -1293.0]
{'kill': 0, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 0, 'stop': 1, 'heuristicValue': 114}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'heuristicValue': 115}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'East', 'South']
[-113, -214, -117, -115]
{'return': 238, 'kill': 0, 'heuristicValue': 814, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1274.0
{'return': 239, 'kill': 0, 'stop': 1, 'heuristicValue': 815}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1393.0
{'return': 238, 'kill': 0, 'heuristicValue': 816, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1294.0
['West', 'Stop', 'East']
[-1274.0, -1393.0, -1294.0]
{'kill': 0, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
{'kill': 0, 'stop': 1, 'heuristicValue': 113}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['West', 'Stop', 'East']
[-112, -213, -116]
{'return': 237, 'kill': 0, 'heuristicValue': 813, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1271.0
{'return': 238, 'kill': 0, 'stop': 1, 'heuristicValue': 814}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1390.0
{'return': 239, 'kill': 0, 'heuristicValue': 815, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1295.0
{'return': 239, 'kill': 0, 'heuristicValue': 815}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1293.0
['West', 'Stop', 'East', 'North']
[-1271.0, -1390.0, -1295.0, -1293.0]
{'kill': 0, 'heuristicValue': 111}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
{'kill': 0, 'stop': 1, 'heuristicValue': 112}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'East']
[-111, -212, -115]
{'return': 236, 'kill': 0, 'heuristicValue': 812, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1268.0
{'return': 237, 'kill': 0, 'stop': 1, 'heuristicValue': 813}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1387.0
{'return': 238, 'kill': 0, 'heuristicValue': 814, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1292.0
['West', 'Stop', 'East']
[-1268.0, -1387.0, -1292.0]
{'kill': 0, 'heuristicValue': 108}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-108
{'kill': 0, 'stop': 1, 'heuristicValue': 109}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-209
{'kill': 0, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
['West', 'Stop', 'East']
[-108, -209, -112]
{'return': 35, 'kill': 0, 'stop': 1, 'heuristicValue': 780}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-950.0
{'return': 36, 'kill': 0, 'heuristicValue': 781, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-855.0
{'return': 34, 'kill': 0, 'heuristicValue': 779, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-831.0
['Stop', 'East', 'North']
[-950.0, -855.0, -831.0]
{'kill': 0, 'heuristicValue': 107}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-107
{'kill': 0, 'stop': 1, 'heuristicValue': 108}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-208
{'kill': 0, 'heuristicValue': 109, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
['West', 'Stop', 'East']
[-107, -208, -111]
{'return': 35, 'kill': 0, 'heuristicValue': 778, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-832.0
{'return': 34, 'kill': 0, 'stop': 1, 'heuristicValue': 779, 'opponent': 3}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-935.0
{'return': 33, 'kill': 0, 'heuristicValue': 780, 'opponent': 2}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-838.0
{'return': 35, 'opponent': 4, 'kill': 0, 'heuristicValue': 780, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-836.0
['West', 'Stop', 'North', 'South']
[-832.0, -935.0, -838.0, -836.0]
{'kill': 0, 'heuristicValue': 108}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-108
{'kill': 0, 'stop': 1, 'heuristicValue': 107}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-207
{'kill': 0, 'heuristicValue': 108, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
{'kill': 0, 'heuristicValue': 106}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-106
['West', 'Stop', 'East', 'South']
[-108, -207, -110, -106]
{'return': 36, 'kill': 0, 'heuristicValue': 743}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-815.0
{'return': 35, 'kill': 0, 'stop': 1, 'heuristicValue': 744}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-914.0
{'return': 34, 'opponent': 4, 'kill': 0, 'heuristicValue': 745, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-799.0
['West', 'Stop', 'East']
[-815.0, -914.0, -799.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 106}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-206
{'kill': 0, 'heuristicValue': 107, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-109
{'kill': 0, 'heuristicValue': 105}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-105
['Stop', 'North', 'South']
[-206, -109, -105]
{'return': 35, 'kill': 0, 'heuristicValue': 744, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-816.0
{'return': 34, 'kill': 0, 'stop': 1, 'heuristicValue': 745}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-913.0
{'return': 33, 'kill': 0, 'heuristicValue': 746, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-796.0
{'return': 35, 'kill': 0, 'heuristicValue': 746}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-816.0
['West', 'Stop', 'North', 'South']
[-816.0, -913.0, -796.0, -816.0]
{'kill': 0, 'heuristicValue': 104}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-104
{'kill': 0, 'stop': 1, 'heuristicValue': 105}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-205
{'kill': 0, 'heuristicValue': 106}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-106
{'kill': 0, 'heuristicValue': 106, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-108
['West', 'Stop', 'East', 'North']
[-104, -205, -106, -108]
{'return': 33, 'kill': 0, 'stop': 1, 'heuristicValue': 746}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-912.0
{'return': 32, 'kill': 0, 'heuristicValue': 727, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-775.0
{'return': 34, 'kill': 0, 'heuristicValue': 745, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-815.0
['Stop', 'North', 'South']
[-912.0, -775.0, -815.0]
{'kill': 0, 'heuristicValue': 103}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-103
{'kill': 0, 'stop': 1, 'heuristicValue': 104}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-204
{'kill': 0, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-107
{'kill': 0, 'heuristicValue': 105}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-105
['West', 'Stop', 'East', 'South']
[-103, -204, -107, -105]
{'return': 33, 'kill': 0, 'heuristicValue': 720}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-786.0
{'return': 32, 'kill': 0, 'stop': 1, 'heuristicValue': 719}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-883.0
{'return': 31, 'kill': 0, 'heuristicValue': 720}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-782.0
{'return': 31, 'kill': 0, 'heuristicValue': 718, 'opponent': 4}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-764.0
{'return': 33, 'kill': 0, 'heuristicValue': 738, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-806.0
['West', 'Stop', 'East', 'North', 'South']
[-786.0, -883.0, -782.0, -764.0, -806.0]
{'kill': 16, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-363
{'opponent': 0, 'kill': 15, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-256
{'kill': 15, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
['Stop', 'East', 'South']
[-363, -256, -252]
{'return': 32, 'kill': 6, 'heuristicValue': 719, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-843.6
{'return': 31, 'kill': 5, 'stop': 1, 'heuristicValue': 718, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-930.5
{'return': 30, 'kill': 4, 'heuristicValue': 719, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-819.4
{'return': 30, 'kill': 4, 'heuristicValue': 717, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-817.4
{'return': 32, 'opponent': 0, 'kill': 6, 'heuristicValue': 719, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-845.6
['West', 'Stop', 'East', 'North', 'South']
[-843.6, -930.5, -819.4, -817.4, -845.6]
{'kill': 17, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-271
{'kill': 16, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-362
{'kill': 15, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-253
{'opponent': 0, 'kill': 17, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-275
['West', 'Stop', 'East', 'North']
[-271, -362, -253, -275]
{'return': 30, 'kill': 5, 'stop': 1, 'heuristicValue': 700, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-910.5
{'return': 29, 'kill': 4, 'heuristicValue': 699, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-797.4
{'return': 31, 'opponent': 0, 'kill': 6, 'heuristicValue': 701, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-825.6
['Stop', 'North', 'South']
[-910.5, -797.4, -825.6]
{'opponent': 0, 'kill': 17, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
{'kill': 16, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-363
{'kill': 17, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
{'kill': 15, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
['West', 'Stop', 'North', 'South']
[-274, -363, -274, -252]
{'return': 30, 'kill': 6, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-809.6
{'return': 29, 'kill': 5, 'stop': 1, 'heuristicValue': 690, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-898.5
{'return': 28, 'kill': 4, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-787.4
{'return': 30, 'kill': 6, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-809.6
{'return': 30, 'opponent': 0, 'kill': 6, 'heuristicValue': 691, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-813.6
['West', 'Stop', 'East', 'North', 'South']
[-809.6, -898.5, -787.4, -809.6, -813.6]
{'kill': 16, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-362
{'kill': 15, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-253
{'opponent': 0, 'kill': 17, 'heuristicValue': 101, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-273
{'kill': 17, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-269
['Stop', 'East', 'North', 'South']
[-362, -253, -273, -269]
{'return': 29, 'opponent': 0, 'kill': 6, 'heuristicValue': 690, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-810.6
{'return': 28, 'kill': 5, 'stop': 1, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-897.5
{'return': 27, 'kill': 4, 'heuristicValue': 692, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-786.4
['West', 'Stop', 'East']
[-810.6, -897.5, -786.4]
{'opponent': 0, 'kill': 17, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
{'kill': 16, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-363
{'kill': 15, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
['West', 'Stop', 'East']
[-274, -363, -254]
{'return': 28, 'opponent': 0, 'kill': 6, 'heuristicValue': 691, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-809.6
{'return': 27, 'kill': 5, 'stop': 1, 'heuristicValue': 692, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-896.5
{'return': 26, 'kill': 4, 'heuristicValue': 693, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-785.4
{'return': 26, 'kill': 4, 'heuristicValue': 693, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-785.4
['West', 'Stop', 'East', 'North']
[-809.6, -896.5, -785.4, -785.4]
{'opponent': 0, 'kill': 17, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-275
{'kill': 16, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-364
{'kill': 15, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-251
['West', 'Stop', 'East']
[-275, -364, -251]
{'return': 228, 'opponent': 0, 'kill': 6, 'heuristicValue': 692, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1210.6
{'return': 227, 'kill': 5, 'stop': 1, 'heuristicValue': 693, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1297.5
{'return': 226, 'kill': 4, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1186.4
{'return': 228, 'kill': 6, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1210.6
['West', 'Stop', 'North', 'South']
[-1210.6, -1297.5, -1186.4, -1210.6]
{'opponent': 0, 'kill': 17, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-276
{'kill': 16, 'stop': 1, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-361
{'kill': 17, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-272
{'kill': 15, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
['West', 'Stop', 'North', 'South']
[-276, -361, -272, -250]
{'return': 227, 'kill': 6, 'heuristicValue': 693, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1207.6
{'return': 226, 'kill': 5, 'stop': 1, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1296.5
{'return': 225, 'kill': 4, 'heuristicValue': 695, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1185.4
{'return': 227, 'opponent': 0, 'kill': 6, 'heuristicValue': 693, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1209.6
['West', 'Stop', 'North', 'South']
[-1207.6, -1296.5, -1185.4, -1209.6]
{'kill': 15, 'stop': 1, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-350
{'opponent': 0, 'kill': 16, 'heuristicValue': 101, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-263
{'kill': 14, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
['Stop', 'North', 'South']
[-350, -263, -239]
{'return': 226, 'kill': 4, 'heuristicValue': 694, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1186.4
{'return': 225, 'kill': 3, 'stop': 1, 'heuristicValue': 695, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1275.3
{'return': 224, 'kill': 2, 'heuristicValue': 696, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1164.2
{'return': 226, 'opponent': 0, 'kill': 4, 'heuristicValue': 694, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1188.4
['West', 'Stop', 'North', 'South']
[-1186.4, -1275.3, -1164.2, -1188.4]
{'kill': 12, 'heuristicValue': 98, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 13, 'stop': 1, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-329
{'opponent': 0, 'kill': 14, 'heuristicValue': 100, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
['West', 'Stop', 'North']
[-218, -329, -242]
{'return': 225, 'kill': 4, 'heuristicValue': 695, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1185.4
{'return': 224, 'kill': 3, 'stop': 1, 'heuristicValue': 696, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1274.3
{'return': 223, 'kill': 2, 'heuristicValue': 697, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1163.2
{'return': 225, 'opponent': 0, 'kill': 4, 'heuristicValue': 695, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1187.4
['West', 'Stop', 'East', 'South']
[-1185.4, -1274.3, -1163.2, -1187.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 98, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-328
{'opponent': 0, 'kill': 14, 'heuristicValue': 99, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-241
{'kill': 12, 'heuristicValue': 97, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
['Stop', 'East', 'South']
[-328, -241, -217]
{'return': 224, 'opponent': 0, 'kill': 4, 'heuristicValue': 696, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1186.4
{'return': 223, 'kill': 3, 'stop': 1, 'heuristicValue': 697, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1273.3
{'return': 222, 'kill': 2, 'heuristicValue': 698, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1162.2
['West', 'Stop', 'East']
[-1186.4, -1273.3, -1162.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 97, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-327
{'opponent': 0, 'kill': 14, 'heuristicValue': 98, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-240
{'kill': 12, 'heuristicValue': 96, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
['Stop', 'North', 'South']
[-327, -240, -216]
{'return': 223, 'opponent': 0, 'kill': 4, 'heuristicValue': 663, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1151.4
{'return': 222, 'kill': 3, 'stop': 1, 'heuristicValue': 664, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1238.3
{'return': 223, 'kill': 2, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1131.2
{'return': 221, 'kill': 4, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1147.4
{'return': 223, 'kill': 2, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1131.2
['West', 'Stop', 'East', 'North', 'South']
[-1151.4, -1238.3, -1131.2, -1147.4, -1131.2]
{'return': 30, 'kill': 13, 'stop': 1, 'heuristicValue': 96, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-386
{'return': 29, 'kill': 12, 'heuristicValue': 95, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-273
{'return': 31, 'opponent': 0, 'kill': 14, 'heuristicValue': 97, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-301
{'return': 29, 'kill': 12, 'heuristicValue': 95, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-273
['Stop', 'East', 'North', 'South']
[-386, -273, -301, -273]
{'return': 198, 'opponent': 0, 'kill': 4, 'heuristicValue': 664, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1102.4
{'return': 199, 'kill': 3, 'stop': 1, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1193.3
{'return': 200, 'kill': 2, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1086.2
['West', 'Stop', 'South']
[-1102.4, -1193.3, -1086.2]
{'return': 30, 'opponent': 0, 'kill': 14, 'heuristicValue': 96, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-298
{'return': 29, 'kill': 13, 'stop': 1, 'heuristicValue': 95, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-383
{'return': 28, 'kill': 12, 'heuristicValue': 94, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-270
['West', 'Stop', 'South']
[-298, -383, -270]
{'return': 197, 'kill': 4, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1099.4
{'return': 198, 'kill': 3, 'stop': 1, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1192.3
{'return': 197, 'opponent': 0, 'kill': 4, 'heuristicValue': 665, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1101.4
{'return': 199, 'kill': 2, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1085.2
['West', 'Stop', 'North', 'South']
[-1099.4, -1192.3, -1101.4, -1085.2]
{'return': 29, 'kill': 14, 'heuristicValue': 95, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-293
{'return': 28, 'kill': 13, 'stop': 1, 'heuristicValue': 94, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-380
{'return': 27, 'kill': 12, 'heuristicValue': 95, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-269
{'return': 29, 'opponent': 0, 'kill': 14, 'heuristicValue': 95, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-295
{'return': 29, 'kill': 14, 'heuristicValue': 93, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-291
['West', 'Stop', 'East', 'North', 'South']
[-293, -380, -269, -295, -291]
{'return': 163, 'kill': 3, 'stop': 1, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1123.3
{'return': 162, 'opponent': 0, 'kill': 4, 'heuristicValue': 666, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1032.4
{'return': 164, 'kill': 2, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1016.2
['Stop', 'North', 'South']
[-1123.3, -1032.4, -1016.2]
{'return': 28, 'opponent': 0, 'kill': 14, 'heuristicValue': 94, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-292
{'return': 27, 'kill': 13, 'stop': 1, 'heuristicValue': 95, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-379
{'return': 26, 'kill': 12, 'heuristicValue': 96, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-268
['West', 'Stop', 'East']
[-292, -379, -268]
{'return': 165, 'kill': 2, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1017.2
{'return': 164, 'kill': 3, 'stop': 1, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1126.3
{'return': 163, 'opponent': 0, 'kill': 4, 'heuristicValue': 667, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1035.4
['West', 'Stop', 'North']
[-1017.2, -1126.3, -1035.4]
{'return': 27, 'opponent': 0, 'kill': 14, 'heuristicValue': 95, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-291
{'return': 26, 'kill': 13, 'stop': 1, 'heuristicValue': 96, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-378
{'return': 25, 'kill': 12, 'heuristicValue': 97, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
{'return': 25, 'kill': 12, 'heuristicValue': 97, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
['West', 'Stop', 'East', 'North']
[-291, -378, -267, -267]
{'return': 165, 'kill': 3, 'stop': 1, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1127.3
{'return': 164, 'opponent': 0, 'kill': 4, 'heuristicValue': 668, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1038.4
{'return': 166, 'kill': 2, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1018.2
['Stop', 'East', 'South']
[-1127.3, -1038.4, -1018.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 96, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'kill': 13, 'stop': 1, 'heuristicValue': 97, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-327
{'kill': 12, 'heuristicValue': 98, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'kill': 14, 'heuristicValue': 96, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
['West', 'Stop', 'North', 'South']
[-238, -327, -218, -236]
{'return': 166, 'kill': 3, 'stop': 1, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1128.3
{'return': 165, 'opponent': 0, 'kill': 4, 'heuristicValue': 667, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1039.4
{'return': 167, 'kill': 2, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1019.2
['Stop', 'North', 'South']
[-1128.3, -1039.4, -1019.2]
{'kill': 14, 'heuristicValue': 97, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-237
{'kill': 13, 'stop': 1, 'heuristicValue': 98, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-328
{'kill': 12, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'opponent': 0, 'kill': 14, 'heuristicValue': 97, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
['West', 'Stop', 'North', 'South']
[-237, -328, -219, -239]
{'return': 137, 'kill': 3, 'stop': 1, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1069.3
{'return': 136, 'kill': 2, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-958.2
{'return': 138, 'opponent': 0, 'kill': 4, 'heuristicValue': 666, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-984.4
{'return': 138, 'kill': 4, 'heuristicValue': 664, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-980.4
['Stop', 'East', 'North', 'South']
[-1069.3, -958.2, -984.4, -980.4]
{'kill': 14, 'heuristicValue': 98, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'kill': 13, 'stop': 1, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-329
{'kill': 12, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'opponent': 0, 'kill': 14, 'heuristicValue': 98, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-240
['West', 'Stop', 'North', 'South']
[-238, -329, -220, -240]
{'return': 137, 'opponent': 0, 'kill': 4, 'heuristicValue': 665, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-981.4
{'return': 136, 'kill': 3, 'stop': 1, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.3
{'return': 135, 'kill': 2, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-955.2
['West', 'Stop', 'East']
[-981.4, -1068.3, -955.2]
{'kill': 14, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
{'kill': 13, 'stop': 1, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-330
{'kill': 12, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'opponent': 0, 'kill': 14, 'heuristicValue': 99, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-241
['West', 'Stop', 'East', 'South']
[-239, -330, -221, -241]
{'return': 136, 'opponent': 0, 'kill': 4, 'heuristicValue': 666, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-980.4
{'return': 135, 'kill': 3, 'stop': 1, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1065.3
{'return': 134, 'kill': 2, 'heuristicValue': 664, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-952.2
['West', 'Stop', 'East']
[-980.4, -1065.3, -952.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 100, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
{'kill': 13, 'stop': 1, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-331
{'kill': 12, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
['West', 'Stop', 'East']
[-242, -331, -222]
{'return': 135, 'opponent': 0, 'kill': 4, 'heuristicValue': 665, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-977.4
{'return': 134, 'kill': 3, 'stop': 1, 'heuristicValue': 664, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1062.3
{'return': 133, 'kill': 2, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-951.2
{'return': 135, 'kill': 4, 'heuristicValue': 663, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-973.4
['West', 'Stop', 'North', 'South']
[-977.4, -1062.3, -951.2, -973.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 101, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'kill': 13, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-332
{'kill': 12, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'kill': 14, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'kill': 12, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
['West', 'Stop', 'East', 'North', 'South']
[-243, -332, -223, -243, -223]
{'return': 133, 'kill': 3, 'stop': 1, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1061.3
{'return': 132, 'kill': 2, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-950.2
{'return': 134, 'kill': 4, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-974.4
{'return': 134, 'opponent': 0, 'kill': 4, 'heuristicValue': 664, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-974.4
['Stop', 'East', 'North', 'South']
[-1061.3, -950.2, -974.4, -974.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
{'kill': 12, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'opponent': 0, 'kill': 14, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
['Stop', 'East', 'North']
[-333, -224, -244]
{'return': 133, 'opponent': 0, 'kill': 4, 'heuristicValue': 665, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-973.4
{'return': 132, 'kill': 3, 'stop': 1, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1060.3
{'return': 131, 'kill': 2, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-949.2
['West', 'Stop', 'East']
[-973.4, -1060.3, -949.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 13, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-334
{'kill': 14, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'kill': 12, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
['West', 'Stop', 'North', 'South']
[-245, -334, -243, -225]
{'return': 105, 'opponent': 0, 'kill': 4, 'heuristicValue': 666, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-918.4
{'return': 106, 'kill': 3, 'stop': 1, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1009.3
{'return': 107, 'kill': 2, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-902.2
['West', 'Stop', 'East']
[-918.4, -1009.3, -902.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-335
{'opponent': 0, 'kill': 14, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 12, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
['Stop', 'North', 'South']
[-335, -246, -226]
{'return': 106, 'opponent': 0, 'kill': 4, 'heuristicValue': 667, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-921.4
{'return': 107, 'kill': 3, 'stop': 1, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1012.3
{'return': 108, 'kill': 2, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-905.2
{'return': 108, 'kill': 4, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-923.4
['West', 'Stop', 'North', 'South']
[-921.4, -1012.3, -905.2, -923.4]
{'kill': 12, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 13, 'stop': 1, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-336
{'opponent': 0, 'kill': 14, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-247
['West', 'Stop', 'North']
[-225, -336, -247]
{'return': 108, 'kill': 3, 'stop': 1, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1015.3
{'return': 109, 'kill': 2, 'heuristicValue': 670, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-908.2
{'return': 107, 'opponent': 0, 'kill': 4, 'heuristicValue': 668, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-924.4
['Stop', 'North', 'South']
[-1015.3, -908.2, -924.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-335
{'opponent': 0, 'kill': 14, 'heuristicValue': 106, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
{'kill': 12, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
['Stop', 'East', 'South']
[-335, -248, -224]
{'return': 109, 'kill': 3, 'stop': 1, 'heuristicValue': 670, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1018.3
{'return': 110, 'kill': 2, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-911.2
{'return': 108, 'opponent': 0, 'kill': 4, 'heuristicValue': 669, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-927.4
['Stop', 'North', 'South']
[-1018.3, -911.2, -927.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-334
{'opponent': 0, 'kill': 14, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-247
{'kill': 12, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
['Stop', 'North', 'South']
[-334, -247, -223]
{'return': 110, 'kill': 3, 'stop': 1, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1021.3
{'return': 111, 'kill': 2, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-914.2
{'return': 109, 'opponent': 0, 'kill': 4, 'heuristicValue': 670, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-930.4
['Stop', 'North', 'South']
[-1021.3, -914.2, -930.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
{'kill': 12, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'opponent': 0, 'kill': 14, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 14, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
['Stop', 'East', 'North', 'South']
[-333, -224, -246, -242]
{'return': 111, 'kill': 3, 'stop': 1, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1024.3
{'return': 112, 'kill': 2, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-917.2
{'return': 110, 'opponent': 0, 'kill': 4, 'heuristicValue': 671, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-933.4
['Stop', 'East', 'South']
[-1024.3, -917.2, -933.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 13, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-334
{'kill': 12, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
['West', 'Stop', 'East']
[-245, -334, -223]
{'return': 111, 'opponent': 0, 'kill': 4, 'heuristicValue': 672, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-936.4
{'return': 112, 'kill': 3, 'stop': 1, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1027.3
{'return': 113, 'kill': 2, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-920.2
['West', 'Stop', 'East']
[-936.4, -1027.3, -920.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 13, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
{'kill': 12, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
['West', 'Stop', 'East']
[-246, -333, -222]
{'return': 112, 'opponent': 0, 'kill': 4, 'heuristicValue': 673, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-939.4
{'return': 113, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1030.3
{'return': 114, 'kill': 2, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-923.2
['West', 'Stop', 'South']
[-939.4, -1030.3, -923.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 13, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-332
{'kill': 12, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'kill': 14, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-241
['West', 'Stop', 'North', 'South']
[-245, -332, -223, -241]
{'return': 114, 'kill': 3, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1033.3
{'return': 115, 'kill': 2, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-926.2
{'return': 113, 'opponent': 0, 'kill': 4, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-942.4
{'return': 115, 'kill': 2, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-926.2
['Stop', 'East', 'North', 'South']
[-1033.3, -926.2, -942.4, -926.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
{'kill': 12, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 14, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 14, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
['Stop', 'East', 'North', 'South']
[-333, -224, -244, -244]
{'return': 114, 'opponent': 0, 'kill': 4, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-945.4
{'return': 115, 'kill': 3, 'stop': 1, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1036.3
{'return': 116, 'kill': 4, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-949.4
{'return': 116, 'kill': 2, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-929.2
['West', 'Stop', 'East', 'South']
[-945.4, -1036.3, -949.4, -929.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 13, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-334
{'kill': 12, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
['West', 'Stop', 'East']
[-245, -334, -225]
{'return': 115, 'kill': 4, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-946.4
{'return': 116, 'kill': 3, 'stop': 1, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1039.3
{'return': 117, 'kill': 4, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-952.4
{'return': 115, 'opponent': 0, 'kill': 4, 'heuristicValue': 676, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-948.4
{'return': 117, 'kill': 2, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-932.2
['West', 'Stop', 'East', 'North', 'South']
[-946.4, -1039.3, -952.4, -948.4, -932.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 13, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-335
{'kill': 12, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
['West', 'Stop', 'East']
[-246, -335, -226]
{'return': 117, 'kill': 3, 'stop': 1, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1042.3
{'return': 116, 'opponent': 0, 'kill': 4, 'heuristicValue': 677, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-951.4
{'return': 118, 'kill': 2, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-935.2
['Stop', 'North', 'South']
[-1042.3, -951.4, -935.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-247
{'kill': 13, 'stop': 1, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-336
{'kill': 12, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-227
{'kill': 14, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
['West', 'Stop', 'North', 'South']
[-247, -336, -227, -245]
{'return': 51, 'kill': 4, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-822.4
{'return': 50, 'kill': 3, 'stop': 1, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-909.3
{'return': 49, 'kill': 2, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-798.2
{'return': 51, 'opponent': 0, 'kill': 4, 'heuristicValue': 678, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-822.4
['West', 'Stop', 'East', 'North']
[-822.4, -909.3, -798.2, -822.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-337
{'kill': 12, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-228
{'opponent': 0, 'kill': 14, 'heuristicValue': 106, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-248
['Stop', 'North', 'South']
[-337, -228, -248]
{'return': 50, 'opponent': 0, 'kill': 4, 'heuristicValue': 679, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-821.4
{'return': 49, 'kill': 3, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-908.3
{'return': 48, 'kill': 2, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-797.2
['West', 'Stop', 'South']
[-821.4, -908.3, -797.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-338
{'kill': 12, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-229
{'opponent': 0, 'kill': 14, 'heuristicValue': 107, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-249
['Stop', 'North', 'South']
[-338, -229, -249]
{'return': 48, 'kill': 3, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-907.3
{'return': 49, 'opponent': 0, 'kill': 4, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-820.4
{'return': 47, 'kill': 2, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-796.2
['Stop', 'North', 'South']
[-907.3, -820.4, -796.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-339
{'kill': 12, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-230
{'opponent': 0, 'kill': 14, 'heuristicValue': 108, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-250
['Stop', 'North', 'South']
[-339, -230, -250]
{'return': 47, 'kill': 3, 'stop': 1, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-906.3
{'return': 48, 'opponent': 0, 'kill': 4, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-819.4
{'return': 46, 'kill': 2, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-795.2
['Stop', 'North', 'South']
[-906.3, -819.4, -795.2]
{'kill': 13, 'stop': 1, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-340
{'kill': 12, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-231
{'opponent': 0, 'kill': 14, 'heuristicValue': 109, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-251
['Stop', 'East', 'South']
[-340, -231, -251]
{'return': 47, 'kill': 4, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-818.4
{'return': 46, 'kill': 3, 'stop': 1, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-905.3
{'return': 47, 'opponent': 0, 'kill': 4, 'heuristicValue': 682, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-818.4
{'return': 45, 'kill': 2, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-794.2
['West', 'Stop', 'North', 'South']
[-818.4, -905.3, -818.4, -794.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-252
{'kill': 13, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-341
{'kill': 12, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-232
['West', 'Stop', 'East']
[-252, -341, -232]
{'return': 45, 'kill': 3, 'stop': 1, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.3
{'return': 44, 'kill': 2, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-793.2
{'return': 46, 'opponent': 0, 'kill': 4, 'heuristicValue': 683, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-817.4
{'return': 44, 'kill': 4, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-813.4
['Stop', 'East', 'North', 'South']
[-904.3, -793.2, -817.4, -813.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-253
{'kill': 13, 'stop': 1, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-342
{'kill': 12, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-233
['West', 'Stop', 'South']
[-253, -342, -233]
{'return': 45, 'opponent': 0, 'kill': 4, 'heuristicValue': 684, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-816.4
{'return': 44, 'kill': 3, 'stop': 1, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-903.3
{'return': 43, 'kill': 2, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-792.2
{'return': 43, 'kill': 4, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-812.4
['West', 'Stop', 'East', 'South']
[-816.4, -903.3, -792.2, -812.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-343
{'kill': 12, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
{'opponent': 0, 'kill': 14, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
{'kill': 12, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-234
['Stop', 'East', 'North', 'South']
[-343, -234, -254, -234]
{'return': 44, 'opponent': 0, 'kill': 4, 'heuristicValue': 685, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-815.4
{'return': 43, 'kill': 3, 'stop': 1, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-902.3
{'return': 42, 'kill': 2, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-791.2
{'return': 44, 'kill': 2, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-795.2
{'return': 42, 'kill': 4, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-811.4
['West', 'Stop', 'East', 'North', 'South']
[-815.4, -902.3, -791.2, -795.2, -811.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'kill': 13, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-344
{'kill': 14, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-255
{'kill': 12, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-235
['West', 'Stop', 'East', 'South']
[-255, -344, -255, -235]
{'return': 43, 'opponent': 0, 'kill': 4, 'heuristicValue': 686, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-814.4
{'return': 42, 'kill': 3, 'stop': 1, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-901.3
{'return': 43, 'kill': 2, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-794.2
{'return': 41, 'kill': 4, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-810.4
['West', 'Stop', 'North', 'South']
[-814.4, -901.3, -794.2, -810.4]
{'kill': 14, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-254
{'kill': 13, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-345
{'kill': 14, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-256
{'opponent': 0, 'kill': 14, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-256
{'kill': 12, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-236
['West', 'Stop', 'East', 'North', 'South']
[-254, -345, -256, -256, -236]
{'return': 44, 'kill': 4, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-815.4
{'return': 43, 'kill': 3, 'stop': 1, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.3
{'return': 44, 'kill': 2, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-797.2
{'return': 42, 'opponent': 0, 'kill': 4, 'heuristicValue': 687, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-813.4
['West', 'Stop', 'North', 'South']
[-815.4, -904.3, -797.2, -813.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-346
{'opponent': 0, 'kill': 14, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-257
{'kill': 12, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-237
['Stop', 'North', 'South']
[-346, -257, -237]
{'return': 39, 'kill': 4, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-806.4
{'return': 38, 'kill': 3, 'stop': 1, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-895.3
{'return': 37, 'kill': 2, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-785.2
{'return': 39, 'opponent': 0, 'kill': 4, 'heuristicValue': 688, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-808.4
['West', 'Stop', 'North', 'South']
[-806.4, -895.3, -785.2, -808.4]
{'kill': 14, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
{'kill': 13, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-347
{'kill': 12, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-238
{'opponent': 0, 'kill': 14, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-258
['West', 'Stop', 'East', 'North']
[-258, -347, -238, -258]
{'return': 37, 'kill': 3, 'stop': 1, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-895.3
{'return': 36, 'kill': 2, 'heuristicValue': 690, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-782.2
{'return': 38, 'opponent': 0, 'kill': 4, 'heuristicValue': 689, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-807.4
['Stop', 'North', 'South']
[-895.3, -782.2, -807.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-259
{'kill': 13, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-348
{'kill': 12, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-239
['West', 'Stop', 'South']
[-259, -348, -239]
{'return': 37, 'kill': 4, 'heuristicValue': 691, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-805.4
{'return': 36, 'kill': 3, 'stop': 1, 'heuristicValue': 690, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-892.3
{'return': 35, 'kill': 2, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-779.2
{'return': 37, 'opponent': 0, 'kill': 4, 'heuristicValue': 691, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-807.4
['West', 'Stop', 'North', 'South']
[-805.4, -892.3, -779.2, -807.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-349
{'opponent': 0, 'kill': 14, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-260
{'kill': 12, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-240
['Stop', 'North', 'South']
[-349, -260, -240]
{'return': 36, 'kill': 4, 'heuristicValue': 690, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-802.4
{'return': 35, 'kill': 3, 'stop': 1, 'heuristicValue': 689, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-889.3
{'return': 34, 'kill': 2, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-776.2
{'return': 36, 'opponent': 0, 'kill': 4, 'heuristicValue': 690, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-804.4
['West', 'Stop', 'North', 'South']
[-802.4, -889.3, -776.2, -804.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-350
{'opponent': 0, 'kill': 14, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-261
{'kill': 12, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-241
['Stop', 'North', 'South']
[-350, -261, -241]
{'return': 34, 'kill': 3, 'stop': 1, 'heuristicValue': 688, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-886.3
{'return': 33, 'kill': 2, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-773.2
{'return': 35, 'opponent': 0, 'kill': 4, 'heuristicValue': 689, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-801.4
['Stop', 'North', 'South']
[-886.3, -773.2, -801.4]
{'kill': 14, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-262
{'kill': 13, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-351
{'opponent': 0, 'kill': 14, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-262
{'kill': 12, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
['West', 'Stop', 'North', 'South']
[-262, -351, -262, -242]
{'return': 32, 'kill': 2, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-770.2
{'return': 33, 'kill': 3, 'stop': 1, 'heuristicValue': 687, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-883.3
{'return': 34, 'opponent': 0, 'kill': 4, 'heuristicValue': 688, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-798.4
['West', 'Stop', 'South']
[-770.2, -883.3, -798.4]
{'kill': 13, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-352
{'kill': 12, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-243
{'opponent': 0, 'kill': 14, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-263
{'kill': 14, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-263
['Stop', 'East', 'North', 'South']
[-352, -243, -263, -263]
{'return': 32, 'kill': 3, 'stop': 1, 'heuristicValue': 686, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-880.3
{'return': 33, 'opponent': 0, 'kill': 4, 'heuristicValue': 687, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-795.4
{'return': 31, 'kill': 2, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-767.2
['Stop', 'East', 'North']
[-880.3, -795.4, -767.2]
{'opponent': 0, 'kill': 14, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-264
{'kill': 13, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-353
{'kill': 12, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'kill': 14, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-264
['West', 'Stop', 'East', 'South']
[-264, -353, -244, -264]
{'return': 31, 'kill': 3, 'stop': 1, 'heuristicValue': 685, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-877.3
{'return': 30, 'kill': 2, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-764.2
{'return': 32, 'opponent': 0, 'kill': 4, 'heuristicValue': 686, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-792.4
['Stop', 'North', 'South']
[-877.3, -764.2, -792.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-265
{'kill': 13, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-354
{'kill': 12, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 12, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-245
{'kill': 14, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-265
['West', 'Stop', 'East', 'North', 'South']
[-265, -354, -245, -245, -265]
{'return': 30, 'kill': 3, 'stop': 1, 'heuristicValue': 684, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-874.3
{'return': 29, 'kill': 2, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-761.2
{'return': 31, 'opponent': 0, 'kill': 4, 'heuristicValue': 685, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-789.4
['Stop', 'East', 'South']
[-874.3, -761.2, -789.4]
{'opponent': 0, 'kill': 14, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-266
{'kill': 13, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-355
{'kill': 12, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-246
{'kill': 14, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-266
['West', 'Stop', 'North', 'South']
[-266, -355, -246, -266]
{'return': 30, 'opponent': 0, 'kill': 4, 'heuristicValue': 684, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-786.4
{'return': 29, 'kill': 3, 'stop': 1, 'heuristicValue': 683, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-871.3
{'return': 28, 'kill': 2, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-758.2
['West', 'Stop', 'North']
[-786.4, -871.3, -758.2]
{'kill': 14, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-265
{'kill': 13, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-356
{'kill': 12, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-247
{'opponent': 0, 'kill': 14, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-267
['West', 'Stop', 'North', 'South']
[-265, -356, -247, -267]
{'return': 28, 'kill': 3, 'stop': 1, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-868.3
{'return': 27, 'kill': 2, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-755.2
{'return': 29, 'opponent': 0, 'kill': 4, 'heuristicValue': 683, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-783.4
['Stop', 'North', 'South']
[-868.3, -755.2, -783.4]
{'kill': 14, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-266
{'kill': 13, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-357
{'kill': 12, 'heuristicValue': 154, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-274
{'opponent': 0, 'kill': 14, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-268
['West', 'Stop', 'North', 'South']
[-266, -357, -274, -268]
{'return': 26, 'kill': 2, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-752.2
{'return': 27, 'kill': 3, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-865.3
{'return': 26, 'kill': 2, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-752.2
{'return': 28, 'opponent': 0, 'kill': 4, 'heuristicValue': 682, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-780.4
['West', 'Stop', 'North', 'South']
[-752.2, -865.3, -752.2, -780.4]
{'kill': 15, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-376
{'opponent': 0, 'kill': 14, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-269
{'kill': 16, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-285
['Stop', 'East', 'South']
[-376, -269, -285]
{'return': 25, 'kill': 0, 'heuristicValue': 679}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-729.0
{'return': 26, 'kill': 1, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-842.1
{'return': 27, 'kill': 2, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-755.2
{'return': 27, 'opponent': 0, 'kill': 2, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-757.2
['West', 'Stop', 'North', 'South']
[-729.0, -842.1, -755.2, -757.2]
{'opponent': 0, 'kill': 0, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
{'kill': 0, 'stop': 1, 'heuristicValue': 127, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-227
{'kill': 0, 'heuristicValue': 154, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-154
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
['West', 'Stop', 'North', 'South']
[-128, -227, -154, -126]
{'return': 146, 'kill': 0, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 145, 'kill': 0, 'stop': 1, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1069.0
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 146, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-972.0
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
['West', 'Stop', 'East', 'North', 'South']
[-970.0, -1069.0, -970.0, -972.0, -968.0]
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'stop': 1, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
{'opponent': 0, 'kill': 0, 'heuristicValue': 127, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-129
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
['West', 'Stop', 'North', 'South']
[-125, -226, -129, -125]
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 143, 'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-967.0
{'return': 145, 'opponent': 0, 'kill': 0, 'heuristicValue': 679, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-971.0
['Stop', 'East', 'North']
[-1068.0, -967.0, -971.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'opponent': 0, 'kill': 0, 'heuristicValue': 126, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
{'kill': 0, 'heuristicValue': 126, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
{'kill': 0, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['Stop', 'East', 'North', 'South']
[-225, -128, -126, -124]
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 143, 'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1067.0
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
{'return': 144, 'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
['West', 'Stop', 'North', 'South']
[-970.0, -1067.0, -968.0, -970.0]
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
{'kill': 0, 'stop': 1, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'opponent': 0, 'kill': 0, 'heuristicValue': 125, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-127
{'kill': 0, 'heuristicValue': 125, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
['West', 'Stop', 'East', 'North', 'South']
[-123, -224, -125, -127, -125]
{'return': 145, 'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 145, 'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-971.0
{'return': 143, 'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
['West', 'Stop', 'North', 'South']
[-969.0, -1068.0, -971.0, -969.0]
{'kill': 0, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
{'kill': 0, 'stop': 1, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'opponent': 0, 'kill': 0, 'heuristicValue': 124, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-126
{'kill': 0, 'heuristicValue': 124, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['West', 'Stop', 'East', 'South']
[-122, -223, -126, -124]
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
{'return': 143, 'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1067.0
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 144, 'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
['West', 'Stop', 'North', 'South']
[-968.0, -1067.0, -970.0, -970.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'opponent': 0, 'kill': 0, 'heuristicValue': 123, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-125
{'kill': 0, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
{'kill': 0, 'heuristicValue': 123, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['Stop', 'East', 'North', 'South']
[-222, -125, -121, -123]
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 143, 'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'return': 145, 'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
['Stop', 'East', 'North']
[-1068.0, -969.0, -969.0]
{'kill': 0, 'heuristicValue': 122, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
{'kill': 0, 'stop': 1, 'heuristicValue': 121, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'kill': 0, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'opponent': 0, 'kill': 0, 'heuristicValue': 122, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-124
['West', 'Stop', 'North', 'South']
[-122, -221, -120, -124]
{'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-682.0
{'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-781.0
{'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-680.0
{'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-682.0
['West', 'Stop', 'North', 'South']
[-682.0, -781.0, -680.0, -682.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 120, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'kill': 0, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
{'opponent': 0, 'kill': 0, 'heuristicValue': 121, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-123
['Stop', 'North', 'South']
[-220, -119, -123]
{'return': 145, 'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 145, 'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-971.0
{'return': 143, 'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
['West', 'Stop', 'North', 'South']
[-969.0, -1068.0, -971.0, -969.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 119, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'opponent': 0, 'kill': 0, 'heuristicValue': 120, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-122
['Stop', 'North', 'South']
[-219, -118, -122]
{'return': 146, 'kill': 0, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 145, 'kill': 0, 'stop': 1, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1069.0
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 146, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-972.0
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
['West', 'Stop', 'East', 'North', 'South']
[-970.0, -1069.0, -970.0, -972.0, -968.0]
{'kill': 0, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'stop': 1, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-218
{'opponent': 0, 'kill': 0, 'heuristicValue': 119, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-121
['West', 'Stop', 'South']
[-117, -218, -121]
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 143, 'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-967.0
{'return': 145, 'opponent': 0, 'kill': 0, 'heuristicValue': 679, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-971.0
['Stop', 'East', 'North']
[-1068.0, -967.0, -971.0]
{'kill': 0, 'heuristicValue': 118, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
{'kill': 0, 'stop': 1, 'heuristicValue': 117, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-217
{'opponent': 0, 'kill': 0, 'heuristicValue': 118, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-120
{'kill': 0, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['West', 'Stop', 'East', 'North']
[-118, -217, -120, -116]
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 143, 'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1067.0
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
{'return': 144, 'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
['West', 'Stop', 'North', 'South']
[-970.0, -1067.0, -968.0, -970.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-216
{'kill': 0, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'opponent': 0, 'kill': 0, 'heuristicValue': 117, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-119
['Stop', 'North', 'South']
[-216, -115, -119]
{'return': 145, 'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 145, 'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-971.0
{'return': 143, 'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
['West', 'Stop', 'North', 'South']
[-969.0, -1068.0, -971.0, -969.0]
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'stop': 1, 'heuristicValue': 115, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-215
{'kill': 0, 'heuristicValue': 116, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'opponent': 0, 'kill': 0, 'heuristicValue': 116, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-118
['West', 'Stop', 'East', 'North', 'South']
[-114, -215, -116, -114, -118]
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
{'return': 143, 'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1067.0
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 144, 'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
['West', 'Stop', 'North', 'South']
[-968.0, -1067.0, -970.0, -970.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-214
{'opponent': 0, 'kill': 0, 'heuristicValue': 115, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 0, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
['Stop', 'East', 'North']
[-214, -117, -113]
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 143, 'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'return': 145, 'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
['Stop', 'East', 'North']
[-1068.0, -969.0, -969.0]
{'kill': 0, 'stop': 1, 'heuristicValue': 113, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-213
{'kill': 0, 'heuristicValue': 114, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'kill': 0, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
{'opponent': 0, 'kill': 0, 'heuristicValue': 114, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
['Stop', 'East', 'North', 'South']
[-213, -114, -112, -116]
{'return': 144, 'opponent': 0, 'kill': 0, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
{'return': 143, 'kill': 0, 'stop': 1, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1067.0
{'return': 144, 'kill': 0, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-968.0
{'return': 144, 'kill': 0, 'heuristicValue': 682, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-970.0
['West', 'Stop', 'North', 'South']
[-970.0, -1067.0, -968.0, -970.0]
{'kill': 0, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
{'kill': 0, 'stop': 1, 'heuristicValue': 112, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-212
{'opponent': 0, 'kill': 0, 'heuristicValue': 113, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'South']
[-111, -212, -115]
{'return': 145, 'kill': 0, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
{'return': 144, 'kill': 0, 'stop': 1, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1068.0
{'return': 145, 'kill': 0, 'heuristicValue': 681, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-971.0
{'return': 143, 'opponent': 0, 'kill': 0, 'heuristicValue': 681, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-969.0
['West', 'Stop', 'North', 'South']
[-969.0, -1068.0, -971.0, -969.0]
{'kill': 0, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
{'kill': 0, 'stop': 1, 'heuristicValue': 111, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-211
{'opponent': 0, 'kill': 0, 'heuristicValue': 112, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East']
[-110, -211, -114]
{'return': 146, 'kill': 18, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1151.8
{'return': 145, 'kill': 19, 'stop': 1, 'heuristicValue': 679, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1260.9
{'return': 144, 'opponent': 0, 'kill': 20, 'heuristicValue': 680, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1172.0
{'return': 146, 'kill': 20, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1174.0
{'return': 144, 'kill': 20, 'heuristicValue': 680, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1170.0
['West', 'Stop', 'East', 'North', 'South']
[-1151.8, -1260.9, -1172.0, -1174.0, -1170.0]
{'kill': 26, 'stop': 1, 'heuristicValue': 110, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-470
{'opponent': 0, 'kill': 27, 'heuristicValue': 111, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-383
{'kill': 25, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-359
['Stop', 'East', 'South']
[-470, -383, -359]
{'return': 147, 'kill': 18, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1152.8
{'return': 146, 'kill': 19, 'stop': 1, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1261.9
{'return': 145, 'opponent': 0, 'kill': 20, 'heuristicValue': 679, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1173.0
['West', 'Stop', 'East']
[-1152.8, -1261.9, -1173.0]
{'kill': 26, 'stop': 1, 'heuristicValue': 109, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-469
{'opponent': 0, 'kill': 27, 'heuristicValue': 110, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-382
{'kill': 25, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-358
['Stop', 'North', 'South']
[-469, -382, -358]
{'return': 148, 'kill': 18, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1153.8
{'return': 147, 'kill': 19, 'stop': 1, 'heuristicValue': 677, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1262.9
{'return': 146, 'opponent': 0, 'kill': 20, 'heuristicValue': 678, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1174.0
{'return': 148, 'kill': 18, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1153.8
{'return': 148, 'kill': 20, 'heuristicValue': 678, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1176.0
['West', 'Stop', 'East', 'North', 'South']
[-1153.8, -1262.9, -1174.0, -1153.8, -1176.0]
{'kill': 26, 'stop': 1, 'heuristicValue': 108, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-468
{'opponent': 0, 'kill': 27, 'heuristicValue': 109, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-381
{'kill': 25, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-357
['Stop', 'North', 'South']
[-468, -381, -357]
{'return': 148, 'kill': 19, 'stop': 1, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1263.9
{'return': 147, 'opponent': 0, 'kill': 20, 'heuristicValue': 677, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1175.0
{'return': 149, 'kill': 18, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1154.8
['Stop', 'East', 'North']
[-1263.9, -1175.0, -1154.8]
{'kill': 26, 'stop': 1, 'heuristicValue': 107, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-467
{'opponent': 0, 'kill': 27, 'heuristicValue': 108, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-380
{'kill': 25, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-356
['Stop', 'North', 'South']
[-467, -380, -356]
{'return': 150, 'kill': 18, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1155.8
{'return': 149, 'kill': 19, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1264.9
{'return': 148, 'kill': 20, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1174.0
{'return': 150, 'kill': 20, 'heuristicValue': 676, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1178.0
{'return': 148, 'opponent': 0, 'kill': 20, 'heuristicValue': 676, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1176.0
['West', 'Stop', 'East', 'North', 'South']
[-1155.8, -1264.9, -1174.0, -1178.0, -1176.0]
{'kill': 25, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-355
{'kill': 26, 'stop': 1, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-466
{'opponent': 0, 'kill': 27, 'heuristicValue': 107, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-379
{'kill': 27, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-375
['West', 'Stop', 'North', 'South']
[-355, -466, -379, -375]
{'return': 99, 'kill': 18, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1052.8
{'return': 98, 'kill': 19, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1161.9
{'return': 97, 'opponent': 0, 'kill': 20, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1073.0
['West', 'Stop', 'East']
[-1052.8, -1161.9, -1073.0]
{'kill': 25, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-354
{'kill': 26, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-465
{'opponent': 0, 'kill': 27, 'heuristicValue': 106, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-378
['West', 'Stop', 'East']
[-354, -465, -378]
{'return': 73, 'kill': 18, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-999.8
{'return': 72, 'kill': 19, 'stop': 1, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1108.9
{'return': 71, 'opponent': 0, 'kill': 20, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1020.0
{'return': 73, 'kill': 20, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1022.0
['West', 'Stop', 'East', 'North']
[-999.8, -1108.9, -1020.0, -1022.0]
{'kill': 23, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-333
{'kill': 24, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-444
{'opponent': 0, 'kill': 25, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-357
['West', 'Stop', 'East']
[-333, -444, -357]
{'return': 74, 'kill': 16, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-980.6
{'return': 73, 'kill': 17, 'stop': 1, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1089.7
{'return': 72, 'opponent': 0, 'kill': 18, 'heuristicValue': 673, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1000.8
{'return': 74, 'kill': 18, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1002.8
['West', 'Stop', 'East', 'North']
[-980.6, -1089.7, -1000.8, -1002.8]
{'kill': 22, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-423
{'opponent': 0, 'kill': 23, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-336
{'kill': 23, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-334
{'kill': 21, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-312
['Stop', 'East', 'North', 'South']
[-423, -336, -334, -312]
{'return': 75, 'kill': 14, 'heuristicValue': 670, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.4
{'return': 74, 'kill': 15, 'stop': 1, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1070.5
{'return': 73, 'opponent': 0, 'kill': 16, 'heuristicValue': 672, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-981.6
['West', 'Stop', 'East']
[-961.4, -1070.5, -981.6]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-242
{'opponent': 0, 'kill': 5, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-155
{'kill': 3, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
['West', 'Stop', 'North', 'South']
[-153, -242, -155, -131]
{'return': 76, 'kill': 12, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-942.2
{'return': 75, 'kill': 13, 'stop': 1, 'heuristicValue': 670, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1051.3
{'return': 74, 'opponent': 0, 'kill': 14, 'heuristicValue': 671, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-962.4
{'return': 76, 'kill': 14, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-964.4
['West', 'Stop', 'East', 'North']
[-942.2, -1051.3, -962.4, -964.4]
{'kill': 2, 'stop': 1, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'kill': 3, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'opponent': 0, 'kill': 3, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 1, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
['Stop', 'East', 'North', 'South']
[-221, -132, -134, -110]
{'return': 77, 'kill': 10, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-923.0
{'return': 76, 'kill': 11, 'stop': 1, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1032.1
{'return': 75, 'opponent': 0, 'kill': 12, 'heuristicValue': 670, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-943.2
['West', 'Stop', 'East']
[-923.0, -1032.1, -943.2]
{'kill': 1, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-109
{'kill': 2, 'stop': 1, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'kill': 3, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'opponent': 0, 'kill': 3, 'heuristicValue': 101, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East', 'North']
[-109, -220, -131, -133]
{'return': 78, 'kill': 8, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-903.8
{'return': 77, 'kill': 9, 'stop': 1, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1012.9
{'return': 76, 'opponent': 0, 'kill': 10, 'heuristicValue': 669, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-924.0
{'return': 78, 'kill': 10, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-926.0
['West', 'Stop', 'East', 'North']
[-903.8, -1012.9, -924.0, -926.0]
{'kill': 1, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-110
{'kill': 2, 'stop': 1, 'heuristicValue': 99, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-219
{'opponent': 0, 'kill': 3, 'heuristicValue': 100, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 3, 'heuristicValue': 98, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-128
['West', 'Stop', 'East', 'South']
[-110, -219, -132, -128]
{'return': 79, 'kill': 6, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-884.6
{'return': 78, 'kill': 7, 'stop': 1, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-993.7
{'return': 77, 'opponent': 0, 'kill': 8, 'heuristicValue': 668, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.8
['West', 'Stop', 'East']
[-884.6, -993.7, -904.8]
{'kill': 1, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-111
{'kill': 2, 'stop': 1, 'heuristicValue': 100, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-220
{'opponent': 0, 'kill': 3, 'heuristicValue': 99, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
['West', 'Stop', 'East']
[-111, -220, -131]
{'return': 79, 'kill': 12, 'stop': 1, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-1045.2
{'return': 78, 'opponent': 0, 'kill': 13, 'heuristicValue': 667, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-956.3
{'return': 80, 'kill': 13, 'heuristicValue': 665, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-956.3
{'return': 80, 'kill': 11, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-938.1
['Stop', 'East', 'North', 'South']
[-1045.2, -956.3, -956.3, -938.1]
{'kill': 3, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 2, 'stop': 1, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-221
{'opponent': 0, 'kill': 3, 'heuristicValue': 100, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
['West', 'Stop', 'East', 'North']
[-132, -221, -132, -112]
{'return': 80, 'kill': 5, 'stop': 1, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-977.5
{'return': 79, 'opponent': 0, 'kill': 6, 'heuristicValue': 666, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-886.6
{'return': 81, 'kill': 4, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.4
['Stop', 'North', 'South']
[-977.5, -886.6, -870.4]
{'kill': 2, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'kill': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'opponent': 0, 'kill': 3, 'heuristicValue': 101, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['Stop', 'North', 'South']
[-222, -113, -133]
{'return': 82, 'kill': 6, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-890.6
{'return': 81, 'kill': 5, 'stop': 1, 'heuristicValue': 668, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-980.5
{'return': 82, 'kill': 4, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.4
{'return': 80, 'opponent': 0, 'kill': 6, 'heuristicValue': 667, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-889.6
{'return': 82, 'kill': 6, 'heuristicValue': 666, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-890.6
['West', 'Stop', 'East', 'North', 'South']
[-890.6, -980.5, -873.4, -889.6, -890.6]
{'kill': 2, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'kill': 3, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
{'kill': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'opponent': 0, 'kill': 3, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['Stop', 'East', 'North', 'South']
[-223, -134, -114, -134]
{'return': 81, 'opponent': 0, 'kill': 6, 'heuristicValue': 668, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-892.6
{'return': 82, 'kill': 5, 'stop': 1, 'heuristicValue': 669, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-983.5
{'return': 83, 'kill': 4, 'heuristicValue': 670, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-876.4
{'return': 83, 'kill': 6, 'heuristicValue': 667, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-893.6
['West', 'Stop', 'East', 'South']
[-892.6, -983.5, -876.4, -893.6]
{'kill': 2, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'opponent': 0, 'kill': 3, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['Stop', 'North', 'South']
[-224, -115, -135]
{'return': 82, 'opponent': 0, 'kill': 6, 'heuristicValue': 669, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-895.6
{'return': 83, 'kill': 5, 'stop': 1, 'heuristicValue': 670, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-986.5
{'return': 84, 'kill': 4, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-879.4
['West', 'Stop', 'East']
[-895.6, -986.5, -879.4]
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['Stop', 'East', 'South']
[-225, -116, -136]
{'return': 83, 'opponent': 0, 'kill': 6, 'heuristicValue': 670, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-898.6
{'return': 84, 'kill': 5, 'stop': 1, 'heuristicValue': 671, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-989.5
{'return': 85, 'kill': 4, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-882.4
['West', 'Stop', 'South']
[-898.6, -989.5, -882.4]
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 2, 'stop': 1, 'heuristicValue': 106, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-226
{'kill': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'North']
[-137, -226, -115]
{'return': 85, 'kill': 5, 'stop': 1, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-992.5
{'return': 86, 'kill': 4, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-885.4
{'return': 84, 'opponent': 0, 'kill': 6, 'heuristicValue': 671, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-901.6
['Stop', 'East', 'North']
[-992.5, -885.4, -901.6]
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'opponent': 0, 'kill': 3, 'heuristicValue': 106, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-138
['Stop', 'North', 'South']
[-225, -114, -138]
{'return': 85, 'opponent': 0, 'kill': 4, 'heuristicValue': 672, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-884.4
{'return': 86, 'kill': 3, 'stop': 1, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-975.3
{'return': 87, 'kill': 2, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-868.2
['West', 'Stop', 'East']
[-884.4, -975.3, -868.2]
{'kill': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 2, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
['West', 'Stop', 'North', 'South']
[-113, -224, -113, -137]
{'return': 86, 'opponent': 0, 'kill': 4, 'heuristicValue': 673, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-887.4
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'kill': 2, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-871.2
['West', 'Stop', 'North']
[-887.4, -978.3, -871.2]
{'kill': 2, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-112
['Stop', 'East', 'North']
[-223, -136, -112]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 9, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-944.9
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -944.9, -870.2]
{'kill': 3, 'heuristicValue': 101, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-131
{'kill': 2, 'stop': 1, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-222
{'kill': 3, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'opponent': 0, 'kill': 3, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['West', 'Stop', 'East', 'North', 'South']
[-131, -222, -133, -113, -135]
{'return': 86, 'kill': 4, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-885.4
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-885.4, -978.3, -873.2]
{'kill': 2, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'kill': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'opponent': 0, 'kill': 3, 'heuristicValue': 102, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-134
['Stop', 'North', 'South']
[-223, -114, -134]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 9, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-944.9
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -944.9, -870.2]
{'kill': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-113
{'kill': 2, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 3, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'opponent': 0, 'kill': 3, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
['West', 'Stop', 'East', 'North', 'South']
[-113, -224, -135, -141, -135]
{'return': 86, 'kill': 4, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-885.4
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-885.4, -978.3, -873.2]
{'kill': 3, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 2, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'opponent': 0, 'kill': 1, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-116
{'kill': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
['West', 'Stop', 'East', 'North']
[-132, -223, -116, -114]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 9, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-944.9
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -944.9, -870.2]
{'kill': 3, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 2, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'opponent': 0, 'kill': 1, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
['West', 'Stop', 'East', 'South']
[-133, -224, -141, -115]
{'return': 86, 'kill': 2, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-865.2
{'return': 87, 'kill': 1, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-958.1
{'return': 88, 'kill': 7, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-923.7
['West', 'Stop', 'North']
[-865.2, -958.1, -923.7]
{'kill': 3, 'heuristicValue': 102, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-132
{'kill': 2, 'stop': 1, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-223
{'kill': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-114
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
['West', 'Stop', 'East', 'North']
[-132, -223, -114, -136]
{'return': 85, 'kill': 3, 'heuristicValue': 672, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-872.3
{'return': 86, 'kill': 3, 'stop': 1, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-975.3
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['West', 'Stop', 'East']
[-872.3, -975.3, -870.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 103, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-135
{'kill': 2, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'kill': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-115
{'kill': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 3, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East', 'North', 'South']
[-135, -224, -115, -141, -133]
{'return': 86, 'opponent': 0, 'kill': 3, 'heuristicValue': 673, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-877.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'kill': 2, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-871.2
['West', 'Stop', 'North']
[-877.3, -978.3, -871.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 7, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-924.7
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -924.7, -870.2]
{'kill': 3, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
{'kill': 2, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-224
{'opponent': 0, 'kill': 1, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-117
{'kill': 1, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-141
{'kill': 3, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-133
['West', 'Stop', 'East', 'North', 'South']
[-133, -224, -117, -141, -133]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
{'kill': 4, 'stop': 1, 'heuristicValue': 104, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-244
{'opponent': 0, 'kill': 3, 'heuristicValue': 105, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-137
{'kill': 3, 'heuristicValue': 131, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-161
{'kill': 5, 'heuristicValue': 103, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-153
['West', 'Stop', 'East', 'North', 'South']
[-153, -244, -137, -161, -153]
{'return': 86, 'kill': 3, 'heuristicValue': 673, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-875.3
{'return': 87, 'kill': 3, 'stop': 1, 'heuristicValue': 674, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-978.3
{'return': 88, 'opponent': 0, 'kill': 2, 'heuristicValue': 675, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-873.2
['West', 'Stop', 'North']
[-875.3, -978.3, -873.2]
{'opponent': 0, 'kill': 3, 'heuristicValue': 104, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-136
{'kill': 2, 'stop': 1, 'heuristicValue': 105, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-225
{'kill': 1, 'heuristicValue': 132, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10, 'capsules': -1.1, 'heuristicValue': -1, 'opponent': 4}
-142
['West', 'Stop', 'North']
[-136, -225, -142]
{'return': 88, 'kill': 1, 'stop': 1, 'heuristicValue': 675, 'opponent': 0}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-961.1
{'return': 89, 'kill': 5, 'heuristicValue': 676}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-904.5
{'return': 87, 'opponent': 0, 'kill': 2, 'heuristicValue': 674, 'reverse': 1}
{'return': -2, 'reverse': -2, 'stop': -100, 'kill': -10.1, 'heuristicValue': -1, 'opponent': 4}
-870.2
['Stop', 'East', 'South']
[-961.1, -904.5, -870.2]
Time is up.
The Red team wins by 11 points.
recorded

